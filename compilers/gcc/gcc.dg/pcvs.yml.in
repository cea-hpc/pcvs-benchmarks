---
test_20000108-1_1:
  build:
    cflags: ' -O3'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20000108-1.c'
    sources:
      binary: ./20000108-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000111-1_2:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20000111-1.c'
    sources:
      binary: 20000111-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000623-1_3:
  build:
    cflags: ' -O3 -fno-strict-aliasing'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20000623-1.c'
    sources:
      binary: ./20000623-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fno-strict-aliasing"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000629-1_4:
  build:
    cflags: ' -O2 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20000629-1.c'
    sources:
      binary: 20000629-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000707-1_5:
  build:
    cflags: ' -O2 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20000707-1.c'
    sources:
      binary: 20000707-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000906-1_6:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20000906-1.c'
    sources:
      binary: ./20000906-1.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000926-1_7:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20000926-1.c'
    sources:
      binary: 20000926-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*((excess elements)|(near initialization)" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20001009-1_8:
  build:
    cflags: ' -O2 -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20001009-1.c'
    sources:
      binary: 20001009-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20001012-1_9:
  build:
    cflags: ' -O2 -fpic'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20001012-1.c'
    sources:
      binary: ./20001012-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20001012-2_10:
  build:
    cflags: ' -O2 -fpic'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20001012-2.c'
    sources:
      binary: ./20001012-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20001023-1_11:
  build:
    cflags: ' -O2 -fomit-frame-pointer'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20001023-1.c'
    sources:
      binary: ./20001023-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fomit-frame-pointer"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20001108-1_12:
  build:
    cflags: ' -O2 -fomit-frame-pointer'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20001108-1.c'
    sources:
      binary: ./20001108-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fomit-frame-pointer"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20001116-1_13:
  build:
    cflags: ' -Wempty-body -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20001116-1.c'
    sources:
      binary: 20001116-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - -Wempty-body
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(empty body in an))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20001117-1_14:
  build:
    cflags: ' -O2 -finstrument-functions'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20001117-1.c'
    sources:
      binary: ./20001117-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -finstrument-functions"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20001201-1_15:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20001201-1.c'
    sources:
      binary: 20001201-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20001228-1_16:
  build:
    cflags: ' -ffast-math -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20001228-1.c'
    sources:
      binary: 20001228-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ffast-math -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20010202-1_17:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20010202-1.c'
    sources:
      binary: 20010202-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20010405-1_18:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20010405-1.c'
    sources:
      binary: 20010405-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20010516-1_19:
  build:
    cflags: ' -fshow-column -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20010516-1.c'
    sources:
      binary: 20010516-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fshow-column"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(34:" "non-lvalue))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20010622-1_20:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20010622-1.c'
    sources:
      binary: 20010622-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20010822-1_21:
  build:
    cflags: ' -Os'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20010822-1.c'
    sources:
      binary: ./20010822-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20010912-1_22:
  build:
    cflags: ' -O2 -fpic'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20010912-1.c'
    sources:
      binary: ./20010912-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20011008-1_23:
  build:
    cflags: ' -O0 -fshow-column -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20011008-1.c'
    sources:
      binary: 20011008-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0 -fshow-column"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(13:does not declare anything))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20011008-2_24:
  build:
    cflags: ' -O0'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20011008-2.c'
    sources:
      binary: ./20011008-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20011015-1_25:
  build:
    cflags: ' -O3 -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20011015-1.c'
    sources:
      binary: 20011015-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20011021-1_26:
  build:
    cflags: ' -std=c99 -W -Wall -Wtraditional -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20011021-1.c'
    sources:
      binary: 20011021-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -W -Wall -Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(missing init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization of union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization of union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(missing init))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20011130-1_27:
  build:
    cflags: ' -O3 -g -finline-limit=100 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20011130-1.c'
    sources:
      binary: 20011130-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -g -finline-limit=100"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20011214-1_28:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20011214-1.c'
    sources:
      binary: ./20011214-1.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020103-1_29:
  build:
    cflags: -O2 -fpic -fno-omit-frame-pointer -fno-asynchronous-unwind-tables -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020103-1.c'
    sources:
      binary: 20020103-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic -fno-omit-frame-pointer -fno-asynchronous-unwind-tables"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020104-1_30:
  build:
    cflags: ' -O -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020104-1.c'
    sources:
      binary: 20020104-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(no effect" "statement with no effect warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(no effect" "statement with no effect warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020108-1_31:
  build:
    cflags: ' -O2 -mtune=i686 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020108-1.c'
    sources:
      binary: 20020108-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -mtune=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020115-1_32:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020115-1.c'
    sources:
      binary: 20020115-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020116-1_33:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020116-1.c'
    sources:
      binary: 20020116-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -fpic -mexplicit-relocs -mcpu=ev4" { target alpha*-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020122-1_34:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020122-1.c'
    sources:
      binary: 20020122-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020122-2_35:
  build:
    cflags: ' -O2 -fprefetch-loop-arrays -w -march=athlon -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020122-2.c'
    sources:
      binary: 20020122-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fprefetch-loop-arrays -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020122-3_36:
  build:
    cflags: ' -Os -fprefetch-loop-arrays -mtune=pentium3 -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020122-3.c'
    sources:
      binary: 20020122-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fprefetch-loop-arrays -w"'
      - '"-Os -fprefetch-loop-arrays -mtune=pentium3 -w" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020122-4_37:
  build:
    cflags: ' -O2 -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020122-4.c'
    sources:
      binary: 20020122-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020201-1_38:
  build:
    cflags: ' -fprofile-arcs'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020201-1.c'
    sources:
      binary: ./20020201-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fprofile-arcs"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020206-1_39:
  build:
    cflags: ' -O2 -fprefetch-loop-arrays -mtune=pentium3 -w'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020206-1.c'
    sources:
      binary: ./20020206-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fprefetch-loop-arrays -w"'
      - '"-O2 -fprefetch-loop-arrays -mtune=pentium3 -w" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020210-1_40:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020210-1.c'
    sources:
      binary: ./20020210-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -fomit-frame-pointer" { target h8300-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020220-1_41:
  build:
    cflags: ' -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020220-1.c'
    sources:
      binary: 20020220-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020220-2_42:
  build:
    cflags: ' -O2 -Wunused -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020220-2.c'
    sources:
      binary: 20020220-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wunused"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(right-hand operand of comma expression has no effect))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020222-1_43:
  build:
    cflags: ' -O2 -fPIC -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020222-1.c'
    sources:
      binary: 20020222-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -fPIC" { target fpic }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020310-1_44:
  build:
    cflags: ' -O2 -mtune=i586'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020310-1.c'
    sources:
      binary: ./20020310-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -mtune=i586" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020312-1_45:
  build:
    cflags: ' -O -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020312-1.c'
    sources:
      binary: 20020312-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020312-2_46:
  build:
    cflags: ' -O -fno-pic'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020312-2.c'
    sources:
      binary: ./20020312-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-pic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020319-1_47:
  build:
    cflags: ' -O2 -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020319-1.c'
    sources:
      binary: 20020319-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020411-1_48:
  build:
    cflags: ' -O2 -march=i686 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020411-1.c'
    sources:
      binary: 20020411-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -march=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020415-1_49:
  build:
    cflags: ' -O2 -fpic -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020415-1.c'
    sources:
      binary: 20020415-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020418-1_50:
  build:
    cflags: ' -O2 -msse -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020418-1.c'
    sources:
      binary: 20020418-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -msse -ffast-math" { target i?86-*-* x86_64-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020418-2_51:
  build:
    cflags: ' -O2 -funroll-all-loops -march=pentium3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020418-2.c'
    sources:
      binary: 20020418-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-all-loops"'
      - '"-O2 -funroll-all-loops -march=pentium3" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020425-1_52:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020425-1.c'
    sources:
      binary: 20020425-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020426-2_53:
  build:
    cflags: ' -O2 -frename-registers -fomit-frame-pointer -fPIC -mtune=i686'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020426-2.c'
    sources:
      binary: ./20020426-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -frename-registers -fomit-frame-pointer -fPIC -mtune=i686" { target { { i?86-*-* x86_64-*-* } && { ia32 && fpic } } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020430-1_54:
  build:
    cflags: ' -O2 -frename-registers -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020430-1.c'
    sources:
      binary: 20020430-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -frename-registers -fpic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020503-1_55:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020503-1.c'
    sources:
      binary: 20020503-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g -mflat" { target sparc*-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020517-1_56:
  build:
    cflags: ' -O2 -mtune=i686'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020517-1.c'
    sources:
      binary: ./20020517-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -mtune=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020525-1_57:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020525-1.c'
    sources:
      binary: ./20020525-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020527-1_58:
  build:
    cflags: ' -fms-extensions -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020527-1.c'
    sources:
      binary: 20020527-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fms-extensions"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020530-1_59:
  build:
    cflags: ' -fverbose-asm -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020530-1.c'
    sources:
      binary: 20020530-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fverbose-asm"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020607-1_60:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020607-1.c'
    sources:
      binary: ./20020607-1.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020607-2_61:
  build:
    cflags: ' -O2 -ffast-math'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020607-2.c'
    sources:
      binary: ./20020607-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020919-1_62:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020919-1.c'
    sources:
      binary: 20020919-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:136:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:199:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:226:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:235:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:254:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20021006-1_63:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20021006-1.c'
    sources:
      binary: 20021006-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20021018-1_64:
  build:
    cflags: ' -O2 -fpic'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20021018-1.c'
    sources:
      binary: ./20021018-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20021023-1_65:
  build:
    cflags: ' -O2 -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20021023-1.c'
    sources:
      binary: 20021023-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20021029-1_66:
  build:
    cflags: -O2 -fpic -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20021029-1.c'
    sources:
      binary: 20021029-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20021029-2_67:
  build:
    cflags: -O2 -fmerge-all-constants -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20021029-2.c'
    sources:
      binary: 20021029-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmerge-all-constants"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20021116-1_68:
  build:
    cflags: ' -O2 -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20021116-1.c'
    sources:
      binary: 20021116-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030120-1_69:
  build:
    cflags: ' -O -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030120-1.c'
    sources:
      binary: 20030120-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fpic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030204-1_70:
  build:
    cflags: ' -march=pentium3 -O -ffast-math -funroll-loops -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030204-1.c'
    sources:
      binary: 20030204-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ffast-math -funroll-loops"'
      - '"-march=pentium3 -O -ffast-math -funroll-loops" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030213-1_71:
  build:
    cflags: ' -O -fpic'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030213-1.c'
    sources:
      binary: 20030213-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fpic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030225-1_72:
  build:
    cflags: ' -O2 -fPIC'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030225-1.c'
    sources:
      binary: ./20030225-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030309-1_73:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030309-1.c'
    sources:
      binary: 20030309-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030321-1_74:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030321-1.c'
    sources:
      binary: 20030321-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030323-1_75:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030323-1.c'
    sources:
      binary: ./20030323-1.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030324-1_76:
  build:
    cflags: ' -O -fstrict-aliasing -fgcse'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030324-1.c'
    sources:
      binary: ./20030324-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fstrict-aliasing -fgcse"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030331-2_77:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030331-2.c'
    sources:
      binary: 20030331-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030414-1_78:
  build:
    cflags: ' -O2 -fPIC -c'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030414-1.c'
    sources:
      binary: 20030414-1.o
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC" { target *-*-*gnu* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030414-2_79:
  build:
    cflags: ' -O2 -ffast-math'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030414-2.c'
    sources:
      binary: ./20030414-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030612-1_80:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030612-1.c'
    sources:
      binary: ./20030612-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(statement-expressions should end with a non-void expression" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030625-1_81:
  build:
    cflags: ' -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030625-1.c'
    sources:
      binary: 20030625-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(moo" "has incomplete type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030626-1_82:
  build:
    cflags: ' -O -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030626-1.c'
    sources:
      binary: 20030626-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030627-1_83:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030627-1.c'
    sources:
      binary: 20030627-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030707-1_84:
  build:
    cflags: ' -O2 -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030707-1.c'
    sources:
      binary: 20030707-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030708-1_85:
  build:
    cflags: ' -O2 -fpic'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030708-1.c'
    sources:
      binary: 20030708-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030711-1_86:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030711-1.c'
    sources:
      binary: ./20030711-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030717-1_87:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030717-1.c'
    sources:
      binary: ./20030717-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030721-1_88:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030721-1.c'
    sources:
      binary: 20030721-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030804-1_89:
  build:
    cflags: ' -O2 -ffast-math'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030804-1.c'
    sources:
      binary: 20030804-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030805-1_90:
  build:
    cflags: ' -O2 -fgnu89-inline'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030805-1.c'
    sources:
      binary: ./20030805-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fgnu89-inline"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030815-1_91:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030815-1.c'
    sources:
      binary: 20030815-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030820-1_92:
  build:
    cflags: ' -O2 -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030820-1.c'
    sources:
      binary: 20030820-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030826-1_93:
  build:
    cflags: ' -O2 -ffast-math'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030826-1.c'
    sources:
      binary: ./20030826-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030826-2_94:
  build:
    cflags: ' -O2 -fomit-frame-pointer -march=i386'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030826-2.c'
    sources:
      binary: ./20030826-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fomit-frame-pointer"'
      - '"-O2 -fomit-frame-pointer -march=i386" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030906-1_95:
  build:
    cflags: ' -O -finline-functions -Wreturn-type -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030906-1.c'
    sources:
      binary: 20030906-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -finline-functions -Wreturn-type"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*('return' with no value, in function returning non-void))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030906-2_96:
  build:
    cflags: ' -O -finline-functions -Wreturn-type -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030906-2.c'
    sources:
      binary: 20030906-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -finline-functions -Wreturn-type"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*('return' with no value, in function returning non-void))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20031002-1_97:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20031002-1.c'
    sources:
      binary: 20031002-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20031012-1_98:
  build:
    cflags: ' -Waddress -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20031012-1.c'
    sources:
      binary: 20031012-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Waddress"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*())[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20031102-1_99:
  build:
    cflags: ' -O2 -march=i686'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20031102-1.c'
    sources:
      binary: ./20031102-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -march=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20031111-1_100:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20031111-1.c'
    sources:
      binary: 20031111-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20031201-1_101:
  build:
    cflags: ' -O2 -fno-expensive-optimizations -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20031201-1.c'
    sources:
      binary: 20031201-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-expensive-optimizations"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20031202-1_102:
  build:
    cflags: ' -O2 -mtune=i686'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20031202-1.c'
    sources:
      binary: ./20031202-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -mtune=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20031216-1_103:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20031216-1.c'
    sources:
      binary: ./20031216-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -fPIC" { target s390*-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20031218-1_104:
  build:
    cflags: ' -O -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20031218-1.c'
    sources:
      binary: 20031218-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20031218-2_105:
  build:
    cflags: ' -O2 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20031218-2.c'
    sources:
      binary: 20031218-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20031218-3_106:
  build:
    cflags: ' -O2 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20031218-3.c'
    sources:
      binary: 20031218-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20031222-1_107:
  build:
    cflags: ' -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20031222-1.c'
    sources:
      binary: 20031222-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20031223-1_108:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20031223-1.c'
    sources:
      binary: 20031223-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(a label can only be part of a statement and a declaration is not a statement" "not stmt))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(label at end of compound statement" "label))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "type name))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040123-1_109:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040123-1.c'
    sources:
      binary: 20040123-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040127-1_110:
  build:
    cflags: ' -O2 -c'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040127-1.c'
    sources:
      binary: 20040127-1.o
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040127-2_111:
  build:
    cflags: ' -O -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040127-2.c'
    sources:
      binary: 20040127-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040202-1_112:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040202-1.c'
    sources:
      binary: 20040202-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040203-1_113:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040203-1.c'
    sources:
      binary: 20040203-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89" '
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040206-1_114:
  build:
    cflags: ' -O2 -W -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040206-1.c'
    sources:
      binary: 20040206-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -W -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(no return statement))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040217-1_115:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040217-1.c'
    sources:
      binary: 20040217-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040219-1_116:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040219-1.c'
    sources:
      binary: ./20040219-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -minline-float-divide-max-throughput" { target ia64-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040223-1_117:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040223-1.c'
    sources:
      binary: 20040223-1.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(address" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(address" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(address" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040305-2_118:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040305-2.c'
    sources:
      binary: ./20040305-2.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040306-1_119:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040306-1.c'
    sources:
      binary: 20040306-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040309-1_120:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040309-1.c'
    sources:
      binary: ./20040309-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-minline-int-divide-max-throughput" { target ia64-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040310-1_121:
  build:
    cflags: ' -O1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040310-1.c'
    sources:
      binary: 20040310-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040311-2_122:
  build:
    cflags: ' -O2 -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040311-2.c'
    sources:
      binary: 20040311-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040322-1_123:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040322-1.c'
    sources:
      binary: 20040322-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "flexible array member not))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "parse error before))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040331-1_124:
  build:
    cflags: ' -O2 -fwrapv'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040331-1.c'
    sources:
      binary: ./20040331-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fwrapv"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040409-1_125:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040409-1.c'
    sources:
      binary: 20040409-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040609-1_126:
  build:
    cflags: ' -Os -frename-registers -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040609-1.c'
    sources:
      binary: 20040609-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -frename-registers"'
      - '"-mconstant-gp -Os -frename-registers" { target ia64-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040622-2_127:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040622-2.c'
    sources:
      binary: 20040622-2.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040625-1_128:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040625-1.c'
    sources:
      binary: ./20040625-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-mminimal-toc" { target { { powerpc*-*-* && lp64 } || { powerpc-ibm-aix* } } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040627-1_129:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040627-1.c'
    sources:
      binary: 20040627-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040813-1_130:
  build:
    cflags: -gstabs -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040813-1.c'
    sources:
      binary: 20040813-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-gstabs"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040910-1_131:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040910-1.c'
    sources:
      binary: 20040910-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:2:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((parse error|syntax error|expected '\\)') before 'int'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040916-1_132:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040916-1.c'
    sources:
      binary: 20040916-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040920-1_133:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040920-1.c'
    sources:
      binary: 20040920-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(called object 'bob' is not a function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(called object 'bar.foo' is not a function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20041014-1_134:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20041014-1.c'
    sources:
      binary: 20041014-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(braced-group))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20041104-1_135:
  build:
    cflags: ' -O2 -frename-registers -fno-schedule-insns -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20041104-1.c'
    sources:
      binary: 20041104-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -frename-registers -fno-schedule-insns"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20041106-1_136:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20041106-1.c'
    sources:
      binary: ./20041106-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - -O2
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20041122-1_137:
  build:
    cflags: ' -O1 -fmove-loop-invariants -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20041122-1.c'
    sources:
      binary: 20041122-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fmove-loop-invariants"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20041213-1_138:
  build:
    cflags: ' -fshow-column -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20041213-1.c'
    sources:
      binary: 20041213-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fshow-column -std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(13:conflicting types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:conflicting types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:conflicting types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(6:conflicting types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(13:conflicting types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(6:conflicting types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(1:conflicting types))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(1:conflicting types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(13:conflicting types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(6:conflicting types))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20041219-1_139:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20041219-1.c'
    sources:
      binary: ./20041219-1.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050105-1_140:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050105-1.c'
    sources:
      binary: 20050105-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050105-2_141:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050105-2.c'
    sources:
      binary: 20050105-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050111-1_142:
  build:
    cflags: ' -O2 -march=i686 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050111-1.c'
    sources:
      binary: 20050111-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -march=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050111-2_143:
  build:
    cflags: ' -O2 -funroll-loops -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050111-2.c'
    sources:
      binary: 20050111-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050121-1_144:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050121-1.c'
    sources:
      binary: 20050121-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(break statement not within))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050121-2_145:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050121-2.c'
    sources:
      binary: 20050121-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050209-1_146:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050209-1.c'
    sources:
      binary: 20050209-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse|syntax|expected))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050307-1_147:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050307-1.c'
    sources:
      binary: 20050307-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050321-1_148:
  build:
    cflags: ' -O2 -fmodulo-sched -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050321-1.c'
    sources:
      binary: 20050321-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050321-2_149:
  build:
    cflags: ' -g1 -fpic'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050321-2.c'
    sources:
      binary: 20050321-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g1 -fpic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050330-1_150:
  build:
    cflags: ' -O2 -fmodulo-sched -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050330-1.c'
    sources:
      binary: 20050330-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050503-1_151:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050503-1.c'
    sources:
      binary: 20050503-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050517-1_152:
  build:
    cflags: ' -O2 -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050517-1.c'
    sources:
      binary: 20050517-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050527-1_153:
  build:
    cflags: ' -O2 -Wuninitialized'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050527-1.c'
    sources:
      binary: ./20050527-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050603-2_154:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050603-2.c'
    sources:
      binary: ./20050603-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050607-1_155:
  build:
    cflags: ' -Wpadded -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050607-1.c'
    sources:
      binary: 20050607-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wpadded"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050620-1_156:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050620-1.c'
    sources:
      binary: 20050620-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(has incomplete type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050629-1_157:
  build:
    cflags: ' -O2 -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050629-1.c'
    sources:
      binary: 20050629-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050702-1_158:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050702-1.c'
    sources:
      binary: 20050702-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050811-1_159:
  build:
    cflags: ' -O2 -fdump-rtl-all-graph -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050811-1.c'
    sources:
      binary: 20050811-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-all-graph"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050811-2_160:
  build:
    cflags: ' -O2 -fdump-rtl-postreload-graph -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050811-2.c'
    sources:
      binary: 20050811-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-postreload-graph"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050826-1_161:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050826-1.c'
    sources:
      binary: ./20050826-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050922-1_162:
  build:
    cflags: ' -O1 -std=c99'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050922-1.c'
    sources:
      binary: ./20050922-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -std=c99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050922-2_163:
  build:
    cflags: ' -O1 -std=c99'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050922-2.c'
    sources:
      binary: ./20050922-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -std=c99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20051207-1_164:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20051207-1.c'
    sources:
      binary: 20051207-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20051207-2_165:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20051207-2.c'
    sources:
      binary: 20051207-2.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20051207-3_166:
  build:
    cflags: ' -fno-unit-at-a-time -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20051207-3.c'
    sources:
      binary: 20051207-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-unit-at-a-time"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(section type conflict))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20060410_167:
  build:
    cflags: -g -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20060410.c'
    sources:
      binary: 20060410.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20060419-1_168:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20060419-1.c'
    sources:
      binary: 20060419-1.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:2:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored for field of type.*unsigned char\\\[1\\\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored for field of type.*unsigned char\\\[14\\\]))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20060425-1_169:
  build:
    cflags: ' -O1'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20060425-1.c'
    sources:
      binary: ./20060425-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20060425-2_170:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20060425-2.c'
    sources:
      binary: 20060425-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20060801-1_171:
  build:
    cflags: ' -fPIC -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20060801-1.c'
    sources:
      binary: 20060801-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fPIC"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20061026_172:
  build:
    cflags: ' -O1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20061026.c'
    sources:
      binary: 20061026.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20061109-1_173:
  build:
    cflags: ' -O1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20061109-1.c'
    sources:
      binary: 20061109-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20061109-2_174:
  build:
    cflags: ' -O1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20061109-2.c'
    sources:
      binary: 20061109-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20061124-1_175:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20061124-1.c'
    sources:
      binary: ./20061124-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-mcpu=v9" { target sparc*-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20061127-1_176:
  build:
    cflags: ' -O1 -fPIC -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20061127-1.c'
    sources:
      binary: 20061127-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fPIC"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20070112-1_177:
  build:
    cflags: ' -O1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20070112-1.c'
    sources:
      binary: 20070112-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20070507-1_178:
  build:
    cflags: ' -O3 -fPIC'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20070507-1.c'
    sources:
      binary: ./20070507-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fPIC"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20070725-1_179:
  build:
    cflags: ' -O1'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20070725-1.c'
    sources:
      binary: ./20070725-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20080615-1_180:
  build:
    cflags: ' -w -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20080615-1.c'
    sources:
      binary: 20080615-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20080820_181:
  build:
    cflags: ' -fshow-column -fms-extensions -pedantic -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20080820.c'
    sources:
      binary: 20080820.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fshow-column -fms-extensions -pedantic -std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(29:ISO C90 doesn't support unnamed))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20081223-1_182:
  build:
    cflags: ' -flto -ffat-lto-objects -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20081223-1.c'
    sources:
      binary: 20081223-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-flto -ffat-lto-objects" { target lto }'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'bar' isn't known))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20090902-1_183:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20090902-1.c'
    sources:
      binary: 20090902-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20090922-1_184:
  build:
    cflags: ' -O2 -g -funroll-loops -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20090922-1.c'
    sources:
      binary: 20090922-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g -funroll-loops -std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20100906-1_185:
  build:
    cflags: ' -O2 -fno-short-enums -Wl,--no-enum-size-warning'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20100906-1.c'
    sources:
      binary: ./20100906-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -fno-short-enums -Wl,--no-enum-size-warning" {target arm_eabi}'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20101010-1_186:
  build:
    cflags: ' -O2 -fno-crossjumping -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20101010-1.c'
    sources:
      binary: 20101010-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-crossjumping"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20101013-1_187:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20101013-1.c'
    sources:
      binary: 20101013-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20111216-1_188:
  build:
    cflags: ' -O -fexceptions -fnon-call-exceptions -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20111216-1.c'
    sources:
      binary: 20111216-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fexceptions -fnon-call-exceptions"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20111227-2_189:
  build:
    cflags: -fdump-rtl-ree -O -free -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20111227-2.c'
    sources:
      binary: 20111227-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-rtl-ree -O -free"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20111227-3_190:
  build:
    cflags: -fdump-rtl-ree -O -free -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20111227-3.c'
    sources:
      binary: 20111227-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-rtl-ree -O -free"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20141029-1_191:
  build:
    cflags: -fstrict-volatile-bitfields -fdump-rtl-final -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20141029-1.c'
    sources:
      binary: 20141029-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-volatile-bitfields -fdump-rtl-final"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20150120-1_192:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20150120-1.c'
    sources:
      binary: 20150120-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20150120-2_193:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20150120-2.c'
    sources:
      binary: 20150120-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20150120-3_194:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20150120-3.c'
    sources:
      binary: 20150120-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20150306-1_195:
  build:
    cflags: ' -fstrict-volatile-bitfields'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20150306-1.c'
    sources:
      binary: ./20150306-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-volatile-bitfields"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20161219_196:
  build:
    cflags: ' -O1 -w -c'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20161219.c'
    sources:
      binary: 20161219.o
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_54455_197:
  build:
    cflags: ' -O1 -fschedule-insns -fselective-scheduling --param max-sched-extend-regions-iters=2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/54455.c'
    sources:
      binary: 54455.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fschedule-insns -fselective-scheduling --param max-sched-extend-regions-iters=2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_920413-1_198:
  build:
    cflags: ' -Wtraditional -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/920413-1.c'
    sources:
      binary: 920413-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional -std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(width of integer|traditional C rejects))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_940409-1_199:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/940409-1.c'
    sources:
      binary: 940409-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_940510-1_200:
  build:
    cflags: ' -std=c89 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/940510-1.c'
    sources:
      binary: 940510-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -pedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(flexible array member in a struct with no named members"  "))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support flexible array members))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_951130-1_201:
  build:
    cflags: ' -Werror -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/951130-1.c'
    sources:
      binary: 951130-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Werror"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_980502-1_202:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/980502-1.c'
    sources:
      binary: 980502-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_980523-1_203:
  build:
    cflags: ' -O2 -fpic'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/980523-1.c'
    sources:
      binary: ./980523-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_980526-1_204:
  build:
    cflags: ' -O2 -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/980526-1.c'
    sources:
      binary: 980526-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_980816-1_205:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/980816-1.c'
    sources:
      binary: 980816-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_990213-1_206:
  build:
    cflags: ' -W -Wall -Werror -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/990213-1.c'
    sources:
      binary: 990213-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-W -Wall -Werror"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_990506-0_207:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/990506-0.c'
    sources:
      binary: 990506-0.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared" "undeclared-variable message))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_O16384_208:
  build:
    cflags: ' -O16384 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/O16384.c'
    sources:
      binary: O16384.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O16384"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_PR68002_209:
  build:
    cflags: -O1 -fkeep-static-functions -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/PR68002.c'
    sources:
      binary: PR68002.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fkeep-static-functions"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Waddress-2_210:
  build:
    cflags: ' -Waddress -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Waddress-2.c'
    sources:
      binary: Waddress-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Waddress"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Waddress_211:
  build:
    cflags: ' -Waddress -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Waddress.c'
    sources:
      binary: Waddress.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Waddress"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wall_212:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wall.c'
    sources:
      binary: Wall.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(no effect" "no effect))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-10_214:
  build:
    cflags: ' -Walloca-larger-than=2000 -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-10.c'
    sources:
      binary: Walloca-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Walloca-larger-than=2000 -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(argument to .alloca. may be too large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(argument to .alloca. may be too large))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-11_215:
  build:
    cflags: ' -Walloca -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-11.c'
    sources:
      binary: Walloca-11.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Walloca -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-12_216:
  build:
    cflags: ' -Walloca-larger-than=128 -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-12.c'
    sources:
      binary: Walloca-12.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Walloca-larger-than=128 -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(unbounded use of 'alloca'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-13_217:
  build:
    cflags: ' -Walloca-larger-than=100 -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-13.c'
    sources:
      binary: Walloca-13.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Walloca-larger-than=100 -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-14_218:
  build:
    cflags: ' -O2 -Walloca-larger-than=126812070 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-14.c'
    sources:
      binary: Walloca-14.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Walloca-larger-than=126812070"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-1_213:
  build:
    cflags: ' -Walloca-larger-than=2000 -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-1.c'
    sources:
      binary: Walloca-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Walloca-larger-than=2000 -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*('alloca' within a loop))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(large due to conversion" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(unbounded use of 'alloca'" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(is too large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(may be too large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(unbounded use of 'alloca'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(argument to 'alloca' is zero))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-2_219:
  build:
    cflags: ' -Walloca-larger-than=2000 -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-2.c'
    sources:
      binary: Walloca-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Walloca-larger-than=2000 -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(large due to conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*('alloca' may be too large" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(unbounded use of 'alloca'" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-3_220:
  build:
    cflags: ' -Walloca-larger-than=2000 -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-3.c'
    sources:
      binary: Walloca-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Walloca-larger-than=2000 -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*('alloca' bound is unknown))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*('alloca' bound is unknown))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-4_221:
  build:
    cflags: ' -Walloca-larger-than=5000 -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-4.c'
    sources:
      binary: Walloca-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Walloca-larger-than=5000 -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-5_222:
  build:
    cflags: ' -Walloca-larger-than=123 -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-5.c'
    sources:
      binary: Walloca-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Walloca-larger-than=123 -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(unbounded use of alloca" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-6_223:
  build:
    cflags: ' -Walloca-larger-than=256 -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-6.c'
    sources:
      binary: Walloca-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Walloca-larger-than=256 -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-7_224:
  build:
    cflags: ' -Walloca -O0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-7.c'
    sources:
      binary: Walloca-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Walloca -O0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(use of 'alloca'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(use of 'alloca'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-8_225:
  build:
    cflags: ' -Walloca-larger-than=2000 -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-8.c'
    sources:
      binary: Walloca-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Walloca-larger-than=2000 -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-9_226:
  build:
    cflags: ' -Walloca-larger-than=5000 -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-9.c'
    sources:
      binary: Walloca-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Walloca-larger-than=5000 -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walways-true-1_227:
  build:
    cflags: ' -Waddress -fshow-column -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walways-true-1.c'
    sources:
      binary: Walways-true-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Waddress -fshow-column"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(7:always evaluate as" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(7:always evaluate as" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(7:always evaluate as" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(7:always evaluate as" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(11:the comparison will always evaluate as 'false'" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(10:the comparison will always evaluate as 'false'" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(10:the comparison will always evaluate as 'false'" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(13:the comparison will always evaluate as 'false'" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(9:the comparison will always evaluate as 'false'" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(9:the comparison will always evaluate as 'false'" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(9:the comparison will always evaluate as 'false'" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(9:the comparison will always evaluate as 'false'" "correct warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-10_228:
  build:
    cflags: ' -O3 -Warray-bounds -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-10.c'
    sources:
      binary: Warray-bounds-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Warray-bounds"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-11_229:
  build:
    cflags: ' -O3 -Warray-bounds=2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-11.c'
    sources:
      binary: Warray-bounds-11.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Warray-bounds=2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(subscript is above array bound))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(subscript is above array bound))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(subscript is above array bound))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(subscript is above array bound))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(subscript is above array bound))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(subscript is above array bound))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(subscript is above array bound))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(subscript is above array bound))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(subscript is above array bound))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-12_230:
  build:
    cflags: ' -O3 -Warray-bounds -mssse3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-12.c'
    sources:
      binary: Warray-bounds-12.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Warray-bounds"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-13_231:
  build:
    cflags: ' -O3 -Warray-bounds -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-13.c'
    sources:
      binary: Warray-bounds-13.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Warray-bounds"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-14_232:
  build:
    cflags: ' -O2 -Warray-bounds -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-14.c'
    sources:
      binary: Warray-bounds-14.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Warray-bounds"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(outside array bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(outside array bounds))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-15_233:
  build:
    cflags: ' -O2 -Warray-bounds -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-15.c'
    sources:
      binary: Warray-bounds-15.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Warray-bounds"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(above array bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(above array bounds))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-16_234:
  build:
    cflags: ' -O3 -Warray-bounds -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-16.c'
    sources:
      binary: Warray-bounds-16.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Warray-bounds"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-17_235:
  build:
    cflags: ' -O2 -Warray-bounds -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-17.c'
    sources:
      binary: Warray-bounds-17.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Warray-bounds"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-18_236:
  build:
    cflags: ' -O2 -Warray-bounds -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-18.c'
    sources:
      binary: Warray-bounds-18.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Warray-bounds"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-19_237:
  build:
    cflags: ' -O3 -Warray-bounds -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-19.c'
    sources:
      binary: Warray-bounds-19.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Warray-bounds"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-20_239:
  build:
    cflags: ' -O2 -Warray-bounds -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-20.c'
    sources:
      binary: Warray-bounds-20.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Warray-bounds"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-21_240:
  build:
    cflags: ' -O2 -Warray-bounds -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-21.c'
    sources:
      binary: Warray-bounds-21.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Warray-bounds"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-2_238:
  build:
    cflags: ' -O2 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-2.c'
    sources:
      binary: Warray-bounds-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(array subscript))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-3_241:
  build:
    cflags: ' -O2 -Warray-bounds -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-3.c'
    sources:
      binary: Warray-bounds-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Warray-bounds"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-4_242:
  build:
    cflags: ' -O2 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-4.c'
    sources:
      binary: Warray-bounds-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-5_243:
  build:
    cflags: ' -O3 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-5.c'
    sources:
      binary: Warray-bounds-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-6_244:
  build:
    cflags: ' -O3 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-6.c'
    sources:
      binary: Warray-bounds-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-7_245:
  build:
    cflags: ' -O2 -Warray-bounds -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-7.c'
    sources:
      binary: Warray-bounds-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Warray-bounds"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-8_246:
  build:
    cflags: ' -O3 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-8.c'
    sources:
      binary: Warray-bounds-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-9_247:
  build:
    cflags: ' -O3 -Warray-bounds -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-9.c'
    sources:
      binary: Warray-bounds-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Warray-bounds"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds_248:
  build:
    cflags: ' -O2 -Warray-bounds -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds.c'
    sources:
      binary: Warray-bounds.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Warray-bounds"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(6:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(6:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(6:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(6:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(6:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(6:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(6:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(6:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(6:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(8:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(8:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(8:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(8:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(8:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(15:array subscript))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wattributes-1_249:
  build:
    cflags: ' -Wattributes -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wattributes-1.c'
    sources:
      binary: Wattributes-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - -Wattributes
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute directive ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute directive ignored))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wattributes-2_250:
  build:
    cflags: ' -Wno-attributes -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wattributes-2.c'
    sources:
      binary: Wattributes-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - -Wno-attributes
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wattributes-3_251:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wattributes-3.c'
    sources:
      binary: Wattributes-3.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute directive ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute directive ignored))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wattributes-4_252:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wattributes-4.c'
    sources:
      binary: Wattributes-4.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(bad option))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wbad-function-cast-1_253:
  build:
    cflags: ' -Wbad-function-cast -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wbad-function-cast-1.c'
    sources:
      binary: Wbad-function-cast-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wbad-function-cast"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'int' to non-matching type 'float'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'char' to non-matching type 'double'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'long int' to non-matching type '_Bool'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'float' to non-matching type 'int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'double' to non-matching type 'long int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'complex double' to non-matching type 'double'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'enum e' to non-matching type 'int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type '_Bool' to non-matching type 'int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'char \\*' to non-matching type '\[^\\n\]*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'int \\*' to non-matching type '\[^\\n\]*'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wbool-operation-1_254:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wbool-operation-1.c'
    sources:
      binary: Wbool-operation-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(increment of a boolean expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(increment of a boolean expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(decrement of a boolean expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(decrement of a boolean expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc++-compat_255:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc++-compat.c'
    sources:
      binary: Wc++-compat.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc90-c99-compat-1_256:
  build:
    cflags: ' -std=gnu90 -Wpedantic -Wc90-c99-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc90-c99-compat-1.c'
    sources:
      binary: Wc90-c99-compat-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu90 -Wpedantic -Wc90-c99-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support complex types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support .long long.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support flexible array members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(type of bit-field .b. is a GCC extension))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .const.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .volatile.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(anonymous variadic macros were introduced in C99))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(comma at end of enumerator list))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support .\\\[\\\*\\\]. array declarators))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support .static. or type qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids compound literals))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids specifying subobject to initialize))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids mixed declarations and code))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids mixed declarations and code))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids subscripting non-lvalue array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(invoking macro F argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids variable length array .a.))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc90-c99-compat-2_257:
  build:
    cflags: ' -std=gnu99 -Wc90-c99-compat -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc90-c99-compat-2.c'
    sources:
      binary: Wc90-c99-compat-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wc90-c99-compat -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support complex types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support .long long.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support flexible array members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(type of bit-field .b. is a GCC extension))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .const.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .volatile.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(anonymous variadic macros were introduced in C99))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(comma at end of enumerator list))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support .\\\[\\\*\\\]. array declarators))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support .static. or type qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids compound literals))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids specifying subobject to initialize))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids mixed declarations and code))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids mixed declarations and code))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids subscripting non-lvalue array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(invoking macro F argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids variable length array .a.))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc90-c99-compat-3_258:
  build:
    cflags: ' -std=gnu11 -Wc90-c99-compat -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc90-c99-compat-3.c'
    sources:
      binary: Wc90-c99-compat-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11 -Wc90-c99-compat -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support complex types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support .long long.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support flexible array members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(type of bit-field .b. is a GCC extension))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .const.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .volatile.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(anonymous variadic macros were introduced in C99))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(comma at end of enumerator list))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support .\\\[\\\*\\\]. array declarators))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support .static. or type qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids compound literals))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids specifying subobject to initialize))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids mixed declarations and code))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids mixed declarations and code))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids subscripting non-lvalue array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(invoking macro F argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids variable length array .a.))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc90-c99-compat-4_259:
  build:
    cflags: ' -std=gnu90 -Wpedantic -Wno-c90-c99-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc90-c99-compat-4.c'
    sources:
      binary: Wc90-c99-compat-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu90 -Wpedantic -Wno-c90-c99-compat"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc90-c99-compat-5_260:
  build:
    cflags: ' -std=gnu90 -pedantic-errors -Wno-c90-c99-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc90-c99-compat-5.c'
    sources:
      binary: Wc90-c99-compat-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu90 -pedantic-errors -Wno-c90-c99-compat"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc90-c99-compat-6_261:
  build:
    cflags: ' -std=gnu90 -Wc90-c99-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc90-c99-compat-6.c'
    sources:
      binary: Wc90-c99-compat-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu90 -Wc90-c99-compat"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc90-c99-compat-7_262:
  build:
    cflags: ' -std=gnu90 -Wpedantic -Wc90-c99-compat -Wno-long-long -Wno-declaration-after-statement -Wno-vla -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc90-c99-compat-7.c'
    sources:
      binary: Wc90-c99-compat-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu90 -Wpedantic -Wc90-c99-compat -Wno-long-long -Wno-declaration-after-statement -Wno-vla"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc90-c99-compat-8_263:
  build:
    cflags: ' -std=gnu90 -pedantic-errors -Wc90-c99-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc90-c99-compat-8.c'
    sources:
      binary: Wc90-c99-compat-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu90 -pedantic-errors -Wc90-c99-compat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support boolean types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support complex types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support .long long.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support flexible array members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(type of bit-field .b. is a GCC extension))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate .const.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate .volatile.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(anonymous variadic macros were introduced in C99))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(comma at end of enumerator list))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support .\\\[\\\*\\\]. array declarators))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support .static. or type qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 forbids compound literals))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 forbids specifying subobject to initialize))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 forbids mixed declarations and code))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 forbids mixed declarations and code))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 forbids subscripting non-lvalue array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invoking macro F argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 forbids variable length array .a.))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc99-c11-compat-1_264:
  build:
    cflags: ' -std=gnu90 -pedantic -Wc99-c11-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc99-c11-compat-1.c'
    sources:
      binary: Wc99-c11-compat-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu90 -pedantic -Wc99-c11-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 doesn.t support unnamed structs/unions))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support ._Noreturn.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(redefinition of typedef .A.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support ._Thread_local.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support ._Static_assert.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support the ._Atomic. qualifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support ._Alignas.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support ._Alignof.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support ._Generic.))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc99-c11-compat-2_265:
  build:
    cflags: ' -std=gnu99 -pedantic -Wc99-c11-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc99-c11-compat-2.c'
    sources:
      binary: Wc99-c11-compat-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic -Wc99-c11-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 doesn.t support unnamed structs/unions))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support ._Noreturn.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(redefinition of typedef .A.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support ._Thread_local.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support ._Static_assert.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support the ._Atomic. qualifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support ._Alignas.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support ._Alignof.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support ._Generic.))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc99-c11-compat-3_266:
  build:
    cflags: ' -std=gnu11 -pedantic-errors -Wc99-c11-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc99-c11-compat-3.c'
    sources:
      binary: Wc99-c11-compat-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11 -pedantic-errors -Wc99-c11-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 doesn.t support unnamed structs/unions))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support ._Noreturn.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(redefinition of typedef .A.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support ._Thread_local.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support ._Static_assert.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support the ._Atomic. qualifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support ._Alignas.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support ._Alignof.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support ._Generic.))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc99-c11-compat-4_267:
  build:
    cflags: ' -std=gnu99 -pedantic-errors -Wno-c99-c11-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc99-c11-compat-4.c'
    sources:
      binary: Wc99-c11-compat-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors -Wno-c99-c11-compat"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc99-c11-compat-5_268:
  build:
    cflags: ' -std=gnu11 -Wc99-c11-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc99-c11-compat-5.c'
    sources:
      binary: Wc99-c11-compat-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11 -Wc99-c11-compat"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc99-c11-compat-6_269:
  build:
    cflags: ' -std=gnu90 -pedantic-errors -Wc99-c11-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc99-c11-compat-6.c'
    sources:
      binary: Wc99-c11-compat-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu90 -pedantic-errors -Wc99-c11-compat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 doesn.t support unnamed structs/unions))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support ._Noreturn.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of typedef .A.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support ._Thread_local.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support ._Static_assert.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support the ._Atomic. qualifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support ._Alignas.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support ._Alignof.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support ._Generic.))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc99-c11-compat-7_270:
  build:
    cflags: ' -std=gnu99 -pedantic-errors -Wc99-c11-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc99-c11-compat-7.c'
    sources:
      binary: Wc99-c11-compat-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors -Wc99-c11-compat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C99 doesn.t support unnamed structs/unions))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C99 does not support ._Noreturn.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of typedef .A.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C99 does not support ._Thread_local.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C99 does not support ._Static_assert.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C99 does not support the ._Atomic. qualifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C99 does not support ._Alignas.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C99 does not support ._Alignof.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C99 does not support ._Generic.))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wchar-subscripts-1_271:
  build:
    cflags: ' -Wchar-subscripts -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wchar-subscripts-1.c'
    sources:
      binary: Wchar-subscripts-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wchar-subscripts"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(array subscript has type 'char'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(array subscript has type 'char'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wchar-subscripts_272:
  build:
    cflags: ' -Wchar-subscripts -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wchar-subscripts.c'
    sources:
      binary: Wchar-subscripts.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wchar-subscripts"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wconversion-3_273:
  build:
    cflags: ' -O2 -Wconversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wconversion-3.c'
    sources:
      binary: Wconversion-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wconversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(negative))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wconversion-4_274:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wconversion-4.c'
    sources:
      binary: Wconversion-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wconversion-5_275:
  build:
    cflags: ' -O2 -Wconversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wconversion-5.c'
    sources:
      binary: Wconversion-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wconversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(may alter its value" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(may alter its value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(may alter its value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(may change the sign))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(may change the sign))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(may change the sign))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(may change the sign))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(may change the sign))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(may change the sign))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wconversion-complex-c99_276:
  build:
    cflags: '  -std=c99 -pedantic -Wconversion  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wconversion-complex-c99.c'
    sources:
      binary: Wconversion-complex-c99.s
  group: GRPSERIAL
  info:
    extraopts:
      - '" -std=c99 -pedantic -Wconversion "'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:134:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:135:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:136:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wconversion-complex-gnu_277:
  build:
    cflags: '  -std=gnu99 -Wconversion  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wconversion-complex-gnu.c'
    sources:
      binary: Wconversion-complex-gnu.s
  group: GRPSERIAL
  info:
    extraopts:
      - '" -std=gnu99 -Wconversion "'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wconversion-integer-no-sign_278:
  build:
    cflags: ' -std=c99 -fsigned-char -Wconversion -Wno-sign-conversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wconversion-integer-no-sign.c'
    sources:
      binary: Wconversion-integer-no-sign.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -fsigned-char -Wconversion -Wno-sign-conversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wconversion-integer_279:
  build:
    cflags: ' -std=c99 -fsigned-char -Wconversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wconversion-integer.c'
    sources:
      binary: Wconversion-integer.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -fsigned-char -Wconversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*( conversion" "conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type" "implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*( conversion" "conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type" "implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wconversion-pr34389_280:
  build:
    cflags: ' -Wconversion -Wsign-conversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wconversion-pr34389.c'
    sources:
      binary: Wconversion-pr34389.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wconversion -Wsign-conversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wconversion-real-integer_281:
  build:
    cflags: ' -std=c99 -Wconversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wconversion-real-integer.c'
    sources:
      binary: Wconversion-real-integer.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -Wconversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-10_283:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-10.c'
    sources:
      binary: Wcxx-compat-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-11_284:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-11.c'
    sources:
      binary: Wcxx-compat-11.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(promoted))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(promoted))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-12_285:
  build:
    cflags: ' -fno-short-enums -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-12.c'
    sources:
      binary: Wcxx-compat-12.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-short-enums -Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible in C\[+\]\[+\]))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-13_286:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-13.c'
    sources:
      binary: Wcxx-compat-13.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-14_287:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-14.c'
    sources:
      binary: Wcxx-compat-14.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(C\[+\]\[+\]))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-15_288:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-15.c'
    sources:
      binary: Wcxx-compat-15.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(C\[+\]\[+\]))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-16_289:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-16.c'
    sources:
      binary: Wcxx-compat-16.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(C\[+\]\[+\]))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-17_290:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-17.c'
    sources:
      binary: Wcxx-compat-17.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-18_291:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-18.c'
    sources:
      binary: Wcxx-compat-18.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-19_292:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-19.c'
    sources:
      binary: Wcxx-compat-19.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-1_282:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-1.c'
    sources:
      binary: Wcxx-compat-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(not permitted))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-20_294:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-20.c'
    sources:
      binary: Wcxx-compat-20.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized const member in))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized const member in))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized const member in))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized const member in))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized const member in))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-21_295:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-21.c'
    sources:
      binary: Wcxx-compat-21.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-22_296:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-22.c'
    sources:
      binary: Wcxx-compat-22.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(empty struct has size 0 in C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(empty union has size 0 in C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(empty struct has size 0 in C|declaration does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(empty union has size 0 in C|declaration does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(empty union has size 0 in C|declaration does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(empty struct has size 0 in C|declaration does not declare anything))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-2_293:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-2.c'
    sources:
      binary: Wcxx-compat-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-3_297:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-3.c'
    sources:
      binary: Wcxx-compat-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-4_298:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-4.c'
    sources:
      binary: Wcxx-compat-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-5_299:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-5.c'
    sources:
      binary: Wcxx-compat-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-6_300:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-6.c'
    sources:
      binary: Wcxx-compat-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-7_301:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-7.c'
    sources:
      binary: Wcxx-compat-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(not visible in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(not visible in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(not visible in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(not visible in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(not visible in C\[+\]\[+\]))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-8_302:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-8.c'
    sources:
      binary: Wcxx-compat-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid application of 'sizeof'" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid application of '__alignof__'" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'w5' isn't known" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type" "))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(not visible in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-9_303:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-9.c'
    sources:
      binary: Wcxx-compat-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wdeclaration-after-statement-1_304:
  build:
    cflags: ' -Wdeclaration-after-statement'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wdeclaration-after-statement-1.c'
    sources:
      binary: ./Wdeclaration-after-statement-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wdeclaration-after-statement"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(" "declaration after statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(" "declaration after statement))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wdeclaration-after-statement-2_305:
  build:
    cflags: ' -std=c99 -pedantic-errors -Wdeclaration-after-statement'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wdeclaration-after-statement-2.c'
    sources:
      binary: ./Wdeclaration-after-statement-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors -Wdeclaration-after-statement"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(" "declaration-after-statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(" "declaration-after-statement))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wdeclaration-after-statement-3_306:
  build:
    cflags: ' -std=c99 -pedantic -Werror=declaration-after-statement -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wdeclaration-after-statement-3.c'
    sources:
      binary: Wdeclaration-after-statement-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic -Werror=declaration-after-statement"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "declaration-after-statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "declaration-after-statement))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wdeclaration-after-statement-4_307:
  build:
    cflags: ' -std=c90 -pedantic -Wno-declaration-after-statement -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wdeclaration-after-statement-4.c'
    sources:
      binary: Wdeclaration-after-statement-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c90 -pedantic -Wno-declaration-after-statement"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wdesignated-init-2_308:
  build:
    cflags: ' -std=gnu11 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wdesignated-init-2.c'
    sources:
      binary: Wdesignated-init-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wdesignated-init_309:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wdesignated-init.c'
    sources:
      binary: Wdesignated-init.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(only valid))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(only valid))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(only valid))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wdouble-promotion_310:
  build:
    cflags: ' -Wdouble-promotion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wdouble-promotion.c'
    sources:
      binary: Wdouble-promotion.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wdouble-promotion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wduplicate-decl-specifier-c11_311:
  build:
    cflags: ' -std=c11 -Wduplicate-decl-specifier -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wduplicate-decl-specifier-c11.c'
    sources:
      binary: Wduplicate-decl-specifier-c11.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -Wduplicate-decl-specifier"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate ._Atomic.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate ._Atomic.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate ._Atomic.))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wduplicate-decl-specifier_312:
  build:
    cflags: ' -Wduplicate-decl-specifier -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wduplicate-decl-specifier.c'
    sources:
      binary: Wduplicate-decl-specifier.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wduplicate-decl-specifier"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .const.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .volatile.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .restrict.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .const.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .volatile.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .restrict.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .const.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .volatile.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .restrict.))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wenum-compare-1_313:
  build:
    cflags: ' -Wenum-compare -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wenum-compare-1.c'
    sources:
      binary: Wenum-compare-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wenum-compare"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison between .enum E1. and .enum E2.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison between .enum E1. and .enum E2.))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-10_315:
  build:
    cflags: ' -Wattributes -Werror -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-10.c'
    sources:
      binary: Werror-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wattributes -Werror"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.* attribute directive ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.* will always evaluate as 'true'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-11_316:
  build:
    cflags: ' -Wattributes -Werror -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-11.c'
    sources:
      binary: Werror-11.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wattributes -Werror"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.* attribute directive ignored))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(.* will always evaluate as 'true'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-12_317:
  build:
    cflags: ' -Wattributes -Waddress -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-12.c'
    sources:
      binary: Werror-12.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wattributes -Waddress"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute directive ignored))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-13_318:
  build:
    cflags: ' -Werror=error -Werror=p, -Werror=l, -Werror=fatal-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-13.c'
    sources:
      binary: Werror-13.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Werror=error -Werror=p, -Werror=l, -Werror=fatal-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(-Wp, is not an option that controls warnings" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(-Wl, is not an option that controls warnings" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(-Werror is not an option that controls warnings" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(-Wfatal-errors is not an option that controls warnings" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-1_314:
  build:
    cflags: ' -Waddress -Wattributes -Werror -fshow-column -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-1.c'
    sources:
      binary: Werror-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Waddress -Wattributes -Werror -fshow-column"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.* attribute directive ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:.* will always evaluate as 'true'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-2_319:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-2.c'
    sources:
      binary: Werror-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(.* attribute directive ignored))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-3_320:
  build:
    cflags: ' -Waddress -Wattributes -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-3.c'
    sources:
      binary: Werror-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Waddress -Wattributes"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(.* attribute directive ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(.* will always evaluate as 'true'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-4_321:
  build:
    cflags: ' -Wattributes -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-4.c'
    sources:
      binary: Werror-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wattributes"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(will always evaluate as 'true'))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute directive ignored))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-5_322:
  build:
    cflags: ' -Waddress -Wattributes -Werror -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-5.c'
    sources:
      binary: Werror-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Waddress -Wattributes -Werror"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.* attribute directive ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.* will always evaluate as 'true'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-6_323:
  build:
    cflags: ' -Wattributes -Werror=address -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-6.c'
    sources:
      binary: Werror-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wattributes -Werror=address"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.* will always evaluate as 'true'))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(.* attribute directive ignored))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-7_324:
  build:
    cflags: ' -Waddress -Werror -Wno-error=address -Wattributes -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-7.c'
    sources:
      binary: Werror-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Waddress -Werror -Wno-error=address -Wattributes"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.* attribute directive ignored))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(.* will always evaluate as 'true'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-8_325:
  build:
    cflags: ' -Wattributes -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-8.c'
    sources:
      binary: Werror-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wattributes"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(.* attribute directive ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(.* will always evaluate as 'true'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-implicit-function-declaration_326:
  build:
    cflags: ' -std=c89 -Werror-implicit-function-declaration -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-implicit-function-declaration.c'
    sources:
      binary: Werror-implicit-function-declaration.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -Werror-implicit-function-declaration"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(implicit declaration of function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wfatal-2_327:
  build:
    cflags: ' -Woverflow -Wdiv-by-zero -Werror -Wfatal-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wfatal-2.c'
    sources:
      binary: Wfatal-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Woverflow -Wdiv-by-zero -Werror -Wfatal-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wfatal_328:
  build:
    cflags: ' -Woverflow -Werror=div-by-zero -Wfatal-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wfatal.c'
    sources:
      binary: Wfatal.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Woverflow -Werror=div-by-zero -Wfatal-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(division by zero))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wfloat-equal-1_329:
  build:
    cflags: ' -Wfloat-equal -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wfloat-equal-1.c'
    sources:
      binary: Wfloat-equal-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wfloat-equal"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(comparing floating point))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(comparing floating point))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(comparing floating point))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(comparing floating point))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wframe-address-in-Wall_330:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wframe-address-in-Wall.c'
    sources:
      binary: Wframe-address-in-Wall.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_frame_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_return_address))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wframe-address_331:
  build:
    cflags: ' -Wframe-address -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wframe-address.c'
    sources:
      binary: Wframe-address.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wframe-address"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_frame_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_frame_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_frame_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_frame_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_return_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_return_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_return_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_return_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_frame_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_frame_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_frame_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_frame_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_return_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_return_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_return_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_return_address))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wframe-larger-than_332:
  build:
    cflags: ' -Wframe-larger-than=2048 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wframe-larger-than.c'
    sources:
      binary: Wframe-larger-than.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wframe-larger-than=2048"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(the frame size of .* bytes is larger than 2048 bytes))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wimplicit-fallthrough-1_333:
  build:
    cflags: ' -Wimplicit-fallthrough -Wdeclaration-after-statement -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wimplicit-fallthrough-1.c'
    sources:
      binary: Wimplicit-fallthrough-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wimplicit-fallthrough -Wdeclaration-after-statement"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(mixed declarations and code))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wimplicit-function-declaration-c89-default_334:
  build:
    cflags: ' -std=c89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wimplicit-function-declaration-c89-default.c'
    sources:
      binary: Wimplicit-function-declaration-c89-default.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c89"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wimplicit-function-declaration-c89-pedantic_335:
  build:
    cflags: ' -std=c89 -pedantic-errors -Wimplicit-function-declaration -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wimplicit-function-declaration-c89-pedantic.c'
    sources:
      binary: Wimplicit-function-declaration-c89-pedantic.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -pedantic-errors -Wimplicit-function-declaration"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit declaration of function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wimplicit-function-declaration-c89_336:
  build:
    cflags: ' -std=c89 -Wimplicit-function-declaration -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wimplicit-function-declaration-c89.c'
    sources:
      binary: Wimplicit-function-declaration-c89.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -Wimplicit-function-declaration"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit declaration of function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wimplicit-function-declaration-c99-pedantic_337:
  build:
    cflags: ' -std=c99 -pedantic-errors -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wimplicit-function-declaration-c99-pedantic.c'
    sources:
      binary: Wimplicit-function-declaration-c99-pedantic.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors -Wall"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(implicit declaration of function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wimplicit-function-declaration-c99_338:
  build:
    cflags: ' -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wimplicit-function-declaration-c99.c'
    sources:
      binary: Wimplicit-function-declaration-c99.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit declaration of function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wimplicit-int-1_339:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wimplicit-int-1.c'
    sources:
      binary: Wimplicit-int-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(type defaults to))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(return type defaults to))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(type of .a. defaults to .int." "type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(type defaults to))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(type defaults to))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wimplicit-int-2_340:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wimplicit-int-2.c'
    sources:
      binary: Wimplicit-int-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(type defaults to))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(return type defaults to))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(type of .a. defaults to .int." "type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(type defaults to))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(type defaults to))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wimplicit-int-3_341:
  build:
    cflags: ' -pedantic-errors -Wno-implicit-int -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wimplicit-int-3.c'
    sources:
      binary: Wimplicit-int-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors -Wno-implicit-int"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wimplicit-int-4_342:
  build:
    cflags: ' -Wno-implicit -Wimplicit-int -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wimplicit-int-4.c'
    sources:
      binary: Wimplicit-int-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wno-implicit -Wimplicit-int"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(type defaults to))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(return type defaults to))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(type of .a. defaults to .int." "type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(type defaults to))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(type defaults to))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wincompatible-pointer-types_343:
  build:
    cflags: ' -Wno-incompatible-pointer-types -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wincompatible-pointer-types.c'
    sources:
      binary: Wincompatible-pointer-types.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wno-incompatible-pointer-types"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wint-conversion_344:
  build:
    cflags: ' -Wno-int-conversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wint-conversion.c'
    sources:
      binary: Wint-conversion.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wno-int-conversion"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wjump-misses-init-1_345:
  build:
    cflags: ' -Wjump-misses-init -Wno-switch-unreachable -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wjump-misses-init-1.c'
    sources:
      binary: Wjump-misses-init-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wjump-misses-init -Wno-switch-unreachable"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(jump))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(jump))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(jump))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(jump))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wjump-misses-init-2_346:
  build:
    cflags: ' -Wjump-misses-init -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wjump-misses-init-2.c'
    sources:
      binary: Wjump-misses-init-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wjump-misses-init -std=c99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(jump))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(jump))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wlarger-than2_348:
  build:
    cflags: ' -Wlarger-than=8 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wlarger-than2.c'
    sources:
      binary: Wlarger-than2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wlarger-than=8"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(size of.*9 bytes))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wlarger-than_347:
  build:
    cflags: ' -Wlarger-than-32768 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wlarger-than.c'
    sources:
      binary: Wlarger-than.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wlarger-than-32768"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wlogical-op-1_349:
  build:
    cflags: ' -Wlogical-op -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wlogical-op-1.c'
    sources:
      binary: Wlogical-op-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wlogical-op"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(logical))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(logical))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(logical))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(logical))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(logical))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(logical))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(logical))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(logical))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wmissing-braces-fixits_350:
  build:
    cflags: ' -Wmissing-braces -fdiagnostics-show-caret -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wmissing-braces-fixits.c'
    sources:
      binary: Wmissing-braces-fixits.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-braces -fdiagnostics-show-caret"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:126:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:152:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:186:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wmissing-parameter-type-Wextra_351:
  build:
    cflags: ' -Wextra -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wmissing-parameter-type-Wextra.c'
    sources:
      binary: Wmissing-parameter-type-Wextra.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wextra"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(type of 'bar' defaults to 'int'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wmissing-parameter-type-no_352:
  build:
    cflags: ' -Wall -Wextra -Wno-missing-parameter-type -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wmissing-parameter-type-no.c'
    sources:
      binary: Wmissing-parameter-type-no.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wextra -Wno-missing-parameter-type -std=gnu89"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wmissing-parameter-type_353:
  build:
    cflags: ' -Wmissing-parameter-type -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wmissing-parameter-type.c'
    sources:
      binary: Wmissing-parameter-type.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-parameter-type"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(type of 'bar' defaults to 'int'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wnested-externs-1_354:
  build:
    cflags: ' -Wnested-externs -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wnested-externs-1.c'
    sources:
      binary: Wnested-externs-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wnested-externs"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(nested extern declaration of 'a'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(nested extern declaration of 'b'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(nested extern declaration of 'c'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(nested extern declaration of 'd'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(nested extern declaration of 'f0'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(nested extern declaration of 'f1'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(nested extern declaration of 'f2'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wnested-externs-2_355:
  build:
    cflags: ' -Wnested-externs -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wnested-externs-2.c'
    sources:
      binary: Wnested-externs-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wnested-externs"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(14:nested extern declaration of 'i'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(16:nested extern declaration of 'foo'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(20:nested extern declaration of 's'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wno-all_356:
  build:
    cflags: ' -Wall -Wno-all -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wno-all.c'
    sources:
      binary: Wno-all.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wno-all"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wno-c++-compat_357:
  build:
    cflags: ' -Wno-c++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wno-c++-compat.c'
    sources:
      binary: Wno-c++-compat.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wno-c++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized and declared))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wno-frame-address_358:
  build:
    cflags: ' -Werror -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wno-frame-address.c'
    sources:
      binary: Wno-frame-address.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Werror"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wno-pointer-sign_359:
  build:
    cflags: ' -Wno-pointer-sign -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wno-pointer-sign.c'
    sources:
      binary: Wno-pointer-sign.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wno-pointer-sign"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wobjsize-1_360:
  build:
    cflags: ' -O2 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wobjsize-1.c'
    sources:
      binary: Wobjsize-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(writing" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wold-style-definition-1_361:
  build:
    cflags: ' -Wold-style-definition -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wold-style-definition-1.c'
    sources:
      binary: Wold-style-definition-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wold-style-definition -std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(old-style function definition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(old-style function definition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(old-style function definition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(old-style function definition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(old-style function definition))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wold-style-definition-2_362:
  build:
    cflags: ' -Wold-style-definition -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wold-style-definition-2.c'
    sources:
      binary: Wold-style-definition-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wold-style-definition"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C requires a named argument))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverflow-1_363:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverflow-1.c'
    sources:
      binary: Woverflow-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverflow-2_364:
  build:
    cflags: ' -O2 -Woverflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverflow-2.c'
    sources:
      binary: Woverflow-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Woverflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverflow-3_365:
  build:
    cflags: ' -O2 -Wno-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverflow-3.c'
    sources:
      binary: Woverflow-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wno-overflow"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverlength-strings-pedantic-c89-asm_366:
  build:
    cflags: ' -std=c89 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverlength-strings-pedantic-c89-asm.c'
    sources:
      binary: Woverlength-strings-pedantic-c89-asm.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -pedantic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverlength-strings-pedantic-c89-ext_367:
  build:
    cflags: ' -std=c89 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverlength-strings-pedantic-c89-ext.c'
    sources:
      binary: Woverlength-strings-pedantic-c89-ext.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -pedantic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverlength-strings-pedantic-c89-no_368:
  build:
    cflags: ' -std=c89 -pedantic -Wno-overlength-strings -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverlength-strings-pedantic-c89-no.c'
    sources:
      binary: Woverlength-strings-pedantic-c89-no.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -pedantic -Wno-overlength-strings"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverlength-strings-pedantic-c89_369:
  build:
    cflags: ' -std=c89 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverlength-strings-pedantic-c89.c'
    sources:
      binary: Woverlength-strings-pedantic-c89.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(greater than))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(greater than))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverlength-strings-pedantic-c90-asm_370:
  build:
    cflags: ' -std=c90 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverlength-strings-pedantic-c90-asm.c'
    sources:
      binary: Woverlength-strings-pedantic-c90-asm.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c90 -pedantic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverlength-strings-pedantic-c90-ext_371:
  build:
    cflags: ' -std=c90 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverlength-strings-pedantic-c90-ext.c'
    sources:
      binary: Woverlength-strings-pedantic-c90-ext.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c90 -pedantic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverlength-strings-pedantic-c90_372:
  build:
    cflags: ' -std=c90 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverlength-strings-pedantic-c90.c'
    sources:
      binary: Woverlength-strings-pedantic-c90.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c90 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(greater than))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(greater than))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverlength-strings-pedantic-c99-asm_373:
  build:
    cflags: ' -std=c99 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverlength-strings-pedantic-c99-asm.c'
    sources:
      binary: Woverlength-strings-pedantic-c99-asm.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverlength-strings-pedantic-c99-ext_374:
  build:
    cflags: ' -std=c99 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverlength-strings-pedantic-c99-ext.c'
    sources:
      binary: Woverlength-strings-pedantic-c99-ext.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverlength-strings-pedantic-c99-no_375:
  build:
    cflags: ' -std=c99 -pedantic -Wno-overlength-strings -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverlength-strings-pedantic-c99-no.c'
    sources:
      binary: Woverlength-strings-pedantic-c99-no.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic -Wno-overlength-strings"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverlength-strings-pedantic-c99_376:
  build:
    cflags: ' -std=c99 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverlength-strings-pedantic-c99.c'
    sources:
      binary: Woverlength-strings-pedantic-c99.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(greater than))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverlength-strings_377:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverlength-strings.c'
    sources:
      binary: Woverlength-strings.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverride-init-1_378:
  build:
    cflags: ' -Woverride-init -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverride-init-1.c'
    sources:
      binary: Woverride-init-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Woverride-init"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field overwritten))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverride-init-2_379:
  build:
    cflags: ' -Wextra -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverride-init-2.c'
    sources:
      binary: Woverride-init-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wextra"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field overwritten))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverride-init-3_380:
  build:
    cflags: ' -Wextra -Wno-override-init -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverride-init-3.c'
    sources:
      binary: Woverride-init-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wextra -Wno-override-init"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverride-init-side-effects-1_381:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverride-init-side-effects-1.c'
    sources:
      binary: Woverride-init-side-effects-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field with side-effects overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field with side-effects overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field with side-effects overwritten))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverride-init-side-effects-2_382:
  build:
    cflags: ' -Wno-override-init-side-effects -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverride-init-side-effects-2.c'
    sources:
      binary: Woverride-init-side-effects-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wno-override-init-side-effects"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wpadded_383:
  build:
    cflags: ' -Wpadded -fpack-struct=8 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wpadded.c'
    sources:
      binary: Wpadded.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wpadded -fpack-struct=8"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(padding struct to align" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-10_385:
  build:
    cflags: ' -Wparentheses -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-10.c'
    sources:
      binary: Wparentheses-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses -std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-11_386:
  build:
    cflags: ' -Wparentheses -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-11.c'
    sources:
      binary: Wparentheses-11.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:161:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:165:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:170:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:171:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:174:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:177:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:178:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:179:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:180:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:182:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:185:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:186:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:187:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:194:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:195:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:197:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:199:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:201:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:202:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:203:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:204:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:205:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:206:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:207:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:209:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-12_387:
  build:
    cflags: ' -Wparentheses -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-12.c'
    sources:
      binary: Wparentheses-12.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-13_388:
  build:
    cflags: ' -Wparentheses -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-13.c'
    sources:
      binary: Wparentheses-13.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-14_389:
  build:
    cflags: ' -Wparentheses -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-14.c'
    sources:
      binary: Wparentheses-14.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(7:suggest parentheses))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-1_384:
  build:
    cflags: ' -Wparentheses -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-1.c'
    sources:
      binary: Wparentheses-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - -Wparentheses
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-2_390:
  build:
    cflags: ' -Wparentheses -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-2.c'
    sources:
      binary: Wparentheses-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(mathematical meaning" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(mathematical meaning" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(mathematical meaning" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(mathematical meaning" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(mathematical meaning" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(mathematical meaning" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(mathematical meaning" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(mathematical meaning" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(mathematical meaning" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(mathematical meaning" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(mathematical meaning" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(mathematical meaning" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-3_391:
  build:
    cflags: ' -Wparentheses -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-3.c'
    sources:
      binary: Wparentheses-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses -std=gnu99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment" "correct warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-4_392:
  build:
    cflags: ' -Wparentheses -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-4.c'
    sources:
      binary: Wparentheses-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-5_393:
  build:
    cflags: ' -Wparentheses -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-5.c'
    sources:
      binary: Wparentheses-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-6_394:
  build:
    cflags: ' -Wparentheses -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-6.c'
    sources:
      binary: Wparentheses-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-7_395:
  build:
    cflags: ' -Wparentheses -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-7.c'
    sources:
      binary: Wparentheses-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-8_396:
  build:
    cflags: ' -Wparentheses -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-8.c'
    sources:
      binary: Wparentheses-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-9_397:
  build:
    cflags: ' -Wparentheses -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-9.c'
    sources:
      binary: Wparentheses-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous" "correct warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wpointer-arith_398:
  build:
    cflags: ' -Werror=pointer-arith -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wpointer-arith.c'
    sources:
      binary: Wpointer-arith.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Werror=pointer-arith"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong type argument to increment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wpointer-sign-Wall-no_399:
  build:
    cflags: ' -Wno-pointer-sign -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wpointer-sign-Wall-no.c'
    sources:
      binary: Wpointer-sign-Wall-no.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wno-pointer-sign -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wpointer-sign-Wall_400:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wpointer-sign-Wall.c'
    sources:
      binary: Wpointer-sign-Wall.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(differ in signedness))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wpointer-sign-pedantic-no_401:
  build:
    cflags: ' -Wno-pointer-sign -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wpointer-sign-pedantic-no.c'
    sources:
      binary: Wpointer-sign-pedantic-no.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wno-pointer-sign -pedantic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wpointer-sign-pedantic_402:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wpointer-sign-pedantic.c'
    sources:
      binary: Wpointer-sign-pedantic.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(differ in signedness))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wpointer-sign_403:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wpointer-sign.c'
    sources:
      binary: Wpointer-sign.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wpointer-to-int-cast-1_404:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wpointer-to-int-cast-1.c'
    sources:
      binary: Wpointer-to-int-cast-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from pointer to integer of different size))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wpointer-to-int-cast-2_405:
  build:
    cflags: ' -Wpointer-to-int-cast -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wpointer-to-int-cast-2.c'
    sources:
      binary: Wpointer-to-int-cast-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wpointer-to-int-cast"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from pointer to integer of different size))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wpointer-to-int-cast-3_406:
  build:
    cflags: ' -Wno-pointer-to-int-cast -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wpointer-to-int-cast-3.c'
    sources:
      binary: Wpointer-to-int-cast-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wno-pointer-to-int-cast"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(cast to pointer from integer of different size))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wpragmas-1_407:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wpragmas-1.c'
    sources:
      binary: Wpragmas-1.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(bad option))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wredundant-decls-1_408:
  build:
    cflags: ' -Wredundant-decls -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wredundant-decls-1.c'
    sources:
      binary: Wredundant-decls-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wredundant-decls"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(redundant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wredundant-decls-2_409:
  build:
    cflags: ' -Wredundant-decls -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wredundant-decls-2.c'
    sources:
      binary: Wredundant-decls-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wredundant-decls"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(5:redundant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(12:redundant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(12:redundant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(12:redundant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(5:redundant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wreturn-local-addr_410:
  build:
    cflags: ' -Werror=return-local-addr -c'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wreturn-local-addr.c'
    sources:
      binary: Wreturn-local-addr.o
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Werror=return-local-addr"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(address of local variable))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wreturn-type2_412:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wreturn-type2.c'
    sources:
      binary: Wreturn-type2.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wreturn-type_411:
  build:
    cflags: ' -Wreturn-type -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wreturn-type.c'
    sources:
      binary: Wreturn-type.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wreturn-type"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(return" "missing return))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wsequence-point-pr18050_413:
  build:
    cflags: ' -Wsequence-point -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wsequence-point-pr18050.c'
    sources:
      binary: Wsequence-point-pr18050.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wsequence-point"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(operation on 'y' may be undefined))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wshadow-1_414:
  build:
    cflags: ' -Wshadow -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wshadow-1.c'
    sources:
      binary: Wshadow-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wshadow -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redeclared as different" "))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows a global decl))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows a parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows a previous local))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wshadow-2_415:
  build:
    cflags: ' -Wshadow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wshadow-2.c'
    sources:
      binary: Wshadow-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wshadow"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wshadow-3_416:
  build:
    cflags: ' -std=gnu89 -Wshadow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wshadow-3.c'
    sources:
      binary: Wshadow-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -Wshadow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(declaration of 'v' shadows a global declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(declaration of 'v' shadows a global declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(declaration of 'v' shadows a global declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(declaration of 'v' shadows a global declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(declaration of 'v' shadows a global declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(declaration of 'v' shadows a global declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(declaration of 'v' shadows a global declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(declaration of 'a' shadows a parameter))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wshadow-4_417:
  build:
    cflags: ' -Wshadow -Wsystem-headers -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wshadow-4.c'
    sources:
      binary: Wshadow-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wshadow -Wsystem-headers"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wshadow-compatible-local-1_418:
  build:
    cflags: ' -Wshadow=compatible-local -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wshadow-compatible-local-1.c'
    sources:
      binary: Wshadow-compatible-local-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wshadow=compatible-local"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows a previous local))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows a previous local))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wshadow-local-1_419:
  build:
    cflags: ' -Wshadow=local -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wshadow-local-1.c'
    sources:
      binary: Wshadow-local-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wshadow=local"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows a parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows a previous local))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wshadow-local-2_420:
  build:
    cflags: ' -Wshadow=local -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wshadow-local-2.c'
    sources:
      binary: Wshadow-local-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wshadow=local"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows a previous local))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows a previous local))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows a previous local))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wshadow-local-3_421:
  build:
    cflags: ' -Wno-shadow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wshadow-local-3.c'
    sources:
      binary: Wshadow-local-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wno-shadow"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wsign-conversion_422:
  build:
    cflags: ' -std=c99 -fsigned-char -Wsign-conversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wsign-conversion.c'
    sources:
      binary: Wsign-conversion.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -fsigned-char -Wsign-conversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wsizeof-pointer-memaccess1_423:
  build:
    cflags: ' -Wall -Wno-sizeof-array-argument -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wsizeof-pointer-memaccess1.c'
    sources:
      binary: Wsizeof-pointer-memaccess1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wno-sizeof-array-argument"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the first source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the first source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the first source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the second source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the second source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the second source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:177:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:178:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:179:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:180:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:182:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:186:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:187:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:194:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:197:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:199:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:201:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:202:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:203:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:204:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:206:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:207:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:209:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:210:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:211:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the first source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:212:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the first source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the first source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:215:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:216:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:218:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:220:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the second source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:221:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the second source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:222:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the second source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:328:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:329:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:330:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:331:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:332:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:334:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:335:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:336:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:337:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:338:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:340:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:341:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:342:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:343:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:344:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:346:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:347:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:348:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:349:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:350:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:352:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:353:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:354:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:355:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:356:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to dereference it))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-aliasing-bogus-const-ptr-nonconst-ptr_424:
  build:
    cflags: ' -O2 -Wstrict-aliasing -fstrict-aliasing -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-aliasing-bogus-const-ptr-nonconst-ptr.c'
    sources:
      binary: Wstrict-aliasing-bogus-const-ptr-nonconst-ptr.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstrict-aliasing -fstrict-aliasing"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-aliasing-bogus-never-dereferenced_425:
  build:
    cflags: ' -O2 -Wstrict-aliasing -fstrict-aliasing -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-aliasing-bogus-never-dereferenced.c'
    sources:
      binary: Wstrict-aliasing-bogus-never-dereferenced.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstrict-aliasing -fstrict-aliasing"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-aliasing-bogus-pta-1_426:
  build:
    cflags: ' -O2 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-aliasing-bogus-pta-1.c'
    sources:
      binary: Wstrict-aliasing-bogus-pta-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-aliasing-bogus-ref-all-2_427:
  build:
    cflags: ' -O2 -Wall -msse2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-aliasing-bogus-ref-all-2.c'
    sources:
      binary: Wstrict-aliasing-bogus-ref-all-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
      - '"-O2 -Wall -mabi=altivec" { target { { powerpc*-*-linux* } && ilp32 } }'
      - '"-O2 -Wall -msse2" { target { i?86-*-* x86_64-*-* } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-aliasing-bogus-ref-all_428:
  build:
    cflags: ' -O2 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-aliasing-bogus-ref-all.c'
    sources:
      binary: Wstrict-aliasing-bogus-ref-all.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(will break))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(will break))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-aliasing-bogus-struct-included_429:
  build:
    cflags: ' -O2 -Wstrict-aliasing -fstrict-aliasing -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-aliasing-bogus-struct-included.c'
    sources:
      binary: Wstrict-aliasing-bogus-struct-included.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstrict-aliasing -fstrict-aliasing"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-aliasing-bogus-upcast_430:
  build:
    cflags: ' -O2 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-aliasing-bogus-upcast.c'
    sources:
      binary: Wstrict-aliasing-bogus-upcast.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-aliasing-bogus-vla-1_431:
  build:
    cflags: ' -std=gnu99 -O2 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-aliasing-bogus-vla-1.c'
    sources:
      binary: Wstrict-aliasing-bogus-vla-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -O2 -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-aliasing-converted-assigned_432:
  build:
    cflags: ' -O2 -Wstrict-aliasing -fstrict-aliasing -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-aliasing-converted-assigned.c'
    sources:
      binary: Wstrict-aliasing-converted-assigned.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstrict-aliasing -fstrict-aliasing"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(type-punn" "type-punn))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-aliasing-float-ptr-int-obj_433:
  build:
    cflags: ' -O -Wstrict-aliasing -fstrict-aliasing -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-aliasing-float-ptr-int-obj.c'
    sources:
      binary: Wstrict-aliasing-float-ptr-int-obj.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wstrict-aliasing -fstrict-aliasing"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(does break strict-aliasing" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-aliasing-struct-with-char-member_434:
  build:
    cflags: ' -O2 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-aliasing-struct-with-char-member.c'
    sources:
      binary: Wstrict-aliasing-struct-with-char-member.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(will break strict-aliasing))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-10_436:
  build:
    cflags: ' -fstrict-overflow -O2 -Wstrict-overflow=1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-10.c'
    sources:
      binary: Wstrict-overflow-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-11_437:
  build:
    cflags: ' -fstrict-overflow -O2 -Wstrict-overflow=1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-11.c'
    sources:
      binary: Wstrict-overflow-11.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-12_438:
  build:
    cflags: ' -fstrict-overflow -O2 -Wstrict-overflow=2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-12.c'
    sources:
      binary: Wstrict-overflow-12.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming signed overflow does not occur" "correct warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-13_439:
  build:
    cflags: ' -fstrict-overflow -O2 -Wstrict-overflow=2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-13.c'
    sources:
      binary: Wstrict-overflow-13.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming signed overflow does not occur" "correct warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-14_440:
  build:
    cflags: ' -fstrict-overflow -O2 -Wstrict-overflow=4 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-14.c'
    sources:
      binary: Wstrict-overflow-14.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=4"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming signed overflow does not occur" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-15_441:
  build:
    cflags: ' -fstrict-overflow -O2 -Wstrict-overflow=4 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-15.c'
    sources:
      binary: Wstrict-overflow-15.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=4"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming signed overflow does not occur" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-16_442:
  build:
    cflags: ' -fstrict-overflow -O2 -Wstrict-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-16.c'
    sources:
      binary: Wstrict-overflow-16.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-17_443:
  build:
    cflags: ' -fstrict-overflow -O2 -Wstrict-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-17.c'
    sources:
      binary: Wstrict-overflow-17.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-18_444:
  build:
    cflags: ' -fstrict-overflow -O2 -Wstrict-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-18.c'
    sources:
      binary: Wstrict-overflow-18.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(signed overflow" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-19_445:
  build:
    cflags: ' -fstrict-overflow -O2 -Wstrict-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-19.c'
    sources:
      binary: Wstrict-overflow-19.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-1_435:
  build:
    cflags: ' -fstrict-overflow -O2 -Wstrict-overflow=3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-1.c'
    sources:
      binary: Wstrict-overflow-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=3"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming signed overflow does not occur" "correct warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-20_447:
  build:
    cflags: ' -fstrict-overflow -O2 -Wstrict-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-20.c'
    sources:
      binary: Wstrict-overflow-20.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-21_448:
  build:
    cflags: ' -fstrict-overflow -O2 -Wstrict-overflow=2 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-21.c'
    sources:
      binary: Wstrict-overflow-21.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=2 -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming signed overflow does not occur" "correct warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-22_449:
  build:
    cflags: ' -fstrict-overflow -O2 -Wstrict-overflow=3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-22.c'
    sources:
      binary: Wstrict-overflow-22.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=3"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming pointer wraparound does not occur" "correct warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-23_450:
  build:
    cflags: ' -O2 -Wstrict-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-23.c'
    sources:
      binary: Wstrict-overflow-23.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstrict-overflow"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-24_451:
  build:
    cflags: ' -fstrict-overflow -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-24.c'
    sources:
      binary: Wstrict-overflow-24.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assuming signed overflow does not occur" "correct warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-25_452:
  build:
    cflags: ' -fstrict-overflow -O2 -Wstrict-overflow=3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-25.c'
    sources:
      binary: Wstrict-overflow-25.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=3"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming signed overflow does not occur" "correct warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-26_453:
  build:
    cflags: ' -O2 -Wstrict-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-26.c'
    sources:
      binary: Wstrict-overflow-26.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstrict-overflow"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-2_446:
  build:
    cflags: ' -fstrict-overflow -O2 -Wstrict-overflow=2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-2.c'
    sources:
      binary: Wstrict-overflow-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-3_454:
  build:
    cflags: ' -fstrict-overflow -O2 -Wstrict-overflow=4 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-3.c'
    sources:
      binary: Wstrict-overflow-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=4"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming signed overflow does not occur" "correct warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-4_455:
  build:
    cflags: ' -fstrict-overflow -O2 -Wstrict-overflow=3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-4.c'
    sources:
      binary: Wstrict-overflow-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-5_456:
  build:
    cflags: ' -fstrict-overflow -O2 -Wstrict-overflow=3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-5.c'
    sources:
      binary: Wstrict-overflow-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=3"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming signed overflow does not occur" "correct warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-6_457:
  build:
    cflags: ' -fstrict-overflow -O2 -Wstrict-overflow=2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-6.c'
    sources:
      binary: Wstrict-overflow-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-7_458:
  build:
    cflags: ' -fstrict-overflow -O2 -Wstrict-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-7.c'
    sources:
      binary: Wstrict-overflow-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming signed overflow does not occur" "correct warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-8_459:
  build:
    cflags: ' -fstrict-overflow -O2 -Wall -Wno-strict-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-8.c'
    sources:
      binary: Wstrict-overflow-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wall -Wno-strict-overflow"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-9_460:
  build:
    cflags: ' -fstrict-overflow -O2 -Wstrict-overflow=2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-9.c'
    sources:
      binary: Wstrict-overflow-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming signed overflow does not occur" "correct warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstring-literal-comparison-1_461:
  build:
    cflags: ' -Waddress -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstring-literal-comparison-1.c'
    sources:
      binary: Wstring-literal-comparison-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Waddress"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison with string))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstring-literal-comparison-2_462:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstring-literal-comparison-2.c'
    sources:
      binary: Wstring-literal-comparison-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison with string))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstring-literal-comparison-3_463:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstring-literal-comparison-3.c'
    sources:
      binary: Wstring-literal-comparison-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstring-literal-comparison-4_464:
  build:
    cflags: ' -Wall -Wno-address -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstring-literal-comparison-4.c'
    sources:
      binary: Wstring-literal-comparison-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wno-address"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wswitch-2_465:
  build:
    cflags: ' -Wswitch -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wswitch-2.c'
    sources:
      binary: Wswitch-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wswitch"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e4' not handled in switch" "enum e4))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e1' not handled in switch" "enum e1))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wswitch-default_466:
  build:
    cflags: ' -Wswitch-default -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wswitch-default.c'
    sources:
      binary: Wswitch-default.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wswitch-default"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(switch missing default case))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(switch missing default case))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(switch missing default case))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(switch missing default case))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(switch missing default case))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wswitch-enum-2_467:
  build:
    cflags: ' -O2 -Wswitch-enum -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wswitch-enum-2.c'
    sources:
      binary: Wswitch-enum-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wswitch-enum"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(case value '3' not in enumerated" "3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(case value '1' not in enumerated" "1))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wswitch-enum-3_468:
  build:
    cflags: ' -O2 -Wswitch-enum -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wswitch-enum-3.c'
    sources:
      binary: Wswitch-enum-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wswitch-enum"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'a' not handled" "a))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(case value '1' not in enumerated" "1))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wswitch-enum-error_469:
  build:
    cflags: ' -Werror=switch-enum -Wswitch -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wswitch-enum-error.c'
    sources:
      binary: Wswitch-enum-error.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Werror=switch-enum -Wswitch"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumeration value 'e1' not handled in switch" "enum e1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e1' not handled in switch" "enum e1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(case value '3' not in enumerated type 'enum e'" "excess 3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(case value '3' not in enumerated type 'enum e'" "excess 3))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wswitch-enum_470:
  build:
    cflags: ' -Wswitch-enum -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wswitch-enum.c'
    sources:
      binary: Wswitch-enum.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wswitch-enum"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e1' not handled in switch" "enum e1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e1' not handled in switch" "enum e1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(case value '3' not in enumerated type 'enum e'" "excess 3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(case value '3' not in enumerated type 'enum e'" "excess 3))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wswitch-error_471:
  build:
    cflags: ' -Werror=switch -Wswitch-enum -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wswitch-error.c'
    sources:
      binary: Wswitch-error.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Werror=switch -Wswitch-enum"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumeration value 'e1' not handled in switch" "enum e1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(case value '3' not in enumerated type 'enum e'" "excess 3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(case value '3' not in enumerated type 'enum e'" "excess 3))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e1' not handled in switch" "enum e1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wswitch-unreachable-1_472:
  build:
    cflags: ' -Wswitch-unreachable -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wswitch-unreachable-1.c'
    sources:
      binary: Wswitch-unreachable-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wswitch-unreachable"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(switch jumps into scope))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(statement will never be executed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(statement will never be executed))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wswitch-unreachable-2_473:
  build:
    cflags: ' -Wswitch-unreachable -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wswitch-unreachable-2.c'
    sources:
      binary: Wswitch-unreachable-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wswitch-unreachable"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wswitch_474:
  build:
    cflags: ' -Wswitch -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wswitch.c'
    sources:
      binary: Wswitch.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wswitch"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e1' not handled in switch" "enum e1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(case value '3' not in enumerated type 'enum e'" "excess 3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(case value '3' not in enumerated type 'enum e'" "excess 3))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wtraditional-conversion-2_475:
  build:
    cflags: ' -std=c99 -pedantic-errors -Wtraditional-conversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wtraditional-conversion-2.c'
    sources:
      binary: Wtraditional-conversion-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors -Wtraditional-conversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsi' as integer rather than floating due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fsi' as integer rather than floating due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsi' as integer rather than complex due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fsi' as integer rather than complex due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fcf' as complex rather than floating due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fcf' as complex rather than floating due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fcf' as complex rather than integer due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fcf' as complex rather than integer due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'ff' as floating rather than integer due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.ff' as floating rather than integer due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'ff' as floating rather than complex due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.ff' as floating rather than complex due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'ff' as 'float' rather than 'double' due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.ff' as 'float' rather than 'double' due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsll' with different width due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fsll' with different width due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsc' with different width due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fsc' with different width due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsi' as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fsi' as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'full' as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.full' as unsigned due to prototype))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wtraditional-conversion_476:
  build:
    cflags: ' -Wtraditional-conversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wtraditional-conversion.c'
    sources:
      binary: Wtraditional-conversion.s
  group: GRPSERIAL
  info:
    extraopts:
      - -Wtraditional-conversion
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wtrampolines_477:
  build:
    cflags: ' -O2 -Wtrampolines -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wtrampolines.c'
    sources:
      binary: Wtrampolines.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wtrampolines"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(trampoline generated for nested function 'b'" "standard descriptors))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wtype-limits-Wextra_478:
  build:
    cflags: ' -Wextra -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wtype-limits-Wextra.c'
    sources:
      binary: Wtype-limits-Wextra.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wextra"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always false due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always true due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always false due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always true due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always true due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always true due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always false due to limited range of data type" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always true due to limited range of data type" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always false due to limited range of data type" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always true due to limited range of data type" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wtype-limits-no_479:
  build:
    cflags: ' -Wextra -Wno-type-limits -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wtype-limits-no.c'
    sources:
      binary: Wtype-limits-no.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wextra -Wno-type-limits"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wtype-limits2_481:
  build:
    cflags: ' -Wtype-limits -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wtype-limits2.c'
    sources:
      binary: Wtype-limits2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wtype-limits"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always false due to limited range of data type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wtype-limits_480:
  build:
    cflags: ' -Wtype-limits -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wtype-limits.c'
    sources:
      binary: Wtype-limits.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wtype-limits"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always false due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always true due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always false due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always true due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always true due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always true due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always false due to limited range of data type" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always true due to limited range of data type" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always false due to limited range of data type" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always true due to limited range of data type" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunknownprag_482:
  build:
    cflags: ' -Wunknown-pragmas -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wunknownprag.c'
    sources:
      binary: Wunknownprag.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wunknown-pragmas"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(ignoring #pragma))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(ignoring #pragma))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(ignoring #pragma))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(ignoring #pragma))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunsuffixed-float-constants-1_483:
  build:
    cflags: ' -std=gnu99 -Wunsuffixed-float-constants -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wunsuffixed-float-constants-1.c'
    sources:
      binary: Wunsuffixed-float-constants-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wunsuffixed-float-constants"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(unsuffixed float constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(unsuffixed float constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunused-function_484:
  build:
    cflags: ' -Wunused-function -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wunused-function.c'
    sources:
      binary: Wunused-function.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wunused-function"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*('foo' defined but not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*('bar' defined but not used))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunused-label-1_485:
  build:
    cflags: ' -Wunused-label -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wunused-label-1.c'
    sources:
      binary: Wunused-label-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wunused-label"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(not used))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunused-local-typedefs_486:
  build:
    cflags: ' -Wunused-local-typedefs -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wunused-local-typedefs.c'
    sources:
      binary: Wunused-local-typedefs.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wunused-local-typedefs"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(locally defined but not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(locally defined but not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(locally defined but not used))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunused-parm-1_487:
  build:
    cflags: ' -Wunused -W -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wunused-parm-1.c'
    sources:
      binary: Wunused-parm-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wunused -W"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(unused parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(set but not used))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunused-value-1_488:
  build:
    cflags: ' -Wunused-value -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wunused-value-1.c'
    sources:
      binary: Wunused-value-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wunused-value"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(value computed is not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(value computed is not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(value computed is not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(value computed is not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(value computed is not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(value computed is not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(value computed is not used))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunused-value-2_489:
  build:
    cflags: ' -Wunused-value -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wunused-value-2.c'
    sources:
      binary: Wunused-value-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wunused-value"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunused-value-3_490:
  build:
    cflags: ' -Wunused-value -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wunused-value-3.c'
    sources:
      binary: Wunused-value-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wunused-value"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunused-var-1_491:
  build:
    cflags: ' -Wunused -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wunused-var-1.c'
    sources:
      binary: Wunused-var-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wunused"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(set but not used))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunused-var-2_492:
  build:
    cflags: ' -Wunused -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wunused-var-2.c'
    sources:
      binary: Wunused-var-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wunused"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunused-var-3_493:
  build:
    cflags: ' -Wunused -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wunused-var-3.c'
    sources:
      binary: Wunused-var-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wunused"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wvla-1_494:
  build:
    cflags: ' -std=c89 -Wvla -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wvla-1.c'
    sources:
      binary: Wvla-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -Wvla"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids variable length array 'array'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wvla-2_495:
  build:
    cflags: ' -std=c99 -Wvla -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wvla-2.c'
    sources:
      binary: Wvla-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -Wvla"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids variable length array 'array'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wvla-3_496:
  build:
    cflags: ' -pedantic-errors -std=c89 -Wvla -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wvla-3.c'
    sources:
      binary: Wvla-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors -std=c89 -Wvla"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 forbids variable.* array 'array'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wvla-4_497:
  build:
    cflags: ' -pedantic-errors -std=c99 -Wvla -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wvla-4.c'
    sources:
      binary: Wvla-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors -std=c99 -Wvla"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids variable length array 'array'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wvla-5_498:
  build:
    cflags: ' -pedantic-errors -std=c89 -Wno-vla -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wvla-5.c'
    sources:
      binary: Wvla-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors -std=c89 -Wno-vla"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wvla-6_499:
  build:
    cflags: ' -std=c89 -Wvla -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wvla-6.c'
    sources:
      binary: Wvla-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -Wvla"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids variable length array))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wvla-7_500:
  build:
    cflags: ' -pedantic-errors -std=c89 -Wvla -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wvla-7.c'
    sources:
      binary: Wvla-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors -std=c89 -Wvla"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 forbids variable))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wvla-larger-than-1_501:
  build:
    cflags: ' -Wvla-larger-than=100 -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wvla-larger-than-1.c'
    sources:
      binary: Wvla-larger-than-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wvla-larger-than=100 -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(unbounded use))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wvla-larger-than-2_502:
  build:
    cflags: ' -O2 -Wvla-larger-than=40 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wvla-larger-than-2.c'
    sources:
      binary: Wvla-larger-than-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wvla-larger-than=40"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(array may be too large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(array may be too large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*(variable-length array is too large))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wwrite-strings-1_503:
  build:
    cflags: ' -Wwrite-strings -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wwrite-strings-1.c'
    sources:
      binary: Wwrite-strings-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wwrite-strings"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_addr_builtin-1_504:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/addr_builtin-1.c'
    sources:
      binary: addr_builtin-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-10_506:
  build:
    cflags: ' -O2 -funswitch-loops -fdump-tree-unswitch-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-10.c'
    sources:
      binary: alias-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funswitch-loops -fdump-tree-unswitch-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-11_507:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-11.c'
    sources:
      binary: ./alias-11.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-12_508:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-12.c'
    sources:
      binary: alias-12.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(part of alias cycle" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-13_509:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-13.c'
    sources:
      binary: alias-13.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(part of alias cycle" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-14_510:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-14.c'
    sources:
      binary: alias-14.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-15_511:
  build:
    cflags: ' -ansi -pedantic-errors -O2 -fdump-ipa-cgraph -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-15.c'
    sources:
      binary: alias-15.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-1_505:
  build:
    cflags: ' -Wstrict-aliasing=2 -fstrict-aliasing -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-1.c'
    sources:
      binary: alias-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wstrict-aliasing=2 -fstrict-aliasing"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(type-punned pointer will" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(type-punning to incomplete" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-2_512:
  build:
    cflags: ' -Wstrict-aliasing=2 -fstrict-aliasing -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-2.c'
    sources:
      binary: alias-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wstrict-aliasing=2 -fstrict-aliasing"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(type-punned pointer will" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-3_513:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-3.c'
    sources:
      binary: alias-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aliased to))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-4_514:
  build:
    cflags: ' -O2 -funit-at-a-time -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-4.c'
    sources:
      binary: alias-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funit-at-a-time"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aliased to))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-5_515:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-5.c'
    sources:
      binary: alias-5.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-6_516:
  build:
    cflags: ' -O2 -funit-at-a-time'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-6.c'
    sources:
      binary: alias-6.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funit-at-a-time"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-7_517:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-7.c'
    sources:
      binary: ./alias-7.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-8_518:
  build:
    cflags: ' -Wstrict-aliasing=2 -fstrict-aliasing -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-8.c'
    sources:
      binary: alias-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wstrict-aliasing=2 -fstrict-aliasing"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(type-punned pointer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-9_519:
  build:
    cflags: ' -Wstrict-aliasing=2 -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-9.c'
    sources:
      binary: alias-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wstrict-aliasing=2 -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(strict-aliasing))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(strict-aliasing))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(strict-aliasing))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_align-1_520:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/align-1.c'
    sources:
      binary: ./align-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_align-3_521:
  build:
    cflags: -O2 -fdump-rtl-expand -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/align-3.c'
    sources:
      binary: align-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-expand"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alignof_522:
  build:
    cflags: ' -std=c11 -Wno-error -Wpedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alignof.c'
    sources:
      binary: alignof.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -Wno-error -Wpedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C does not allow ._Alignof \\(expression\\).))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_always_inline2_524:
  build:
    cflags: ' -O2 -fgnu89-inline -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/always_inline2.c'
    sources:
      binary: always_inline2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fgnu89-inline"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(body not available))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_always_inline3_525:
  build:
    cflags: ' -O2 -fgnu89-inline -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/always_inline3.c'
    sources:
      binary: always_inline3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fgnu89-inline"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(recursive inlining))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_always_inline_523:
  build:
    cflags: ' -O2 -fgnu89-inline -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/always_inline.c'
    sources:
      binary: always_inline.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fgnu89-inline"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable argument lists))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_and-1_526:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/and-1.c'
    sources:
      binary: and-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-10_528:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-10.c'
    sources:
      binary: ./anon-struct-10.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-11_529:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-11.c'
    sources:
      binary: anon-struct-11.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no member))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-12_530:
  build:
    cflags: ' -fplan9-extensions'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-12.c'
    sources:
      binary: ./anon-struct-12.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fplan9-extensions"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-13_531:
  build:
    cflags: ' -fplan9-extensions -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-13.c'
    sources:
      binary: anon-struct-13.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fplan9-extensions"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no member))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-14_532:
  build:
    cflags: ' -fplan9-extensions -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-14.c'
    sources:
      binary: anon-struct-14.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fplan9-extensions"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-15_533:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-15.c'
    sources:
      binary: anon-struct-15.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate member))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-1_527:
  build:
    cflags: ' -std=iso9899:1990 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-1.c'
    sources:
      binary: anon-struct-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(unnamed structs))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(unnamed structs))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-2_534:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-2.c'
    sources:
      binary: anon-struct-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(does not declare anything))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-3_535:
  build:
    cflags: ' -std=gnu89 -fms-extensions -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-3.c'
    sources:
      binary: anon-struct-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -fms-extensions"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-4_536:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-4.c'
    sources:
      binary: anon-struct-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-5_537:
  build:
    cflags: ' -std=c99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-5.c'
    sources:
      binary: anon-struct-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration does not declare anything" "int;))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(struct has no members" "no members))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-6_538:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-6.c'
    sources:
      binary: anon-struct-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type qualifier in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(empty declaration" "empty 2))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-7_539:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-7.c'
    sources:
      binary: anon-struct-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids member declarations with no members))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-8_540:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-8.c'
    sources:
      binary: anon-struct-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids member declarations with no members))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-9_541:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-9.c'
    sources:
      binary: anon-struct-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate member))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-10_543:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-10.c'
    sources:
      binary: array-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(5:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(17:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(19:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(at file scope|outside of any function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(5:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(17:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(19:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(37:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(5:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(17:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(19:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(20:at file scope))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(9:division by zero" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(12:division by zero" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(14:division by zero" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(20:division by zero" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(23:division by zero" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-11_544:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-11.c'
    sources:
      binary: array-11.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested context" "nested))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements" "excess))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-12_545:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-12.c'
    sources:
      binary: array-12.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete type" "iso))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-13_546:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-13.c'
    sources:
      binary: ./array-13.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*((excess elements)|(near initialization)" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-14_547:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-14.c'
    sources:
      binary: array-14.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((non-static)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((non-static)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((non-static)|(initialization)))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-15_548:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-15.c'
    sources:
      binary: array-15.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-1_542:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-1.c'
    sources:
      binary: array-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-2_549:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-2.c'
    sources:
      binary: array-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested context" "nested))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements" "excess))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-3_550:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-3.c'
    sources:
      binary: array-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete type" "iso))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-4_551:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-4.c'
    sources:
      binary: ./array-4.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*((excess elements)|(near initialization)" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-5_552:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-5.c'
    sources:
      binary: array-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-6_553:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-6.c'
    sources:
      binary: array-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((non-static)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((non-static)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((non-static)|(initialization)))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-7_554:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-7.c'
    sources:
      binary: array-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-8_555:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-8.c'
    sources:
      binary: array-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(subscripted value is neither array nor pointer nor vector))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array subscript is not an integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array subscript is not an integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(subscripted value is pointer to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(subscripted value is pointer to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type 'struct si'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(dereferencing pointer to incomplete type" "incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type 'struct si'))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing 'void \\*' pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing 'void \\*' pointer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-9_556:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-9.c'
    sources:
      binary: array-9.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array of voids))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-const-1_557:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-const-1.c'
    sources:
      binary: array-const-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-const-2_558:
  build:
    cflags: ' -std=gnu99 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-const-2.c'
    sources:
      binary: array-const-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(array index in initializer is not an integer constant expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-const-3_559:
  build:
    cflags: ' -std=gnu99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-const-3.c'
    sources:
      binary: array-const-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array index in initializer is not an integer constant expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-init-1_560:
  build:
    cflags: -O2 -mtune=i686 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-init-1.c'
    sources:
      binary: array-init-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -mtune=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-init-2_561:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-init-2.c'
    sources:
      binary: ./array-init-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-quals-1_562:
  build:
    cflags: -Wno-discarded-array-qualifiers -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-quals-1.c'
    sources:
      binary: array-quals-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wno-discarded-array-qualifiers"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-quals-2_563:
  build:
    cflags: ' -pedantic -Wno-discarded-array-qualifiers -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-quals-2.c'
    sources:
      binary: array-quals-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -Wno-discarded-array-qualifiers"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-10_565:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-10.c'
    sources:
      binary: asm-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not directly addressable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not directly addressable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not directly addressable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not directly addressable))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-1_564:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-1.c'
    sources:
      binary: asm-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "casts make rvalues))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-2_566:
  build:
    cflags: -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-2.c'
    sources:
      binary: asm-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-3_567:
  build:
    cflags: -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-3.c'
    sources:
      binary: asm-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-4_568:
  build:
    cflags: -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-4.c'
    sources:
      binary: asm-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-6_569:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-6.c'
    sources:
      binary: asm-6.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate asm operand))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undefined named operand))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-7_570:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-7.c'
    sources:
      binary: asm-7.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-8_571:
  build:
    cflags: ' -O -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-8.c'
    sources:
      binary: asm-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-9_572:
  build:
    cflags: ' -O -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-9.c'
    sources:
      binary: asm-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-a_573:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-a.c'
    sources:
      binary: asm-a.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-b_574:
  build:
    cflags: ' -O1'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-b.c'
    sources:
      binary: ./asm-b.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-fs-1_575:
  build:
    cflags: -w -ffunction-sections -fdata-sections -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-fs-1.c'
    sources:
      binary: asm-fs-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w -ffunction-sections -fdata-sections"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-names_576:
  build:
    cflags: -fleading-underscore -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-names.c'
    sources:
      binary: asm-names.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fleading-underscore"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-pr24146_577:
  build:
    cflags: -ansi -pedantic-errors -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-pr24146.c'
    sources:
      binary: asm-pr24146.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-qual-1_578:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-qual-1.c'
    sources:
      binary: asm-qual-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(const qualifier ignored on asm))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(restrict qualifier ignored on asm))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-wide-1_579:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-wide-1.c'
    sources:
      binary: asm-wide-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(14:wide string literal in 'asm'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(6:wide string literal in 'asm'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:wide string literal in 'asm'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:wide string literal in 'asm'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:wide string literal in 'asm'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:wide string literal in 'asm'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:wide string literal in 'asm'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:wide string literal in 'asm'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:wide string literal in 'asm'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(output" "output))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(output" "output))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(output" "output))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asr_div1_580:
  build:
    cflags: -O2 -fdump-rtl-combine-all -ffat-lto-objects
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asr_div1.c'
    sources:
      binary: ./asr_div1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-combine-all"'
      - '"-O2 -fdump-rtl-combine-all -mtune=cortex-a53" { target aarch64*-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_assign-warn-1_581:
  build:
    cflags: ' -pedantic -ftrack-macro-expansion=0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/assign-warn-1.c'
    sources:
      binary: assign-warn-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -ftrack-macro-expansion=0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible type for argument 1 of 'striaF'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible type for argument 1 of 'stribFp.x'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning to type 'struct s' from type 'int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when returning type 'int' but 'struct s' was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible type for argument 1 of 'istraF'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible type for argument 1 of 'istrbFp.x'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning to type 'int' from type 'struct s'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when initializing type 'int' using type 'struct s'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when returning type 'struct s' but 'int' was expected))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fqaF' makes '__attribute__..noreturn..' qualified function pointer from unqualified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fqbFp.x' makes '__attribute__..noreturn..' qualified function pointer from unqualified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment makes '__attribute__..noreturn..' qualified function pointer from unqualified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization makes '__attribute__..noreturn..' qualified function pointer from unqualified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(return makes '__attribute__..noreturn..' qualified function pointer from unqualified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'qaF' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'qbFp.x' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(return discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids passing argument 1 of 'fdaF' between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids passing argument 1 of 'fdbFp.x' between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids assignment between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids initialization between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids return between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids passing argument 1 of 'dfaF' between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids passing argument 1 of 'dfbFp.x' between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids assignment between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids initialization between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids return between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'suaF' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'subFp.x' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in initialization differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in return differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'usaF' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'usbFp.x' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in initialization differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in return differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'cuaF' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'cubFp.x' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in initialization differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in return differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'ucaF' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'ucbFp.x' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in initialization differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in return differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'csaF' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'csbFp.x' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in initialization differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in return differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'scaF' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'scbFp.x' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in initialization differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in return differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'ciaF' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'cibFp.x' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(return from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'icaF' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'icbFp.x' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(return from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'ciiaF' makes pointer from integer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'ciibFp.x' makes pointer from integer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment makes pointer from integer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization makes pointer from integer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: warning:[^
        ]*(return makes pointer from integer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'iicaF' makes integer from pointer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'iicbFp.x' makes integer from pointer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment makes integer from pointer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization makes integer from pointer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: warning:[^
        ]*(return makes integer from pointer without a cast))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_assign-warn-2_582:
  build:
    cflags: ' -pedantic-errors -ftrack-macro-expansion=0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/assign-warn-2.c'
    sources:
      binary: assign-warn-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors -ftrack-macro-expansion=0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'fqaF' makes '__attribute__..noreturn..' qualified function pointer from unqualified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'fqbFp.x' makes '__attribute__..noreturn..' qualified function pointer from unqualified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment makes '__attribute__..noreturn..' qualified function pointer from unqualified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization makes '__attribute__..noreturn..' qualified function pointer from unqualified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(return makes '__attribute__..noreturn..' qualified function pointer from unqualified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'qaF' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'qbFp.x' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(return discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids passing argument 1 of 'fdaF' between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids passing argument 1 of 'fdbFp.x' between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids assignment between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids initialization between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids return between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids passing argument 1 of 'dfaF' between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids passing argument 1 of 'dfbFp.x' between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids assignment between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids initialization between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids return between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in passing argument 1 of 'suaF' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in passing argument 1 of 'subFp.x' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in initialization differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in return differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in passing argument 1 of 'usaF' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in passing argument 1 of 'usbFp.x' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in initialization differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in return differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in passing argument 1 of 'cuaF' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in passing argument 1 of 'cubFp.x' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in initialization differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in return differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in passing argument 1 of 'ucaF' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in passing argument 1 of 'ucbFp.x' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in initialization differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in return differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in passing argument 1 of 'csaF' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in passing argument 1 of 'csbFp.x' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in initialization differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in return differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in passing argument 1 of 'scaF' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in passing argument 1 of 'scbFp.x' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in initialization differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in return differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'ciaF' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'cibFp.x' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(return from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'icaF' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'icbFp.x' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(return from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'ciiaF' makes pointer from integer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'ciibFp.x' makes pointer from integer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment makes pointer from integer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization makes pointer from integer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(return makes pointer from integer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'iicaF' makes integer from pointer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'iicbFp.x' makes integer from pointer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment makes integer from pointer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization makes integer from pointer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(return makes integer from pointer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible type for argument 1 of 'striaF'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible type for argument 1 of 'stribFp.x'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning to type 'struct s' from type 'int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when returning type 'int' but 'struct s' was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible type for argument 1 of 'istraF'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible type for argument 1 of 'istrbFp.x'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning to type 'int' from type 'struct s'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when initializing type 'int' using type 'struct s'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when returning type 'struct s' but 'int' was expected))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_assign-warn-3_583:
  build:
    cflags: ' -O3 -std=c99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/assign-warn-3.c'
    sources:
      binary: assign-warn-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -std=c99 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-compare-exchange-1_584:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-compare-exchange-1.c'
    sources:
      binary: ./atomic-compare-exchange-1.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-compare-exchange-2_585:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-compare-exchange-2.c'
    sources:
      binary: ./atomic-compare-exchange-2.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-compare-exchange-3_586:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-compare-exchange-3.c'
    sources:
      binary: ./atomic-compare-exchange-3.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-exchange-1_587:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-exchange-1.c'
    sources:
      binary: ./atomic-exchange-1.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-exchange-2_588:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-exchange-2.c'
    sources:
      binary: ./atomic-exchange-2.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-exchange-3_589:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-exchange-3.c'
    sources:
      binary: ./atomic-exchange-3.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-fence_590:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-fence.c'
    sources:
      binary: ./atomic-fence.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-fetch-bool_591:
  build:
    cflags: ' -pedantic-errors -std=c11 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-fetch-bool.c'
    sources:
      binary: atomic-fetch-bool.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors -std=c11"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__atomic_fetch_add.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__atomic_fetch_sub.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__atomic_fetch_and.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__atomic_fetch_xor.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__atomic_fetch_or.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__atomic_fetch_nand.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__atomic_add_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__atomic_sub_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__atomic_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__atomic_xor_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__atomic_or_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__atomic_nand_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__atomic_fetch_add.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__atomic_fetch_sub.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__atomic_fetch_and.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__atomic_fetch_xor.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__atomic_fetch_or.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__atomic_fetch_nand.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__atomic_add_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__atomic_sub_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__atomic_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__atomic_xor_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__atomic_or_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__atomic_nand_fetch.))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-flag_592:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-flag.c'
    sources:
      binary: ./atomic-flag.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-generic-aux_593:
  build:
    cflags: ' -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-generic-aux.c'
    sources:
      binary: atomic-generic-aux.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-generic_594:
  build:
    cflags: ' -w'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-generic.c'
    sources:
      binary: ./atomic-generic.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-invalid-2_595:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-invalid-2.c'
    sources:
      binary: atomic-invalid-2.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid failure memory))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid failure memory))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(failure memory model cannot be stronger))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid failure memory))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid failure memory))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(failure memory model cannot be stronger))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-invalid_596:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-invalid.c'
    sources:
      binary: atomic-invalid.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-constant argument))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(failure memory model cannot be stronger))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid failure memory))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid failure memory))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-load-1_597:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-load-1.c'
    sources:
      binary: ./atomic-load-1.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-load-2_598:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-load-2.c'
    sources:
      binary: ./atomic-load-2.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-load-3_599:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-load-3.c'
    sources:
      binary: ./atomic-load-3.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-lockfree-aux_600:
  build:
    cflags: ' -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-lockfree-aux.c'
    sources:
      binary: atomic-lockfree-aux.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-lockfree_601:
  build:
    cflags: ' -w'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-lockfree.c'
    sources:
      binary: ./atomic-lockfree.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-noinline-aux_602:
  build:
    cflags: ' -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-noinline-aux.c'
    sources:
      binary: atomic-noinline-aux.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-noinline_603:
  build:
    cflags: ' -w -fno-inline-atomics'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-noinline.c'
    sources:
      binary: ./atomic-noinline.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w -fno-inline-atomics"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-op-1_604:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-op-1.c'
    sources:
      binary: ./atomic-op-1.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-op-2_605:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-op-2.c'
    sources:
      binary: ./atomic-op-2.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-op-3_606:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-op-3.c'
    sources:
      binary: ./atomic-op-3.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-op-6_607:
  build:
    cflags: ' -Wall -Wextra -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-op-6.c'
    sources:
      binary: atomic-op-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wextra"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-op-optimize_608:
  build:
    cflags: -ansi -pedantic-errors -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-op-optimize.c'
    sources:
      binary: atomic-op-optimize.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-param_609:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-param.c'
    sources:
      binary: atomic-param.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-pr51256_610:
  build:
    cflags: ' -ansi -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-pr51256.c'
    sources:
      binary: atomic-pr51256.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a non-void pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a pointer to a constant size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a pointer to a nonzero size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incorrect number of arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(size mismatch in argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-integer memory model argument))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model argument))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-store-1_611:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-store-1.c'
    sources:
      binary: ./atomic-store-1.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-store-2_612:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-store-2.c'
    sources:
      binary: ./atomic-store-2.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-store-3_613:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-store-3.c'
    sources:
      binary: ./atomic-store-3.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alias-1_614:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alias-1.c'
    sources:
      binary: attr-alias-1.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alias-2_615:
  build:
    cflags: ' -funit-at-a-time'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alias-2.c'
    sources:
      binary: attr-alias-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-funit-at-a-time"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alias-3_616:
  build:
    cflags: ' -O2 -fno-common'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alias-3.c'
    sources:
      binary: attr-alias-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-common"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alias-4_617:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alias-4.c'
    sources:
      binary: attr-alias-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alias-5_618:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alias-5.c'
    sources:
      binary: attr-alias-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undefined symbol '\\\\241'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undefined symbol '\\\\U000000e9'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undefined symbol '\\\\U0000ffff'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undefined symbol '\\\\U000fffff'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undefined symbol '\\\\U00ffffff'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undefined symbol '\\\\U0fffffff'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_align-1_619:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_align-1.c'
    sources:
      binary: attr-alloc_align-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_align-2_620:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_align-2.c'
    sources:
      binary: attr-alloc_align-2.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong number of arguments specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong number of arguments specified))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(outside range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(outside range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(outside range))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_align-3_621:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_align-3.c'
    sources:
      binary: attr-alloc_align-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_size-10_622:
  build:
    cflags: ' -O2 -Walloc-size-larger-than=12 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_size-10.c'
    sources:
      binary: attr-alloc_size-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Walloc-size-larger-than=12"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_size-11_623:
  build:
    cflags: ' -O2 -Walloc-size-larger-than=12 -ftrack-macro-expansion=0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_size-11.c'
    sources:
      binary: attr-alloc_size-11.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Walloc-size-larger-than=12 -ftrack-macro-expansion=0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12" "missing range info for signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12" "missing range info for short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[\[0-9\]+, \[0-9\]+\\\] exceeds maximum object size 12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, -1\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_size-2_624:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_size-2.c'
    sources:
      binary: attr-alloc_size-2.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(outside range))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_size-3_625:
  build:
    cflags: ' -O2 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_size-3.c'
    sources:
      binary: attr-alloc_size-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-\[0-9\]+. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-1. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .-\[0-9\]+. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:182:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-\[0-9\]+. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .-1. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-1. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, -\[0-9\]+\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:197:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-1, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:207:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, -\[0-9\]+\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 range \\\[-\[0-9\]+, -\[0-9\]+\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:209:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, -\[0-9\]+\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:210:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 range \\\[-\[0-9\]+, -\[0-9\]+\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:211:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, -\[0-9\]+\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:212:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .-\[0-9\]+. is negative" "argument 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 range \\\[-\[0-9\]+, -\[0-9\]+\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:214:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-\[0-9\]+. is negative" "argument 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:216:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 range \\\[-\[0-9\]+, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:218:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 range \\\[-\[0-9\]+, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:220:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:221:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 range \\\[-\[0-9\]+, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:265:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-\[0-9\]+. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:266:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-1. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:280:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, -\[0-9\]+\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:281:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:282:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-1, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:323:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-\[0-9\]+. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:324:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-1. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:338:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, -\[0-9\]+\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:339:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:340:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-1, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:381:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-\[0-9\]+l*. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:382:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-1l*. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:396:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+l*, -\[0-9\]+l*\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:397:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+l*, 0l*\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:398:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-1l*, 0l*\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:413:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .\[0-9\]+. exceeds maximum object size \[0-9\]+))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:414:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .\[0-9\]+. exceeds maximum object size \[0-9\]+))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:416:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .\[0-9\]+. exceeds maximum object size \[0-9\]+))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:417:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .\[0-9\]+. exceeds maximum object size \[0-9\]+))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:418:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .\[0-9\]+. exceeds maximum object size \[0-9\]+))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:419:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .\[0-9\]+. exceeds maximum object size \[0-9\]+))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:420:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .\[0-9\]+. exceeds maximum object size \[0-9\]+))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:421:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .\[0-9\]+. exceeds maximum object size \[0-9\]+" "argument 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:423:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .\[0-9\]+. exceeds maximum object size \[0-9\]+))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:424:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .\[0-9\]+. exceeds maximum object size \[0-9\]+))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:426:)[^
        ]*([0-9]+: warning:[^
        ]*(product .\[0-9\]+ \\* \[0-9\]+. of arguments 1 and 2 exceeds maximum object size \[0-9\]+))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:427:)[^
        ]*([0-9]+: warning:[^
        ]*(product .\[0-9\]+ \\* \[0-9\]+. of arguments 1 and 2 exceeds .SIZE_MAX.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:448:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[\[0-9\]+, \[0-9\]+\\\] exceeds maximum object size ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:459:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .\[0-9\]+. exceeds maximum object size ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:463:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[\[0-9\]+, \[0-9\]+\\\] exceeds maximum object size ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:464:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 range \\\[\[0-9\]+, \[0-9\]+\\\] exceeds maximum object size ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:465:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[\[0-9\]+, \[0-9\]+\\\] exceeds maximum object size ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:466:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 range \\\[\[0-9\]+, \[0-9\]+\\\] exceeds maximum object size " "argument 2))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_size-4_626:
  build:
    cflags: ' -O2 -Wall -Walloc-size-larger-than=1234 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_size-4.c'
    sources:
      binary: attr-alloc_size-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall -Walloc-size-larger-than=1234"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .1235u?. exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .\[0-9\]+u?. exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .\[0-9\]+u?. exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[\[0-9\]+u?, \[0-9\]+u?\\\] exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-\[0-9\]+. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-1. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .\[0-9\]+u?. exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-2, -1\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[1235, 2345\\\] exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:133:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[\[0-9\]+, \[0-9\]+\\\] exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[1235, \[0-9\]+\\\] exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[1236, \[0-9\]+\\\] exceeds maximum object size 1234" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]*, -1\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:150:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]*, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: warning:[^
        ]*(product .2 \\* 1234. of arguments 1 and 2 exceeds maximum object size \[0-9\]+))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:165:)[^
        ]*([0-9]+: warning:[^
        ]*(product .1234 \\* 1234. of arguments 1 and 2 exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .1235. exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .1235. exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .\[0-9\]+. exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .\[0-9\]+. exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:187:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[\[0-9\]+, \[0-9\]+\\\] exceeds maximum object size ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .1235. exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[1235, 1236\\\] exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[\[0-9\]+, \[0-9\]+\\\] exceeds maximum object size ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:201:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 range \\\[\[0-9\]+, \[0-9\]+\\\] exceeds maximum object size " "argument 2))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_size-5_627:
  build:
    cflags: ' -O2 -Wall -Walloc-zero -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_size-5.c'
    sources:
      binary: attr-alloc_size-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall -Walloc-zero"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:134:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:135:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:136:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:150:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:152:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:153:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:158:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:165:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:179:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:180:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:182:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:187:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:194:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:195:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:197:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:202:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:203:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_size-6_628:
  build:
    cflags: ' -O0 -Wall -Walloc-size-larger-than=12345 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_size-6.c'
    sources:
      binary: attr-alloc_size-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0 -Wall -Walloc-size-larger-than=12345"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .12346\[lu\]*. exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .12347\[lu\]*. exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(product .6172\[lu\]* \\* 3\[lu\]*. of arguments 1 and 2 exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(product .4\[lu\]* \\* 4115\[lu\]*. of arguments 1 and 2 exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .12348\[lu\]*. exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .12349\[lu\]*. exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .12346\[lu\]*. exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .12347\[lu\]*. exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(product .6172\[lu\]* \\* 3\[lu\]*. of arguments 1 and 2 exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(product .4\[lu\]* \\* 4115\[lu\]*. of arguments 1 and 2 exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .12348\[lu\]*. exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .12349\[lu\]*. exceeds maximum object size 12345))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_size-7_629:
  build:
    cflags: ' -O2 -Wall -Walloc-size-larger-than=12345 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_size-7.c'
    sources:
      binary: attr-alloc_size-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall -Walloc-size-larger-than=12345"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .12346\[lu\]*. exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .12347\[lu\]*. exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(product .6172\[lu\]* \\* 3\[lu\]*. of arguments 1 and 2 exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(product .4\[lu\]* \\* 4115\[lu\]*. of arguments 1 and 2 exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .12348\[lu\]*. exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .12349\[lu\]*. exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 range \\\[12346\[lu\]*, \[0-9\]+\[lu\]*\\\] exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[12347\[lu\]*, \[0-9\]+\[lu\]*\\\] exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(product .6172\[lu\]* \\* 3\[lu\]*. of arguments 1 and 2 exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(product .4\[lu\]* \\* 4115\[lu\]*. of arguments 1 and 2 exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[12348\[lu\]*, 24692\[lu\]*\\\] exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 range \\\[12349\[lu\]*, 24693\[lu\]*\\\] exceeds maximum object size 12345))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_size-8_630:
  build:
    cflags: ' -O2 -Walloc-size-larger-than=123 -Walloca-larger-than=234 -Wvla-larger-than=345 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_size-8.c'
    sources:
      binary: attr-alloc_size-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Walloc-size-larger-than=123 -Walloca-larger-than=234 -Wvla-larger-than=345"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(argument to .alloca. is too large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(argument to variable-length array is too large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .124\[lu\]*. exceeds maximum object size 123))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_size-9_631:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_size-9.c'
    sources:
      binary: attr-alloc_size-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_size_632:
  build:
    cflags: ' -O2 -Wall -ftrack-macro-expansion=0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_size.c'
    sources:
      binary: attr-alloc_size.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall -ftrack-macro-expansion=0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(parameter outside range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(parameter outside range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(writing" "strcpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(writing" "strcpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(writing" "strcpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(writing" "strcpy))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alwaysinline_633:
  build:
    cflags: -O0 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alwaysinline.c'
    sources:
      binary: attr-alwaysinline.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-assume_aligned-1_634:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-assume_aligned-1.c'
    sources:
      binary: attr-assume_aligned-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-assume_aligned-2_635:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-assume_aligned-2.c'
    sources:
      binary: attr-assume_aligned-2.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong number of arguments specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong number of arguments specified))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(integer constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-assume_aligned-3_636:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-assume_aligned-3.c'
    sources:
      binary: attr-assume_aligned-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-error-1_637:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-error-1.c'
    sources:
      binary: attr-error-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array of voids))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array of voids))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array of voids))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-externally-visible-1_638:
  build:
    cflags: -O3 -fwhole-program -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-externally-visible-1.c'
    sources:
      binary: attr-externally-visible-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fwhole-program"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-externally-visible-2_639:
  build:
    cflags: ' -O -fwhole-program -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-externally-visible-2.c'
    sources:
      binary: attr-externally-visible-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fwhole-program"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(have effect only on public))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(have effect only on public))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(have effect only on public))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(have effect only on public))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(have effect only on public))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(have effect only on public))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(have effect only on public))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(does not apply to types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-hotcold-1_640:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-hotcold-1.c'
    sources:
      binary: attr-hotcold-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-ifunc-1_641:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-ifunc-1.c'
    sources:
      binary: ./attr-ifunc-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-ifunc-2_642:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-ifunc-2.c'
    sources:
      binary: attr-ifunc-2.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(weak .* cannot be defined" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(indirect function .* cannot be declared weak" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-ifunc-3_643:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-ifunc-3.c'
    sources:
      binary: ./attr-ifunc-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-ifunc-4_644:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-ifunc-4.c'
    sources:
      binary: ./attr-ifunc-4.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-ifunc-5_645:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-ifunc-5.c'
    sources:
      binary: ./attr-ifunc-5.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-invalid_646:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-invalid.c'
    sources:
      binary: attr-invalid.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(does not apply to types" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(does not apply to types" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute |directive ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute |directive ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute |directive ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute |directive ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute |directive ignored" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-may-alias-1_647:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-may-alias-1.c'
    sources:
      binary: attr-may-alias-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-mode-1_648:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-mode-1.c'
    sources:
      binary: attr-mode-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(inappropriate type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-mode-2_649:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-mode-2.c'
    sources:
      binary: attr-mode-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-nest_650:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-nest.c'
    sources:
      binary: attr-nest.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-noinline_651:
  build:
    cflags: -O2 -finline-functions -fno-ipa-icf -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-noinline.c'
    sources:
      binary: attr-noinline.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -finline-functions -fno-ipa-icf"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(inline function \[^\n\]* given attribute noinline" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(inline function \[^\n\]* given attribute noinline" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*((inline function \[^\n\]* given attribute noinline|declared inline after its definition)" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(follows declaration with attribute noinline" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(follows inline declaration" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(follows inline declaration" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(follows inline declaration" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(follows inline declaration" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(follows declaration with attribute noinline" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-weak-1_652:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-weak-1.c'
    sources:
      binary: attr-weak-1.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(inline.*weak))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-weakref-1a_653:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-weakref-1a.c'
    sources:
      binary: attr-weakref-1a.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-weakref-1b_654:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-weakref-1b.c'
    sources:
      binary: attr-weakref-1b.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_auto-type-1_655:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/auto-type-1.c'
    sources:
      binary: ./auto-type-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_auto-type-2_656:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/auto-type-2.c'
    sources:
      binary: auto-type-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(plain identifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(bit-field initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialized data declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialized data declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(single declarator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(__auto_type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(__auto_type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(__auto_type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(__auto_type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(__auto_type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(__auto_type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(__auto_type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(__auto_type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(__auto_type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(__auto_type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bad-binary-ops_657:
  build:
    cflags: ' -fdiagnostics-show-caret -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bad-binary-ops.c'
    sources:
      binary: bad-binary-ops.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary /))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary \+))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary \+))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bad-dereference_658:
  build:
    cflags: ' -fdiagnostics-show-caret -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bad-dereference.c'
    sources:
      binary: bad-dereference.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid type argument of unary ... .have .int..))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid type argument of unary ... .have .struct foo..))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bconstp-1_659:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bconstp-1.c'
    sources:
      binary: bconstp-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bconstp-2_660:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bconstp-2.c'
    sources:
      binary: bconstp-2.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bconstp-3_661:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bconstp-3.c'
    sources:
      binary: bconstp-3.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bconstp-4_662:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bconstp-4.c'
    sources:
      binary: bconstp-4.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bf-ms-layout-3_663:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bf-ms-layout-3.c'
    sources:
      binary: ./bf-ms-layout-3.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binary-constants-1_664:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binary-constants-1.c'
    sources:
      binary: binary-constants-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binary-constants-2_665:
  build:
    cflags: ' -std=iso9899:1999 -pedantic -ftrack-macro-expansion=0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binary-constants-2.c'
    sources:
      binary: binary-constants-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic -ftrack-macro-expansion=0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(binary constants are a GCC extension))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(binary constants are a GCC extension))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binary-constants-3_666:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -ftrack-macro-expansion=0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binary-constants-3.c'
    sources:
      binary: binary-constants-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors -ftrack-macro-expansion=0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(binary constants are a GCC extension))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(binary constants are a GCC extension))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binary-constants-4_667:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binary-constants-4.c'
    sources:
      binary: binary-constants-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix \"p1\" on integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix \"b3011\" on integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid digit \"3\" in binary constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notand1_668:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notand1.c'
    sources:
      binary: binop-notand1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notand1a_669:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notand1a.c'
    sources:
      binary: binop-notand1a.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notand2_670:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notand2.c'
    sources:
      binary: binop-notand2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notand2a_671:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notand2a.c'
    sources:
      binary: binop-notand2a.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notand3_672:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notand3.c'
    sources:
      binary: binop-notand3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notand3a_673:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notand3a.c'
    sources:
      binary: binop-notand3a.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notand4_674:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notand4.c'
    sources:
      binary: binop-notand4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notand4a_675:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notand4a.c'
    sources:
      binary: binop-notand4a.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notand5_676:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notand5.c'
    sources:
      binary: binop-notand5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notand5a_677:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notand5a.c'
    sources:
      binary: binop-notand5a.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notand6_678:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notand6.c'
    sources:
      binary: binop-notand6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notand6a_679:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notand6a.c'
    sources:
      binary: binop-notand6a.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notor1_680:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notor1.c'
    sources:
      binary: binop-notor1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notor2_681:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notor2.c'
    sources:
      binary: binop-notor2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notxor1_682:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notxor1.c'
    sources:
      binary: binop-notxor1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notxor2_683:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notxor2.c'
    sources:
      binary: binop-notxor2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-xor1_684:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-xor1.c'
    sources:
      binary: binop-xor1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-xor2_685:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-xor2.c'
    sources:
      binary: binop-xor2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-xor3_686:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-xor3.c'
    sources:
      binary: binop-xor3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-xor4_687:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-xor4.c'
    sources:
      binary: binop-xor4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-xor5_688:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-xor5.c'
    sources:
      binary: binop-xor5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-10_690:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-10.c'
    sources:
      binary: bitfld-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('sizeof' applied to a bit-field))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-11_691:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-11.c'
    sources:
      binary: bitfld-11.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('__alignof' applied to a bit-field))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-12_692:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-12.c'
    sources:
      binary: bitfld-12.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(attempt to take address of bit-field structure member 'a'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot take address of bit-field 'a'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot take address of bit-field 'a'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-13_693:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-13.c'
    sources:
      binary: bitfld-13.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(bit-field 's' has invalid type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(bit-field 'p' has invalid type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(bit-field 'f' has invalid type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-14_694:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-14.c'
    sources:
      binary: bitfld-14.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(bit-field 'a' width not an integer constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-15_695:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-15.c'
    sources:
      binary: bitfld-15.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
      - '"-mno-ms-bitfields -Wno-packed-bitfield-compat" { target { i?86-*-mingw* x86_64-*-mingw* } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-16_696:
  build:
    cflags: ' -Wno-packed-bitfield-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-16.c'
    sources:
      binary: bitfld-16.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wno-packed-bitfield-compat"'
      - '"-Wno-packed-bitfield-compat -mno-ms-bitfields" { target { i?86-*-mingw* x86_64-*-mingw* } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-17_697:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-17.c'
    sources:
      binary: bitfld-17.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
      - '"-mno-ms-bitfields -Wno-packed-bitfield-compat" { target { i?86-*-mingw* x86_64-*-mingw* } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-18_698:
  build:
    cflags: ' -Wno-packed-bitfield-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-18.c'
    sources:
      binary: bitfld-18.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wno-packed-bitfield-compat"'
      - '"-Wno-packed-bitfield-compat -mno-ms-bitfields" { target { i?86-*-mingw* x86_64-*-mingw* } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-19_699:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-19.c'
    sources:
      binary: bitfld-19.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-1_689:
  build:
    cflags: ' -pedantic -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-1.c'
    sources:
      binary: bitfld-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(negative width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(zero width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(exceeds its type))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension|ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(narrower))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension|ISO C" "extension))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension|ISO C))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-20_701:
  build:
    cflags: ' -O2 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-20.c'
    sources:
      binary: bitfld-20.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(not an integer constant expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-21_702:
  build:
    cflags: ' -O2 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-21.c'
    sources:
      binary: bitfld-21.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not an integer constant expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-22_703:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-22.c'
    sources:
      binary: bitfld-22.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(13:cannot take address of bit-field 'x'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:cannot take address of bit-field 'x'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:cannot take address of bit-field 'x'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-2_700:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-2.c'
    sources:
      binary: bitfld-2.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(truncated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(truncated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-3_704:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-3.c'
    sources:
      binary: ./bitfld-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-4_705:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-4.c'
    sources:
      binary: ./bitfld-4.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-5_706:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-5.c'
    sources:
      binary: bitfld-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-6_707:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-6.c'
    sources:
      binary: bitfld-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-7_708:
  build:
    cflags: ' -fshow-column -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-7.c'
    sources:
      binary: bitfld-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fshow-column"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(9:applied to a bit-field" "typeof))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-8_709:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-8.c'
    sources:
      binary: bitfld-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(width" "bit-field too wide))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-9_710:
  build:
    cflags: ' -funsigned-bitfields -fsigned-char -std=gnu89'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-9.c'
    sources:
      binary: ./bitfld-9.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-funsigned-bitfields -fsigned-char -std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute directive ignored))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_boolcomplex-1_711:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/boolcomplex-1.c'
    sources:
      binary: boolcomplex-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as decrement operand))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bss_712:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bss.c'
    sources:
      binary: bss.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "zero init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "zero init))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-alloc-size_713:
  build:
    cflags: ' -ansi -pedantic-errors -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-alloc-size.c'
    sources:
      binary: builtin-alloc-size.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-apply1_714:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-apply1.c'
    sources:
      binary: builtin-apply1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-apply2_715:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-apply2.c'
    sources:
      binary: ./builtin-apply2.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-apply3_716:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-apply3.c'
    sources:
      binary: ./builtin-apply3.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-apply4_717:
  build:
    cflags: ' -O2 -Wmissing-noreturn -fgnu89-inline -mno-mmx'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-apply4.c'
    sources:
      binary: ./builtin-apply4.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wmissing-noreturn -fgnu89-inline"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-arith-overflow-1_718:
  build:
    cflags: ' -O2 -fdump-tree-optimized -g'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-arith-overflow-1.c'
    sources:
      binary: ./builtin-arith-overflow-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-arith-overflow-2_719:
  build:
    cflags: ' -O2 -fdump-tree-optimized'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-arith-overflow-2.c'
    sources:
      binary: ./builtin-arith-overflow-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-assume-aligned-1_720:
  build:
    cflags: ' -O3 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-assume-aligned-1.c'
    sources:
      binary: builtin-assume-aligned-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-assume-aligned-2_721:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-assume-aligned-2.c'
    sources:
      binary: builtin-assume-aligned-2.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-integer argument 3 in call to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-integer argument 3 in call to function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-bswap-1_722:
  build:
    cflags: -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-bswap-1.c'
    sources:
      binary: builtin-bswap-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-bswap-2_723:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-bswap-2.c'
    sources:
      binary: ./builtin-bswap-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-bswap-3_724:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-bswap-3.c'
    sources:
      binary: ./builtin-bswap-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-bswap-4_725:
  build:
    cflags: ' -Wall'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-bswap-4.c'
    sources:
      binary: ./builtin-bswap-4.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-bswap-5_726:
  build:
    cflags: ' -O'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-bswap-5.c'
    sources:
      binary: ./builtin-bswap-5.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-bswap-6_727:
  build:
    cflags: -O -fdump-rtl-combine -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-bswap-6.c'
    sources:
      binary: builtin-bswap-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-rtl-combine"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-bswap-6a_728:
  build:
    cflags: -O2 -fdump-rtl-combine -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-bswap-6a.c'
    sources:
      binary: builtin-bswap-6a.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-combine"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-bswap-7_729:
  build:
    cflags: -O -fdump-rtl-combine -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-bswap-7.c'
    sources:
      binary: builtin-bswap-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-rtl-combine"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-bswap-7a_730:
  build:
    cflags: -O2 -fdump-rtl-combine -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-bswap-7a.c'
    sources:
      binary: builtin-bswap-7a.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-combine"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-bswap-8_731:
  build:
    cflags: -O2 -fdump-rtl-combine -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-bswap-8.c'
    sources:
      binary: builtin-bswap-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-combine"'
      - '"-O2 -fdump-rtl-combine -march=z900" { target s390-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-bswap-9_732:
  build:
    cflags: -O2 -fdump-rtl-combine -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-bswap-9.c'
    sources:
      binary: builtin-bswap-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-combine"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-choose-expr-2_733:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-choose-expr-2.c'
    sources:
      binary: builtin-choose-expr-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(first argument to '__builtin_choose_expr' not a constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-choose-expr_734:
  build:
    cflags: ' -O1 -Wall'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-choose-expr.c'
    sources:
      binary: ./builtin-choose-expr.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-complex-err-1_735:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-complex-err-1.c'
    sources:
      binary: builtin-complex-err-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not of real binary floating-point type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not of real binary floating-point type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(different types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong number of arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong number of arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot take address))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-complex-err-2_736:
  build:
    cflags: ' -std=c90 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-complex-err-2.c'
    sources:
      binary: builtin-complex-err-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c90 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support complex types))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-constant_p-1_737:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-constant_p-1.c'
    sources:
      binary: builtin-constant_p-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-ffs-1_738:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-ffs-1.c'
    sources:
      binary: builtin-ffs-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-inf-1_739:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-inf-1.c'
    sources:
      binary: builtin-inf-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(does not support infinity" "INF unsupported))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(does not support infinity" "INF unsupported))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(does not support infinity" "INF unsupported))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-10_741:
  build:
    cflags: ' -O2 -fdump-tree-objsz1-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-10.c'
    sources:
      binary: builtin-object-size-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-objsz1-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-11_742:
  build:
    cflags: ' -std=gnu89'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-11.c'
    sources:
      binary: ./builtin-object-size-11.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-12_743:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-12.c'
    sources:
      binary: ./builtin-object-size-12.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-13_744:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-13.c'
    sources:
      binary: ./builtin-object-size-13.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-14_745:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-14.c'
    sources:
      binary: ./builtin-object-size-14.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-15_746:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-15.c'
    sources:
      binary: ./builtin-object-size-15.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-16_747:
  build:
    cflags: ' -O0'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-16.c'
    sources:
      binary: ./builtin-object-size-16.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(assumed to have one element))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-17_748:
  build:
    cflags: ' -O0 -fdump-tree-ssa -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-17.c'
    sources:
      binary: builtin-object-size-17.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0 -fdump-tree-ssa"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(assumed to have one element))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-18_749:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-18.c'
    sources:
      binary: builtin-object-size-18.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-1_740:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-1.c'
    sources:
      binary: ./builtin-object-size-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-2_750:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-2.c'
    sources:
      binary: ./builtin-object-size-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-3_751:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-3.c'
    sources:
      binary: ./builtin-object-size-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-4_752:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-4.c'
    sources:
      binary: ./builtin-object-size-4.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-5_753:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-5.c'
    sources:
      binary: builtin-object-size-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-6_754:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-6.c'
    sources:
      binary: ./builtin-object-size-6.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-7_755:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-7.c'
    sources:
      binary: ./builtin-object-size-7.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-8_756:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-8.c'
    sources:
      binary: ./builtin-object-size-8.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-9_757:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-9.c'
    sources:
      binary: ./builtin-object-size-9.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-prefetch-1_758:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-prefetch-1.c'
    sources:
      binary: ./builtin-prefetch-1.exe
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid second argument to '__builtin_prefetch'; using zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid second argument to '__builtin_prefetch'; using zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid second argument to '__builtin_prefetch'; using zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid third argument to '__builtin_prefetch'; using zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid third argument to '__builtin_prefetch'; using zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid third argument to '__builtin_prefetch'; using zero))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-protos-1_759:
  build:
    cflags: ' -Wtraditional-conversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-protos-1.c'
    sources:
      binary: builtin-protos-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - -Wtraditional-conversion
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(as signed due to prototype))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-redefine_760:
  build:
    cflags: ' -Wno-builtin-macro-redefined -U__DATE__ -D__TIME__=X -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-redefine.c'
    sources:
      binary: builtin-redefine.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wno-builtin-macro-redefined -U__DATE__ -D__TIME__=X"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(\"__TIME__\" redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(\"__DATE__\" redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(\"__TIMESTAMP__\" redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: warning:[^
        ]*(\"__LINE__\" redef))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(\"__INCLUDE_LEVEL__\" redef))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(\"__COUNTER__\" redef))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-return-1_761:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-return-1.c'
    sources:
      binary: ./builtin-return-1.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-stringop-chk-1_762:
  build:
    cflags: ' -O2 -Wno-format -std=gnu99 -ftrack-macro-expansion=0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-stringop-chk-1.c'
    sources:
      binary: builtin-stringop-chk-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wno-format -std=gnu99 -ftrack-macro-expansion=0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 2 bytes into a region of size 1" "memcpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 2 " "mempcpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 3 " "memmove))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 6 " "memset))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 3 " "strcpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 3" "stpcpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 3 exceeds the size 2 of the destination" "strncpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 3 exceeds the size 2 of the destination" "strncpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 3 " "strcat))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 3 " "sprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 3 " "sprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 3 exceeds the size 2 of the destination" "snprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 3" "vsprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 3 exceeds the size 2 of the destination" "vsnprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 1 " "strcpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 1 " "memset))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 1 " "memset))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 3 exceeds the size 1 of the destination" "strncpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 5" "sprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 16 " "memcpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 8 " "memset))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 48 " "memset))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: warning:[^
        ]*(writing" "stpcpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 7" "memset))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-stringop-chk-2_763:
  build:
    cflags: ' -O2 -ftrack-macro-expansion=0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-stringop-chk-2.c'
    sources:
      binary: builtin-stringop-chk-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftrack-macro-expansion=0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(writing" "memcpy))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-stringop-chk-4_764:
  build:
    cflags: ' -O2 -ftrack-macro-expansion=0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-stringop-chk-4.c'
    sources:
      binary: builtin-stringop-chk-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftrack-macro-expansion=0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 6 and 7 bytes into a region of size 5 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 1 and 2 bytes into a region of size 0 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 1 and 2 bytes into a region of size 0 overflows the destination" "excessive pointer offset))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between \[0-9\]+ and \[0-9\]+ bytes into a region of size 5 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:126:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:206:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 6 and 7 bytes into a region of size 5 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 6 and 7 bytes into a region of size 5 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:210:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between \[0-9\]+ and \[0-9\]+ bytes into a region of size 5 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:211:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:212:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:232:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 6 and 7 bytes into a region of size 5 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:234:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 6 and 7 bytes into a region of size 5 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:236:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between \[0-9\]+ and \[0-9\]+ bytes into a region of size 5 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:237:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:238:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:243:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:258:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 6 and 7 bytes into a region of size 5 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:260:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 6 and 7 bytes into a region of size 5 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:262:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between \[0-9\]+ and \[0-9\]+ bytes into a region of size 5 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:263:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:264:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:269:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:284:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 6 bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:291:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 5 bytes into a region of size 3" "strcat to a non-empty string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:320:)[^
        ]*([0-9]+: warning:[^
        ]*(writing at least 1 byte into a region of size 0 " "strcpy into empty substring))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:323:)[^
        ]*([0-9]+: warning:[^
        ]*(writing at least 1 byte into a region of size 0 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:326:)[^
        ]*([0-9]+: warning:[^
        ]*(writing at least 1 byte into a region of size 0 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:340:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 6 bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:341:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 7 bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:342:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 8 bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:343:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 9 bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:344:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 10 bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:345:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 11 bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:347:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 1 byte into a region of size 0 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:349:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 1 byte into a region of size 0 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:367:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 1 exceeds the size 0 of the destination ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:368:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 1 exceeds the size 0 of the destination ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:374:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 5 equals the size of the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:375:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 6 exceeds the size 5 of the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:382:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 5 equals the size of the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:383:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 6 exceeds the size 5 of the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:384:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 6 exceeds the size 5 of the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:390:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 6 exceeds the size 5 of the destination ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:391:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 6 exceeds the size 5 of the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:398:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 5 bytes into a region of size 3" "strncat to a non-empty string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:416:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 5 equals the size of the destination ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:422:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 5 equals the size of the destination ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:424:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound \[0-9\]+ exceeds the size 5 of the destination ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:426:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound \[0-9\]+ exceeds maximum object size ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:442:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 6 bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:446:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 6 bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:448:)[^
        ]*([0-9]+: warning:[^
        ]*(writing \[0-9\]+ bytes into a region of size 5))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:449:)[^
        ]*([0-9]+: warning:[^
        ]*(writing \[0-9\]+ bytes into a region of size 5))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:450:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:451:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:457:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:458:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:492:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 6 and 7 bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:493:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 7 and 8 bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:494:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between \[0-9\]+ and \[0-9\]+ bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:496:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:500:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 1 and 2 bytes into a region of size 0 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:501:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 1 and 2 bytes into a region of size 0 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:514:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 6 and 7 bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:524:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-stringop-chk-5_765:
  build:
    cflags: ' -O2 -Wstringop-overflow=1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-stringop-chk-5.c'
    sources:
      binary: builtin-stringop-chk-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstringop-overflow=1"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 8 and 32 bytes into a region of size 4 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 8 and 32 bytes into a region of size 4 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 8 and 32 bytes into a region of size 4 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 12 and 32 bytes into a region of size 8 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 8 bytes into a region of size 7))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 8 bytes into a region of size 7))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 7 bytes into a region of size 6))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 7 bytes into a region of size 6))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 6 bytes into a region of size 5))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 6 bytes into a region of size 5))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 4 bytes into a region of size 3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 3 bytes into a region of size 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 2 bytes into a region of size 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 8 and 32 bytes into a region of size 4 overflows the destination" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 8 and 32 bytes into a region of size 4 overflows the destination" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 8 and 32 bytes into a region of size 4 overflows the destination" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 12 and 32 bytes into a region of size 8 overflows the destination" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:136:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 8 bytes into a region of size 7" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 8 bytes into a region of size 7" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 7 bytes into a region of size 6" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 7 bytes into a region of size 6" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 6 bytes into a region of size 5" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 6 bytes into a region of size 5" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 4 bytes into a region of size 3" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 3 bytes into a region of size 2" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 2 bytes into a region of size 1" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:248:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 13 and 33 bytes into a region of size 8 overflows the destination))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-stringop-chk-6_766:
  build:
    cflags: ' -O2 -Wstringop-overflow=2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-stringop-chk-6.c'
    sources:
      binary: builtin-stringop-chk-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstringop-overflow=2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 17 and 29 bytes into a region of size 4 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 17 and 31 bytes into a region of size 8 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 12 and 32 bytes into a region of size 3 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 12 and 32 bytes into a region of size 3 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 12 and 32 bytes into a region of size 3 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 12 and 32 bytes into a region of size 3 overflows the destination))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-stringop-chk-7_767:
  build:
    cflags: ' -O2 -Wstringop-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-stringop-chk-7.c'
    sources:
      binary: builtin-stringop-chk-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstringop-overflow"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-strncat-chk-1_768:
  build:
    cflags: ' -O2 -std=gnu99 -ftrack-macro-expansion=0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-strncat-chk-1.c'
    sources:
      binary: builtin-strncat-chk-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=gnu99 -ftrack-macro-expansion=0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 11 bytes into a region of size 10 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 11 exceeds the size 10 of the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 10 equals the size of the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 11 exceeds the size 10 of the destination))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-strstr-1_769:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-strstr-1.c'
    sources:
      binary: builtin-strstr-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-strstr_770:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-strstr.c'
    sources:
      binary: builtin-strstr.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-unreachable-1_771:
  build:
    cflags: ' -O2 -Wreturn-type -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-unreachable-1.c'
    sources:
      binary: builtin-unreachable-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wreturn-type"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-unreachable-2_772:
  build:
    cflags: -O2 -fdump-tree-optimized -fdump-rtl-cse1 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-unreachable-2.c'
    sources:
      binary: builtin-unreachable-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized -fdump-rtl-cse1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-unreachable-3_773:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-unreachable-3.c'
    sources:
      binary: builtin-unreachable-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-unreachable-4_774:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-unreachable-4.c'
    sources:
      binary: builtin-unreachable-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-unreachable-5_775:
  build:
    cflags: ' -O2 -fdump-tree-fab1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-unreachable-5.c'
    sources:
      binary: builtin-unreachable-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-fab1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-unreachable-6_776:
  build:
    cflags: ' -O2 -fdump-tree-fab1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-unreachable-6.c'
    sources:
      binary: builtin-unreachable-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-fab1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-10_778:
  build:
    cflags: ' -O2 -ffast-math'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-10.c'
    sources:
      binary: builtins-10.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-11_779:
  build:
    cflags: ' -O2 -ffast-math'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-11.c'
    sources:
      binary: builtins-11.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-12_780:
  build:
    cflags: -ansi -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-12.c'
    sources:
      binary: builtins-12.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-13_781:
  build:
    cflags: ' -ansi'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-13.c'
    sources:
      binary: builtins-13.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-14_782:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-14.c'
    sources:
      binary: builtins-14.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-15_783:
  build:
    cflags: ' -O2 -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-15.c'
    sources:
      binary: builtins-15.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-16_784:
  build:
    cflags: -O -ansi -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-16.c'
    sources:
      binary: builtins-16.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ansi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-17_785:
  build:
    cflags: ' -O2 -ffast-math'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-17.c'
    sources:
      binary: builtins-17.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-18_786:
  build:
    cflags: ' -O2 -ffast-math'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-18.c'
    sources:
      binary: builtins-18.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-19_787:
  build:
    cflags: ' -O2 -ffast-math'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-19.c'
    sources:
      binary: builtins-19.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-1_777:
  build:
    cflags: -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-1.c'
    sources:
      binary: builtins-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: warning:[^
        ]*(target format does not support infinity" "inf))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-20_789:
  build:
    cflags: ' -O2 -ffast-math'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-20.c'
    sources:
      binary: builtins-20.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-21_790:
  build:
    cflags: ' -O2 -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-21.c'
    sources:
      binary: builtins-21.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-22_791:
  build:
    cflags: ' -O2 -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-22.c'
    sources:
      binary: builtins-22.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-23_792:
  build:
    cflags: ' -O2 -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-23.c'
    sources:
      binary: builtins-23.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-24_793:
  build:
    cflags: ' -O2 -ffast-math'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-24.c'
    sources:
      binary: ./builtins-24.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-26_794:
  build:
    cflags: ' -O2 -ffast-math'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-26.c'
    sources:
      binary: builtins-26.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-27_795:
  build:
    cflags: ' -O2 -ffast-math'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-27.c'
    sources:
      binary: builtins-27.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-28_796:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-28.c'
    sources:
      binary: builtins-28.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "crealf not lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "cimagf not lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "creal not lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "cimag not lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "creall not lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "cimagl not lvalue))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-2_788:
  build:
    cflags: ' -O2 -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-2.c'
    sources:
      binary: builtins-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-30_797:
  build:
    cflags: ' -Wall -Wshadow -fshow-column -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-30.c'
    sources:
      binary: builtins-30.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wshadow -fshow-column"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows a built-in|number of arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(8:shadows a built-in))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(10:argument 'foo' doesn't match built-in prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows a built-in|number of arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(18:argument 'foo' doesn't match))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-31_798:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-31.c'
    sources:
      binary: builtins-31.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-32_799:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-32.c'
    sources:
      binary: ./builtins-32.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-33_800:
  build:
    cflags: ' -O2 -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-33.c'
    sources:
      binary: builtins-33.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-34_801:
  build:
    cflags: ' -O2 -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-34.c'
    sources:
      binary: builtins-34.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-35_802:
  build:
    cflags: ' -std=c89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-35.c'
    sources:
      binary: builtins-35.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c89"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-36_803:
  build:
    cflags: ' -O2 -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-36.c'
    sources:
      binary: builtins-36.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-37_804:
  build:
    cflags: ' -O2 -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-37.c'
    sources:
      binary: builtins-37.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-38_805:
  build:
    cflags: ' -O2 -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-38.c'
    sources:
      binary: builtins-38.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-39_806:
  build:
    cflags: ' -O2 -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-39.c'
    sources:
      binary: builtins-39.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-40_807:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-40.c'
    sources:
      binary: builtins-40.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-41_808:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-41.c'
    sources:
      binary: builtins-41.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-43_809:
  build:
    cflags: ' -O1 -fno-trapping-math -fno-finite-math-only -fdump-tree-gimple -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-43.c'
    sources:
      binary: builtins-43.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fno-trapping-math -fno-finite-math-only -fdump-tree-gimple -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-44_810:
  build:
    cflags: ' -O1 -fno-trapping-math -fno-finite-math-only -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-44.c'
    sources:
      binary: builtins-44.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fno-trapping-math -fno-finite-math-only -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-45_811:
  build:
    cflags: ' -O1 -fno-trapping-math -fno-finite-math-only -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-45.c'
    sources:
      binary: builtins-45.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fno-trapping-math -fno-finite-math-only -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-46_812:
  build:
    cflags: ' -O2 -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-46.c'
    sources:
      binary: builtins-46.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-47_813:
  build:
    cflags: ' -O -ffast-math -fdump-tree-optimized'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-47.c'
    sources:
      binary: ./builtins-47.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ffast-math -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-48_814:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-48.c'
    sources:
      binary: ./builtins-48.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-49_815:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-49.c'
    sources:
      binary: ./builtins-49.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-50_816:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-50.c'
    sources:
      binary: ./builtins-50.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-51_817:
  build:
    cflags: ' -O2 -ffast-math'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-51.c'
    sources:
      binary: ./builtins-51.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-52_818:
  build:
    cflags: ' -O -ffast-math'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-52.c'
    sources:
      binary: builtins-52.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-53_819:
  build:
    cflags: ' -O2 -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-53.c'
    sources:
      binary: builtins-53.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-54_820:
  build:
    cflags: ' -O2 -ffast-math'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-54.c'
    sources:
      binary: builtins-54.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-55_821:
  build:
    cflags: ' -O2 -ffast-math'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-55.c'
    sources:
      binary: builtins-55.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-57_822:
  build:
    cflags: ' -std=c99 -ffinite-math-only -O'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-57.c'
    sources:
      binary: builtins-57.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -ffinite-math-only -O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-58_823:
  build:
    cflags: -O -ffast-math -std=c99 -fno-ident -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-58.c'
    sources:
      binary: builtins-58.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ffast-math -std=c99 -fno-ident"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-59_824:
  build:
    cflags: ' -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-59.c'
    sources:
      binary: builtins-59.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-60_826:
  build:
    cflags: ' -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-60.c'
    sources:
      binary: builtins-60.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-61_827:
  build:
    cflags: ' -O -ffast-math -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-61.c'
    sources:
      binary: builtins-61.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ffast-math -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-62_828:
  build:
    cflags: ' -O -ffinite-math-only -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-62.c'
    sources:
      binary: builtins-62.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ffinite-math-only -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-63_829:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-63.c'
    sources:
      binary: builtins-63.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-64_830:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-64.c'
    sources:
      binary: ./builtins-64.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-65_831:
  build:
    cflags: ' -O2 -ffast-math'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-65.c'
    sources:
      binary: builtins-65.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-66_832:
  build:
    cflags: -ansi -pedantic-errors -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-66.c'
    sources:
      binary: builtins-66.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-67_833:
  build:
    cflags: ' -ffast-math -lm'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-67.c'
    sources:
      binary: builtins-67.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ffast-math -lm"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-68_834:
  build:
    cflags: ' -Wno-long-long -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-68.c'
    sources:
      binary: builtins-68.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wno-long-long"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(second argument to function .__builtin_alloca_with_align. must be a constant integer power of 2 between .8. and ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-6_825:
  build:
    cflags: ' -O2 -ffast-math'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-6.c'
    sources:
      binary: ./builtins-6.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-7_835:
  build:
    cflags: ' -O2 -ffast-math'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-7.c'
    sources:
      binary: builtins-7.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-85_837:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-85.c'
    sources:
      binary: builtins-85.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-8_836:
  build:
    cflags: ' -O2 -ffast-math'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-8.c'
    sources:
      binary: ./builtins-8.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-9_838:
  build:
    cflags: ' -O2 -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-9.c'
    sources:
      binary: builtins-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-error_839:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-error.c'
    sources:
      binary: builtins-error.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-const integer argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-const integer argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-const integer argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-const integer argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-const integer argument))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-nonnull_840:
  build:
    cflags: ' -ansi -pedantic-errors -O2 -Wnonnull -ftrack-macro-expansion=0 -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-nonnull.c'
    sources:
      binary: builtins-nonnull.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:126:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:133:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:135:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:136:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:160:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:165:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:170:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 3 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:178:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:179:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:182:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 3 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:216:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 3 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:220:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 3 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:222:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:224:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:226:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:228:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:229:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 4 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:232:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 5 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:234:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:235:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 4 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:238:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 5 null where non-null expected))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-align-1_841:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-align-1.c'
    sources:
      binary: c11-align-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(useless))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-align-2_842:
  build:
    cflags: ' -std=c11 -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-align-2.c'
    sources:
      binary: ./c11-align-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(useless))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-align-3_843:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-align-3.c'
    sources:
      binary: c11-align-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large|power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large|power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large|power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large|power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large|power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large|power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large|power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large|power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large|power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large|power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(positive power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(does not redeclare tag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(alignment specified for typedef))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(alignment specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(alignment specified for parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(register))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(alignment specified for function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-align-4_844:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-align-4.c'
    sources:
      binary: c11-align-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(reduce alignment))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-align-5_845:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-align-5.c'
    sources:
      binary: c11-align-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression before))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-align-6_846:
  build:
    cflags: ' -std=c11'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-align-6.c'
    sources:
      binary: ./c11-align-6.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-anon-struct-1_847:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-anon-struct-1.c'
    sources:
      binary: c11-anon-struct-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-anon-struct-2_848:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-anon-struct-2.c'
    sources:
      binary: c11-anon-struct-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(has no member))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-anon-struct-3_849:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-anon-struct-3.c'
    sources:
      binary: c11-anon-struct-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration does not declare anything))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-atomic-1_850:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-atomic-1.c'
    sources:
      binary: c11-atomic-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .i. of an atomic structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .i. of an atomic structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .i. of an atomic structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .i. of an atomic union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .i. of an atomic union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:227:)[^
        ]*([0-9]+: warning:[^
        ]*(follows non-prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:233:)[^
        ]*([0-9]+: warning:[^
        ]*(follows non-prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:251:)[^
        ]*([0-9]+: warning:[^
        ]*(follows non-prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:257:)[^
        ]*([0-9]+: warning:[^
        ]*(follows non-prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:263:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:264:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:265:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:266:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-atomic-2_851:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-atomic-2.c'
    sources:
      binary: c11-atomic-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-atomic-3_852:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-atomic-3.c'
    sources:
      binary: c11-atomic-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong type|pointer of type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong type|pointer of type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong type|pointer of type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong type|pointer of type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to|invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to|invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to|invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to|invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer type mismatch))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer type mismatch))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer type mismatch))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer type mismatch))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(atomic type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(atomic type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(applied to a qualified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(applied to a qualified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(applied to a qualified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(applied to a qualified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:126:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:133:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(match prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(match prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:161:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(inappropriate type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(inappropriate type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(inappropriate type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(inappropriate type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:165:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(inappropriate type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(inappropriate type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(inappropriate type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(inappropriate type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(inappropriate type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:174:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(may not be qualified))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-atomic-4_853:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-atomic-4.c'
    sources:
      binary: c11-atomic-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .x. of an atomic structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .x. of an atomic structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .x. of an atomic structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .x. of an atomic structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .x. of an atomic union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .x. of an atomic union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .x. of an atomic union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .x. of an atomic union))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-complex-1_854:
  build:
    cflags: ' -std=c11 -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-complex-1.c'
    sources:
      binary: ./c11-complex-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-float-1_855:
  build:
    cflags: ' -std=c11 -pedantic-errors -E'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-float-1.c'
    sources:
      binary: c11-float-1.i
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-float-2_856:
  build:
    cflags: ' -std=c11 -pedantic-errors -E'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-float-2.c'
    sources:
      binary: c11-float-2.i
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-generic-1_857:
  build:
    cflags: ' -std=c11 -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-generic-1.c'
    sources:
      binary: ./c11-generic-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-generic-2_858:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-generic-2.c'
    sources:
      binary: c11-generic-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate .*default.* case))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable length type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two compatible types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not compatible with any association))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-generic-3_859:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-generic-3.c'
    sources:
      binary: c11-generic-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not compatible with any association))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not compatible with any association))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not compatible with any association))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-noreturn-1_860:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-noreturn-1.c'
    sources:
      binary: c11-noreturn-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(has a 'return' statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(does return" "second warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(has a 'return' statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(does return" "second warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(does return))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(does return))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-noreturn-2_861:
  build:
    cflags: ' -std=c11 -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-noreturn-2.c'
    sources:
      binary: ./c11-noreturn-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(has a 'return' statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(does return" "second warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(has a 'return' statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(does return" "second warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(does return))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(does return))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-noreturn-3_862:
  build:
    cflags: ' -std=c11 -pedantic-errors -fhosted -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-noreturn-3.c'
    sources:
      binary: c11-noreturn-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors -fhosted"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('main' declared '_Noreturn'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-noreturn-4_863:
  build:
    cflags: ' -std=c11 -pedantic-errors -ffreestanding -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-noreturn-4.c'
    sources:
      binary: c11-noreturn-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors -ffreestanding"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-noreturn-5_864:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-noreturn-5.c'
    sources:
      binary: c11-noreturn-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(typedef))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-pointer-float-1_865:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-pointer-float-1.c'
    sources:
      binary: c11-pointer-float-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-static-assert-1_866:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-static-assert-1.c'
    sources:
      binary: c11-static-assert-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-static-assert-2_867:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-static-assert-2.c'
    sources:
      binary: c11-static-assert-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(static assertion failed: \"assert1\"))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(static assertion failed: \"assert2\"))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(static assertion failed: \"assert3\"))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(static assertion failed: \"assert4\"))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(static assertion failed: \"assert5\"))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(static assertion failed: \"assert6\"))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(static assertion failed: \"assert7\"))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-static-assert-3_868:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-static-assert-3.c'
    sources:
      binary: c11-static-assert-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not an integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not an integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not an integer constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(loop initial declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-static-assert-4_869:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-static-assert-4.c'
    sources:
      binary: c11-static-assert-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-static-assert-5_870:
  build:
    cflags: ' -std=c11 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-static-assert-5.c'
    sources:
      binary: c11-static-assert-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-static-assert-6_871:
  build:
    cflags: ' -std=c11 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-static-assert-6.c'
    sources:
      binary: c11-static-assert-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(not an integer constant expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-stdatomic-1_872:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-stdatomic-1.c'
    sources:
      binary: c11-stdatomic-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-stdatomic-2_873:
  build:
    cflags: ' -std=c11 -pedantic-errors -E'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-stdatomic-2.c'
    sources:
      binary: c11-stdatomic-2.i
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-thread-local-1_874:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-thread-local-1.c'
    sources:
      binary: c11-thread-local-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(useless))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized and))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-thread-local-2_875:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-thread-local-2.c'
    sources:
      binary: c11-thread-local-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Thread_local))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Thread_local))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Thread_local))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Thread_local))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Thread_local))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Thread_local))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Thread_local))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Thread_local))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(thread))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(thread))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(thread))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(thread))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(static but declared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(static but used in inline))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-true_min-1_876:
  build:
    cflags: ' -std=c11'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-true_min-1.c'
    sources:
      binary: ./c11-true_min-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-typedef-1_877:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-typedef-1.c'
    sources:
      binary: c11-typedef-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with different type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with different type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with different type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with different type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with different type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with different type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with different type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with different type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with different type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-uni-string-1_878:
  build:
    cflags: ' -std=c11 -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-uni-string-1.c'
    sources:
      binary: ./c11-uni-string-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-uni-string-2_879:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-uni-string-2.c'
    sources:
      binary: c11-uni-string-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(concatenation))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-version-1_880:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-version-1.c'
    sources:
      binary: c11-version-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-version-2_881:
  build:
    cflags: ' -std=iso9899:2011 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-version-2.c'
    sources:
      binary: c11-version-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:2011 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-align-1_882:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-align-1.c'
    sources:
      binary: c90-align-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support '_Alignof'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support '_Alignas'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-anon-struct-1_883:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-anon-struct-1.c'
    sources:
      binary: c90-anon-struct-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unnamed structs))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-array-lval-1_884:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-array-lval-1.c'
    sources:
      binary: c90-array-lval-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue" "array not decaying to lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue|incompatible" "array not decaying to lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue|invalid" "array not decaying to lvalue))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-array-lval-2_885:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-array-lval-2.c'
    sources:
      binary: c90-array-lval-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-array-lval-3_886:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-array-lval-3.c'
    sources:
      binary: c90-array-lval-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue" "array not decaying to lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue" "array not decaying to lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue" "array not decaying to lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue|incompatible" "array not decaying to lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue|incompatible" "array not decaying to lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue|incompatible" "array not decaying to lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue|invalid" "array not decaying to lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue|invalid" "array not decaying to lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue|invalid" "array not decaying to lvalue))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-array-lval-4_887:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-array-lval-4.c'
    sources:
      binary: c90-array-lval-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-array-lval-5_888:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-array-lval-5.c'
    sources:
      binary: c90-array-lval-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "bad address-of))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "bad address-of))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "bad address-of))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "bad address-of))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-array-lval-6_889:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-array-lval-6.c'
    sources:
      binary: c90-array-lval-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue" "array not decaying to lvalue))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-array-lval-7_890:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-array-lval-7.c'
    sources:
      binary: c90-array-lval-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array" "bad conditional))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-array-lval-8_891:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-array-lval-8.c'
    sources:
      binary: c90-array-lval-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-array-quals-2_892:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-array-quals-2.c'
    sources:
      binary: c90-array-quals-2.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-array-quals_893:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-array-quals.c'
    sources:
      binary: c90-array-quals.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-arraydecl-1_894:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-arraydecl-1.c'
    sources:
      binary: c90-arraydecl-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90" "\[*\] not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90" "\[*\] not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90" "\[quals\] not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90" "\[quals expr\] not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90" "\[static expr\] not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90" "\[static quals expr\] not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90" "\[quals static expr\] not in C90))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-atomic-1_895:
  build:
    cflags: ' -std=c90 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-atomic-1.c'
    sources:
      binary: c90-atomic-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c90 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Atomic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Atomic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Atomic))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-complex-1_896:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-complex-1.c'
    sources:
      binary: c90-complex-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(C" "_Complex not in C90))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-complit-1_897:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-complit-1.c'
    sources:
      binary: c90-complit-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(compound literal" "scalar))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(compound literal" "struct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(compound literal" "union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(compound literal" "array))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-const-expr-10_899:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-const-expr-10.c'
    sources:
      binary: c90-const-expr-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without a cast|near initialization))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without a cast))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-const-expr-11_900:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-const-expr-11.c'
    sources:
      binary: c90-const-expr-11.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors -O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a constant expression|near initialization))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a constant expression|near initialization))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-const-expr-1_898:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-const-expr-1.c'
    sources:
      binary: c90-const-expr-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initial" "assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initial" "increment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initial" "decrement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initial" "function call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initial" "comma))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-const-expr-2_901:
  build:
    cflags: ' -std=iso9899:1990 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-const-expr-2.c'
    sources:
      binary: c90-const-expr-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-const-expr-3_902:
  build:
    cflags: ' -std=iso9899:1990 -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-const-expr-3.c'
    sources:
      binary: c90-const-expr-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-const-expr-4_903:
  build:
    cflags: ' -std=iso9899:1990 -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-const-expr-4.c'
    sources:
      binary: c90-const-expr-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-const-expr-5_904:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-const-expr-5.c'
    sources:
      binary: c90-const-expr-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(5:assignment from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(5:assignment from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(6:ISO C forbids assignment between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(6:ISO C forbids comparison of 'void \\*' with function pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10:ISO C forbids comparison of 'void \\*' with function pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(6:ISO C forbids comparison of 'void \\*' with function pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(19:ISO C forbids comparison of 'void \\*' with function pointer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-const-expr-6_905:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-const-expr-6.c'
    sources:
      binary: c90-const-expr-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variabl|can't be evaluated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variab|can't be evaluated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variab|can't be evaluated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variab|can't be evaluated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variab|can't be evaluated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variab|can't be evaluated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-const-expr-7_906:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-const-expr-7.c'
    sources:
      binary: c90-const-expr-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-const-expr-8_907:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -fwrapv -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-const-expr-8.c'
    sources:
      binary: c90-const-expr-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors -fwrapv"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(3:overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(3:overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(3:overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(3:overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(3:overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(3:overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:not an integer constant" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(1:overflow in constant expression" "constant))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(21:integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(21:integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(21:integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(21:integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(31:integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(12:integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(13:integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(16:integer overflow in expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-const-expr-9_908:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -ftrack-macro-expansion=0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-const-expr-9.c'
    sources:
      binary: c90-const-expr-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors -ftrack-macro-expansion=0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-digraph-1_909:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-digraph-1.c'
    sources:
      binary: ./c90-digraph-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-dupqual-1_910:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-dupqual-1.c'
    sources:
      binary: c90-dupqual-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-enum-comma-1_911:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-enum-comma-1.c'
    sources:
      binary: c90-enum-comma-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(comma at end" "enum comma error))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-flex-array-1_912:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-flex-array-1.c'
    sources:
      binary: c90-flex-array-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90" "flexible array members not in C90))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-flex-array-2_913:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-flex-array-2.c'
    sources:
      binary: c90-flex-array-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-float-1_914:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -E'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-float-1.c'
    sources:
      binary: c90-float-1.i
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-fordecl-1_915:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-fordecl-1.c'
    sources:
      binary: c90-fordecl-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('for' loop initial declarations are only allowed in C99 or C11 mode" "declaration in for loop))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-func-1_916:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-func-1.c'
    sources:
      binary: c90-func-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*( ISO C90 does not support .__func__. predefined identifier))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-func-2_917:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-func-2.c'
    sources:
      binary: c90-func-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-hexfloat-1_918:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-hexfloat-1.c'
    sources:
      binary: c90-hexfloat-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(hexadecimal floating" "hex float error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(hexadecimal floating" "hex float error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many decimal points" "bad hex float))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-hexfloat-2_919:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-hexfloat-2.c'
    sources:
      binary: ./c90-hexfloat-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-idem-qual-1_920:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-idem-qual-1.c'
    sources:
      binary: c90-idem-qual-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate" "duplicate type qualifier error))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-idem-qual-2_921:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-idem-qual-2.c'
    sources:
      binary: c90-idem-qual-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate" "duplicate type qualifier error))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-idem-qual-3_922:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-idem-qual-3.c'
    sources:
      binary: c90-idem-qual-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate" "duplicate type qualifier error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate" "duplicate type qualifier error))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-impl-decl-1_923:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-impl-decl-1.c'
    sources:
      binary: c90-impl-decl-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-impl-int-1_924:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-impl-int-1.c'
    sources:
      binary: c90-impl-int-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-impl-int-2_925:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-impl-int-2.c'
    sources:
      binary: c90-impl-int-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-init-1_926:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-init-1.c'
    sources:
      binary: c90-init-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO (C89|C90) forbids specifying subobject to initialize))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO (C89|C90) forbids specifying subobject to initialize))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO (C89|C90) forbids specifying subobject to initialize))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((forbids specifying range of elements to initialize)|(ISO (C89|C90) forbids specifying subobject to initialize)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(use of designated initializer without))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(use of designated initializer with ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not computable at load time))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-intconst-1_927:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-intconst-1.c'
    sources:
      binary: c90-intconst-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:432:)[^
        ]*([0-9]+: warning:[^
        ]*(unsigned" "unsigned decimal no suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:433:)[^
        ]*([0-9]+: warning:[^
        ]*(unsigned" "unsigned decimal long suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:434:)[^
        ]*([0-9]+: warning:[^
        ]*(unsigned" "unsigned decimal long suffix))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-intprom-1_928:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-intprom-1.c'
    sources:
      binary: c90-intprom-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-left-shift-1_929:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-left-shift-1.c'
    sources:
      binary: c90-left-shift-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-left-shift-2_930:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-left-shift-2.c'
    sources:
      binary: c90-left-shift-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-left-shift-3_931:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-left-shift-3.c'
    sources:
      binary: c90-left-shift-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-longlong-1_932:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-longlong-1.c'
    sources:
      binary: c90-longlong-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(long long" "long long not in C90))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-mixdecl-1_933:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-mixdecl-1.c'
    sources:
      binary: c90-mixdecl-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(mix|parse" "mixed declarations and code not in C90))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-noreturn-1_934:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-noreturn-1.c'
    sources:
      binary: c90-noreturn-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support '_Noreturn'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-restrict-1_935:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-restrict-1.c'
    sources:
      binary: c90-restrict-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse error|syntax error|expected|no type" "restrict not in C90))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-return-1_936:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-return-1.c'
    sources:
      binary: c90-return-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with a value" "return constraint violation))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-scope-1_937:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-scope-1.c'
    sources:
      binary: ./c90-scope-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-static-1_938:
  build:
    cflags: ' -O2 -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-static-1.c'
    sources:
      binary: c90-static-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used but never defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used but never defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used but never defined))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-static-assert-1_939:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-static-assert-1.c'
    sources:
      binary: c90-static-assert-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support '_Static_assert'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-thread-local-1_940:
  build:
    cflags: ' -std=c90 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-thread-local-1.c'
    sources:
      binary: c90-thread-local-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c90 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Thread_local))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-typedef-1_941:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-typedef-1.c'
    sources:
      binary: c90-typedef-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of typedef))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-typespec-1_942:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-typespec-1.c'
    sources:
      binary: c90-typespec-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:126:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:131:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:133:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:136:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:140:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:150:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:152:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:153:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:154:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:158:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:160:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:165:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:177:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:178:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:179:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:180:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:182:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:186:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:187:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:194:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:195:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:199:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:201:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:202:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:203:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:204:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:205:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:206:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:207:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:209:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:210:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:212:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:214:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:215:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:216:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:218:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:221:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:222:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:223:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:224:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:225:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:226:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:227:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:228:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:229:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:230:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:231:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:232:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:233:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:234:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:235:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:236:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:237:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:238:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:239:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:240:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:241:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:242:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:243:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:244:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:245:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:246:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:248:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:249:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:250:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:251:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:252:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:253:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:254:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:256:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:258:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:259:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:260:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:261:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:262:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:263:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:264:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:266:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:267:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:268:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:269:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:270:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:271:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:272:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:273:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:274:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:275:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:276:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:277:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:278:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:279:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:280:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:281:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:282:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:284:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:285:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:286:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:287:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:288:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:289:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:290:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:292:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:294:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:295:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:296:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:297:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:298:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:299:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:300:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:302:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:303:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:304:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:305:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:306:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:307:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:308:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:309:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:310:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:311:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:312:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:313:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:314:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:315:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:316:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:317:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:318:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:319:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:320:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:321:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:322:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:323:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:324:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:325:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:326:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:327:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:328:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:329:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:330:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:331:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:332:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:333:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:334:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:335:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:336:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:337:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:338:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:339:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:340:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:341:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:342:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:343:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:344:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:345:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:346:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:347:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:348:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:349:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:350:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:351:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:352:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:353:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:354:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:355:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:356:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:357:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:358:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:359:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:360:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:361:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:362:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:363:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:364:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:365:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:366:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:367:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:368:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:369:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:370:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:371:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:372:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:373:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:374:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:375:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:376:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:377:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:378:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:379:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:380:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:381:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:382:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:383:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:384:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:385:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:386:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:387:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:388:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:389:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:390:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:391:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:392:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:393:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:394:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:395:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:396:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:397:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:398:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:399:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:400:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:401:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:402:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:403:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:404:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:405:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:406:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:407:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:408:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:409:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:410:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:411:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:412:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:413:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:414:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:415:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:416:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:417:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:418:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:419:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:420:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:421:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:422:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:423:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:424:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:425:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:426:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:427:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:428:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:429:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:430:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:431:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:432:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:433:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:434:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:435:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:436:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:437:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:438:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:439:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:440:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:441:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:442:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:443:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:444:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:445:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:446:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:447:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:448:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:449:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:450:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:451:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:452:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:453:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:454:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:455:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:456:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:457:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:458:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:459:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:460:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:461:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:462:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:463:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:464:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:465:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:466:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:467:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:468:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:469:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:470:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:471:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:472:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:473:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:474:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:475:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:476:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:477:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:478:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:479:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:480:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:481:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:482:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:483:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:484:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:485:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:486:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:487:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:488:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:489:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:490:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:491:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:492:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:493:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:494:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:495:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:496:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:497:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:498:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:499:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:500:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:501:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:502:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:503:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:504:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:505:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:506:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:507:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:508:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:509:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:510:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:511:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:512:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:513:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:514:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:515:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:516:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:517:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:518:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:519:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:520:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:521:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:522:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int unsigned))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-vla-1_943:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-vla-1.c'
    sources:
      binary: c90-vla-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(forbids variable length array))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c94-digraph-1_944:
  build:
    cflags: ' -std=iso9899:199409 -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c94-digraph-1.c'
    sources:
      binary: ./c94-digraph-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:199409 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c94-version-1_945:
  build:
    cflags: ' -std=iso9899:199409 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c94-version-1.c'
    sources:
      binary: c94-version-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:199409 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-align-1_946:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-align-1.c'
    sources:
      binary: c99-align-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C99 does not support '_Alignof'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C99 does not support '_Alignas'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-anon-struct-1_947:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-anon-struct-1.c'
    sources:
      binary: c99-anon-struct-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unnamed structs))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-array-lval-1_948:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-array-lval-1.c'
    sources:
      binary: c99-array-lval-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-array-lval-2_949:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-array-lval-2.c'
    sources:
      binary: c99-array-lval-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-array-lval-3_950:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-array-lval-3.c'
    sources:
      binary: c99-array-lval-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-array-lval-4_951:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-array-lval-4.c'
    sources:
      binary: c99-array-lval-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-array-lval-5_952:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-array-lval-5.c'
    sources:
      binary: c99-array-lval-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "bad address-of))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "bad address-of))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "bad address-of))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "bad address-of))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-array-lval-6_953:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-array-lval-6.c'
    sources:
      binary: c99-array-lval-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-array-lval-7_954:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-array-lval-7.c'
    sources:
      binary: c99-array-lval-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-array-lval-8_955:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-array-lval-8.c'
    sources:
      binary: c99-array-lval-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(qualifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(qualifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(qualifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-array-nonobj-1_956:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-array-nonobj-1.c'
    sources:
      binary: c99-array-nonobj-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array" "\[\]\[\] var))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array" "\[\]\[\] arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array" "struct \[\] var))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array" "struct \[\] arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array" "func \[\] var))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array" "func \[\] arg))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-arraydecl-1_957:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-arraydecl-1.c'
    sources:
      binary: c99-arraydecl-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(discards" "discards quals))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(discards" "discards quals))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(discards" "discards quals))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(discards" "discards quals))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(discards" "discards quals))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(discards" "discards quals))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(discards" "discards quals))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(discards" "discards quals))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-parameter" "quals in non-parm array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-parameter" "static in non-parm array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-parameter" "static in non-final parm array))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-arraydecl-2_958:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-arraydecl-2.c'
    sources:
      binary: c99-arraydecl-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse|syntax|expected" "bad array declarator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse|syntax|expected" "bad array declarator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse|syntax|expected" "bad array declarator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse|syntax|expected" "bad array declarator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse|syntax|expected" "bad array declarator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse|syntax|expected" "bad array declarator))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-arraydecl-3_959:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-arraydecl-3.c'
    sources:
      binary: c99-arraydecl-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(discards 'restrict' qualifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(discards 'restrict' qualifier))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-atomic-1_960:
  build:
    cflags: ' -std=c99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-atomic-1.c'
    sources:
      binary: c99-atomic-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Atomic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Atomic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Atomic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Atomic))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-bool-1_961:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-bool-1.c'
    sources:
      binary: ./c99-bool-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-bool-2_962:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-bool-2.c'
    sources:
      binary: c99-bool-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(width))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-bool-3_963:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-bool-3.c'
    sources:
      binary: ./c99-bool-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-complex-1_964:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-complex-1.c'
    sources:
      binary: c99-complex-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(plain" "plain _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex integer" "_Complex int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex integer" "_Complex long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex conj" "~ for conjugation))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-complex-2_965:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-complex-2.c'
    sources:
      binary: c99-complex-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex" "postinc))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex" "preinc))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex" "postdec))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex" "predec))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-complex-3_966:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-complex-3.c'
    sources:
      binary: c99-complex-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-complit-1_967:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-complit-1.c'
    sources:
      binary: ./c99-complit-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-complit-2_968:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-complit-2.c'
    sources:
      binary: c99-complit-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "void type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "incomplete struct type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "incomplete union type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init|variable" "VLA type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "value outside array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "value outside array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "value outside array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "non-const))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "non-const))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "non-const))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "struct bad init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "union bad init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "array bad init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "array bad init))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-condexpr-1_969:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-condexpr-1.c'
    sources:
      binary: c99-condexpr-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-10_971:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-10.c'
    sources:
      binary: c99-const-expr-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without a cast|near initialization))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without a cast))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-11_972:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-11.c'
    sources:
      binary: c99-const-expr-11.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-12_973:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-12.c'
    sources:
      binary: c99-const-expr-12.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer type mismatch in conditional expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-13_974:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -frounding-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-13.c'
    sources:
      binary: c99-const-expr-13.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors -frounding-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-14_975:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-14.c'
    sources:
      binary: c99-const-expr-14.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-1_970:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-1.c'
    sources:
      binary: c99-const-expr-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-2_976:
  build:
    cflags: ' -std=iso9899:1999 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-2.c'
    sources:
      binary: c99-const-expr-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-3_977:
  build:
    cflags: ' -std=iso9899:1999 -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-3.c'
    sources:
      binary: c99-const-expr-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-4_978:
  build:
    cflags: ' -std=iso9899:1999 -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-4.c'
    sources:
      binary: c99-const-expr-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-5_979:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-5.c'
    sources:
      binary: c99-const-expr-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids assignment between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids comparison of 'void \\*' with function pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids comparison of 'void \\*' with function pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids comparison of 'void \\*' with function pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids comparison of 'void \\*' with function pointer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-6_980:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-6.c'
    sources:
      binary: c99-const-expr-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variabl))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variab))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variab))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variab))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variab))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant|near initialization))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-7_981:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-7.c'
    sources:
      binary: c99-const-expr-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-8_982:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -fwrapv -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-8.c'
    sources:
      binary: c99-const-expr-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors -fwrapv"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not an integer constant" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(1:overflow in constant expression" "constant))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(16:integer overflow in expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-9_983:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -ftrack-macro-expansion=0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-9.c'
    sources:
      binary: c99-const-expr-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors -ftrack-macro-expansion=0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-digraph-1_984:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-digraph-1.c'
    sources:
      binary: ./c99-digraph-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-dupqual-1_985:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-dupqual-1.c'
    sources:
      binary: c99-dupqual-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-enum-comma-1_986:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-enum-comma-1.c'
    sources:
      binary: c99-enum-comma-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-flex-array-1_987:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-flex-array-1.c'
    sources:
      binary: c99-flex-array-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no named members" "members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no named members" "members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not at end" "not at end))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-flex-array-2_988:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-flex-array-2.c'
    sources:
      binary: c99-flex-array-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of flexible array member))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-flex-array-3_989:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-flex-array-3.c'
    sources:
      binary: c99-flex-array-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "struct in struct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "union in struct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "union in struct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "recursive union in struct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "recursive union in struct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "struct in array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "union in array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "union in array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "recursive union in array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "recursive union in array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "struct in array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "union in array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "union in array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "recursive union in array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "recursive union in array))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-flex-array-5_990:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-flex-array-5.c'
    sources:
      binary: c99-flex-array-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(flexible array member in union))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-flex-array-6_991:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-flex-array-6.c'
    sources:
      binary: c99-flex-array-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-flex-array-7_992:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-flex-array-7.c'
    sources:
      binary: c99-flex-array-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of a flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of a flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids empty initializer braces))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of a flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of a flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids empty initializer braces))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-flex-array-typedef-1_993:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-flex-array-typedef-1.c'
    sources:
      binary: c99-flex-array-typedef-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no named members" "members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no named members" "members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not at end" "not at end))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-flex-array-typedef-2_994:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-flex-array-typedef-2.c'
    sources:
      binary: c99-flex-array-typedef-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of flexible array member))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-flex-array-typedef-3_995:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-flex-array-typedef-3.c'
    sources:
      binary: c99-flex-array-typedef-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-flex-array-typedef-5_996:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-flex-array-typedef-5.c'
    sources:
      binary: c99-flex-array-typedef-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(flexible array member in union))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-flex-array-typedef-7_997:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-flex-array-typedef-7.c'
    sources:
      binary: c99-flex-array-typedef-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of a flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of a flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids empty initializer braces))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of a flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of a flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids empty initializer braces))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-flex-array-typedef-8_998:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-flex-array-typedef-8.c'
    sources:
      binary: c99-flex-array-typedef-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of flexible array member))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-float-1_999:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -E'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-float-1.c'
    sources:
      binary: c99-float-1.i
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-fordecl-1_1000:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-fordecl-1.c'
    sources:
      binary: ./c99-fordecl-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-fordecl-2_1001:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-fordecl-2.c'
    sources:
      binary: c99-fordecl-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(bar" "function in for loop))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(static" "static in for loop))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(extern" "extern in for loop))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(FOO" "enum value in for loop))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(FOO" "enum value in for loop))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(BAR" "enum tag in for loop))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-fordecl-3_1002:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-fordecl-3.c'
    sources:
      binary: c99-fordecl-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('struct s' declared in 'for' loop initial declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('union u' declared in 'for' loop initial declaration))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-func-1_1003:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-func-1.c'
    sources:
      binary: ./c99-func-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-func-2_1004:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-func-2.c'
    sources:
      binary: c99-func-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse error|syntax error|expected" "before string constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-func-3_1005:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-func-3.c'
    sources:
      binary: ./c99-func-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-func-4_1006:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-func-4.c'
    sources:
      binary: c99-func-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(discards" "__func__ pointer to const))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-hexfloat-1_1007:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-hexfloat-1.c'
    sources:
      binary: c99-hexfloat-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-hexfloat-2_1008:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-hexfloat-2.c'
    sources:
      binary: ./c99-hexfloat-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-hexfloat-3_1009:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-hexfloat-3.c'
    sources:
      binary: c99-hexfloat-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no digits))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(require an exponent))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(require an exponent))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(require an exponent))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(exponent has no digits))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(exponent has no digits))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(exponent has no digits))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(exponent has no digits))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(exponent has no digits))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(exponent has no digits))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-idem-qual-1_1010:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-idem-qual-1.c'
    sources:
      binary: c99-idem-qual-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-idem-qual-2_1011:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-idem-qual-2.c'
    sources:
      binary: c99-idem-qual-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-idem-qual-3_1012:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-idem-qual-3.c'
    sources:
      binary: c99-idem-qual-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-impl-decl-1_1013:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-impl-decl-1.c'
    sources:
      binary: c99-impl-decl-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(implicit" "C99 implicit declaration error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(implicit" "C99 implicit declaration error))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-impl-int-1_1014:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-impl-int-1.c'
    sources:
      binary: c99-impl-int-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(type defaults" "C99 implicit int error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(return type defaults" "C99 implicit int error))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-impl-int-2_1015:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-impl-int-2.c'
    sources:
      binary: c99-impl-int-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(defaults" "C99 implicit int parameter error))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-init-1_1016:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-init-1.c'
    sources:
      binary: ./c99-init-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-init-2_1017:
  build:
    cflags: ' -std=iso9899:1999 -Wall -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-init-2.c'
    sources:
      binary: c99-init-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -Wall -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((array index in non-array)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((field name not in record)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(15: has no member named .D.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((is not constant)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((array index in initializer exceeds array bounds)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((array index in initializer exceeds array bounds)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(forbids specifying range of elements))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(use of designated initializer without))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(use of designated initializer with ))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*((initialized field with side-effects overwritten)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*((initialized field with side-effects overwritten)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*((initialized field with side-effects overwritten)|(near initialization)))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-init-3_1018:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-init-3.c'
    sources:
      binary: c99-init-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(integer type|near init" "pointer designator))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-init-4_1019:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-init-4.c'
    sources:
      binary: c99-init-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-init-5_1020:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-init-5.c'
    sources:
      binary: c99-init-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initial))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initial))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-init-6_1021:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-init-6.c'
    sources:
      binary: c99-init-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initial))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-intconst-1_1022:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-intconst-1.c'
    sources:
      binary: c99-intconst-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-intconst-2_1023:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-intconst-2.c'
    sources:
      binary: c99-intconst-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(integer constant is so large that it is unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(integer constant is so large that it is unsigned))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-intprom-1_1024:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-intprom-1.c'
    sources:
      binary: c99-intprom-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-left-shift-1_1025:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-left-shift-1.c'
    sources:
      binary: c99-left-shift-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-left-shift-2_1026:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -Wno-shift-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-left-shift-2.c'
    sources:
      binary: c99-left-shift-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors -Wno-shift-overflow"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-left-shift-3_1027:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -Wno-shift-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-left-shift-3.c'
    sources:
      binary: c99-left-shift-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors -Wno-shift-overflow"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-longlong-1_1028:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-longlong-1.c'
    sources:
      binary: c99-longlong-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-longlong-2_1029:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -Wlong-long -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-longlong-2.c'
    sources:
      binary: c99-longlong-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors -Wlong-long"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(long long))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-main-1_1030:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -Wreturn-type -O -fhosted'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-main-1.c'
    sources:
      binary: ./c99-main-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors -Wreturn-type -O -fhosted"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-mixdecl-1_1031:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-mixdecl-1.c'
    sources:
      binary: ./c99-mixdecl-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-noreturn-1_1032:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-noreturn-1.c'
    sources:
      binary: c99-noreturn-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C99 does not support '_Noreturn'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-predef-1_1033:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-predef-1.c'
    sources:
      binary: c99-predef-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-restrict-1_1034:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-restrict-1.c'
    sources:
      binary: c99-restrict-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(restrict" "restrict constraint violation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(restrict" "restrict constraint violation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(restrict" "restrict constraint violation))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-restrict-2_1035:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-restrict-2.c'
    sources:
      binary: c99-restrict-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-restrict-3_1036:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-restrict-3.c'
    sources:
      binary: c99-restrict-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(restrict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(restrict))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-restrict-4_1037:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-restrict-4.c'
    sources:
      binary: c99-restrict-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-return-1_1038:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-return-1.c'
    sources:
      binary: c99-return-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with no value" "return constraint violation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with a value" "return constraint violation))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-scope-1_1039:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-scope-1.c'
    sources:
      binary: ./c99-scope-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-scope-2_1040:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-scope-2.c'
    sources:
      binary: ./c99-scope-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-static-1_1041:
  build:
    cflags: ' -O2 -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-static-1.c'
    sources:
      binary: c99-static-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used but never defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used but never defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used but never defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used but never defined" "VLA))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-static-assert-1_1042:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-static-assert-1.c'
    sources:
      binary: c99-static-assert-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C99 does not support '_Static_assert'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-stdint-1_1043:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -fhosted -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-stdint-1.c'
    sources:
      binary: c99-stdint-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors -fhosted"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-stdint-2_1044:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -ffreestanding -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-stdint-2.c'
    sources:
      binary: c99-stdint-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors -ffreestanding"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-stdint-3_1045:
  build:
    cflags: ' -std=iso9899:1999 -fhosted -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-stdint-3.c'
    sources:
      binary: c99-stdint-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -fhosted"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-stdint-4_1046:
  build:
    cflags: ' -std=iso9899:1999 -ffreestanding -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-stdint-4.c'
    sources:
      binary: c99-stdint-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -ffreestanding"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-stdint-5_1047:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-stdint-5.c'
    sources:
      binary: c99-stdint-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-stdint-6_1048:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-stdint-6.c'
    sources:
      binary: c99-stdint-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-stdint-7_1049:
  build:
    cflags: ' -std=iso9899:1999 -fhosted -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-stdint-7.c'
    sources:
      binary: c99-stdint-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -fhosted"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-stdint-8_1050:
  build:
    cflags: ' -std=iso9899:1999 -ffreestanding -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-stdint-8.c'
    sources:
      binary: c99-stdint-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -ffreestanding"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-tag-1_1051:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-tag-1.c'
    sources:
      binary: c99-tag-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(forward" "enum forward 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(forward" "enum forward 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(forward" "enum forward 3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(rede" "struct redef))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(rede" "union redef))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(rede" "enum redef))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong|forward" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong|forward" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-tag-2_1052:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-tag-2.c'
    sources:
      binary: c99-tag-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-tag-3_1053:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-tag-3.c'
    sources:
      binary: c99-tag-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(14:empty declaration with type qualifier does not redeclare tag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(14:empty declaration with storage class specifier does not redeclare tag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(28:empty declaration with type qualifier does not redeclare tag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(29:'u3' defined as wrong kind of tag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(29:empty declaration with type qualifier does not redeclare tag" "wrong tag empty))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(13:useless type qualifier in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(15:useless storage class specifier in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(14:useless type qualifier in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(14:useless storage class specifier in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(32:useless type qualifier in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(30:useless storage class specifier in empty declaration))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-tgmath-1_1054:
  build:
    cflags: ' -std=iso9899:1999 -E'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-tgmath-1.c'
    sources:
      binary: c99-tgmath-1.i
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-tgmath-2_1055:
  build:
    cflags: -std=iso9899:1999 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-tgmath-2.c'
    sources:
      binary: c99-tgmath-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-tgmath-3_1056:
  build:
    cflags: -std=iso9899:1999 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-tgmath-3.c'
    sources:
      binary: c99-tgmath-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-tgmath-4_1057:
  build:
    cflags: -std=iso9899:1999 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-tgmath-4.c'
    sources:
      binary: c99-tgmath-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-thread-local-1_1058:
  build:
    cflags: ' -std=c99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-thread-local-1.c'
    sources:
      binary: c99-thread-local-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Thread_local))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-typedef-1_1059:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-typedef-1.c'
    sources:
      binary: c99-typedef-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of typedef))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-typespec-1_1060:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-typespec-1.c'
    sources:
      binary: c99-typespec-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:126:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:131:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:133:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:134:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:135:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:140:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:150:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:152:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:153:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:154:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:158:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:160:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:161:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:165:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:170:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:171:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:174:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:177:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:178:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:179:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:180:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:185:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:186:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:187:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:194:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:195:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:197:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:199:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:201:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:202:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:203:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:204:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:205:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:206:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:207:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:209:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:210:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:211:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:212:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:214:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:218:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:220:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:221:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:222:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:224:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:225:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:228:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:229:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:230:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:231:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:233:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:235:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:236:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:237:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:238:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:239:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:240:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:241:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:242:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:244:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:246:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:247:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:248:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:249:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:250:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:251:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:252:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:253:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:254:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:255:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:257:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:258:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:261:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:262:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:263:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:264:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:265:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:267:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:268:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:269:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:272:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:273:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:274:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:275:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:276:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:277:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:278:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:279:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:280:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:281:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:282:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:283:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:285:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:286:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:287:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:290:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:291:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:292:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:293:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:294:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:295:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:296:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:297:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:298:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:301:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:302:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:303:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:304:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:305:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:306:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:307:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:308:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:309:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:310:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:311:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:312:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:314:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:315:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:316:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:317:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:318:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Complex void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:319:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Complex char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:320:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Complex short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:321:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Complex int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:322:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Complex long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:323:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Complex float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:324:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Complex double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:325:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Complex signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:326:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Complex unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:327:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Complex _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:328:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Complex _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:329:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:330:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:331:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:332:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:333:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:334:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:335:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:336:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:337:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:338:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:340:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:341:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:342:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:343:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:345:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:346:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:347:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:348:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:349:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:350:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:351:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:352:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:353:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:354:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:355:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:356:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:357:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:358:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:359:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:360:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:361:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:362:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:363:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:364:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:366:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:367:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:368:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:369:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:370:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:371:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:372:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:373:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:374:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:376:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:378:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:379:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:380:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:381:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:382:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:383:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:384:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:385:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:386:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:389:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:390:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:391:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:392:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:393:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:394:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:395:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:396:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:397:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:398:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:399:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:400:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:401:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:402:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:403:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:404:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:405:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:406:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:407:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:408:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:410:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:411:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:412:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:413:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:414:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:415:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:416:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:417:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:418:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:420:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:422:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:423:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:424:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:425:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:426:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:427:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:428:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:429:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:430:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:433:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:434:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:435:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:436:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:437:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:438:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:439:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:440:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:441:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:442:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:443:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:444:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:446:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:447:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:448:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:449:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:450:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex float void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:451:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex float char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:452:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex float short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:453:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex float int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:454:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex float long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:455:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex float float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:456:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex float double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:457:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex float signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:458:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex float unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:459:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex float _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:460:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex float _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:461:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:462:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:463:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:464:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:466:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:467:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:468:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:469:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:470:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:471:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:472:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:473:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:474:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:475:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:476:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:477:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:478:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:479:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:480:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:481:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:482:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:483:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:484:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:485:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:486:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:487:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:488:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:489:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:490:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:491:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:492:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:493:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:494:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:495:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:496:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:497:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:498:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:499:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:500:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:501:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:502:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:503:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:504:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:505:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:506:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:507:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:508:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:509:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:510:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:511:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:512:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:513:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:514:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:515:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:516:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:517:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:518:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:519:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:520:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:521:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:522:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:523:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:524:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:525:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:526:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:527:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:528:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:529:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:530:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:531:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:532:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:533:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:534:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:535:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:536:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:537:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:538:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:539:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:540:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:541:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:542:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:543:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:544:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:547:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:548:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:549:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:550:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:551:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:552:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:554:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:555:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:556:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:557:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:558:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:559:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:560:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:561:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:562:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:563:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:565:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:566:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:567:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:568:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:569:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:570:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:571:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:572:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:573:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:574:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:575:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:576:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:577:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:578:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:579:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:580:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:581:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:582:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:583:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:584:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:585:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:587:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:588:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:589:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:590:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:591:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:592:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:593:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:594:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:595:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:596:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:597:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:598:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:599:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:600:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:601:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:602:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:603:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:604:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:605:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:606:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:607:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:609:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:610:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:611:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:612:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:613:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:614:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:615:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:616:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:617:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:618:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:619:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:620:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:621:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:624:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:625:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:626:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:627:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:628:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:629:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:631:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:632:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:633:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:634:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:635:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:636:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:637:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:638:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:639:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:640:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:642:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:643:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:644:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:645:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:646:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:647:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:648:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:649:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:650:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:651:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:652:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:653:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:654:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:657:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:658:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:659:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:660:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:661:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:663:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:664:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:665:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:666:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:667:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:668:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:669:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:670:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:671:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:672:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:674:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:675:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:676:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:677:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:678:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:679:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:680:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:681:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Complex void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:682:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Complex char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:683:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Complex short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:684:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Complex int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:685:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Complex long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:686:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Complex float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:687:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Complex double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:688:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Complex signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:689:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Complex unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:690:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Complex _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:691:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Complex _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:692:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:693:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:694:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:695:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:697:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:698:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:699:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:700:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:701:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:702:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:703:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:704:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:705:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:707:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:708:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:709:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:710:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:711:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:712:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:713:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:714:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:715:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:716:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:717:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:719:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:720:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:721:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:722:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:723:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:724:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:725:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:726:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:727:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:729:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:730:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:731:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:732:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:733:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:734:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:735:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:736:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex double void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:737:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex double char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:738:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex double short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:739:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex double int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:740:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex double long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:741:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex double float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:742:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex double double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:743:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex double signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:744:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex double unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:745:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex double _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:746:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex double _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:747:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Complex void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:748:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Complex char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:749:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Complex short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:750:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Complex int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:751:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Complex long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:752:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Complex float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:753:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Complex double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:754:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Complex signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:755:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Complex unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:756:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Complex _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:757:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Complex _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:758:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:759:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:760:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:761:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:762:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:763:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:764:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:765:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:766:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:767:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:768:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:769:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:770:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:771:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:772:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:773:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:774:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:775:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:776:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:777:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:778:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:779:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:780:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:781:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:782:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:783:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:784:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:785:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:786:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:787:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:788:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:789:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:790:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:791:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:792:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:793:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:794:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:796:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:797:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:798:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:799:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:800:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:801:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:802:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:803:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:804:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:805:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:807:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:808:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:809:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:810:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:811:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:812:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:813:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:814:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:815:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:817:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:818:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:819:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:820:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:821:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:822:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:823:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:824:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:825:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:826:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:827:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:828:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:829:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:830:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:831:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:832:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:833:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:834:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:835:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:836:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:837:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:838:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:839:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:840:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:841:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:842:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:843:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:844:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:845:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:846:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:847:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:848:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:849:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:851:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:852:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:853:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:854:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:855:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:856:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:857:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:858:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:859:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:860:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:862:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:863:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:864:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:865:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:866:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:867:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:868:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:869:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:870:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:872:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:873:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:874:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:875:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:876:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:877:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:878:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:879:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long double void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:880:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long double char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:881:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long double short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:882:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long double int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:883:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long double long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:884:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long double float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:885:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long double double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:886:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long double signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:887:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long double unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:888:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long double _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:889:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long double _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:890:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:891:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:892:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:893:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:894:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:895:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:896:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:897:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:898:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:899:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:900:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:901:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:902:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:903:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:904:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:905:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:906:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:907:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:908:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:909:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:910:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:911:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:912:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:913:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:914:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:915:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:916:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:917:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:918:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:919:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:920:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:921:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:922:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:923:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:924:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:925:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:926:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:927:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:928:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:929:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:930:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:931:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:932:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:933:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:934:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:935:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:936:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:937:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:938:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:939:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:940:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:941:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:942:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:943:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:944:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:945:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:946:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:947:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:948:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:949:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:950:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:951:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:952:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:953:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:954:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:955:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:956:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:957:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:958:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:959:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:960:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:961:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:962:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:963:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:964:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:965:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:966:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:967:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:968:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:969:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:970:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:971:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:972:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:973:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:974:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:975:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:976:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:977:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:978:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:979:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:980:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:981:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:982:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:983:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:984:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:985:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:986:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:987:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:988:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:989:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:990:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:991:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:992:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:993:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:994:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:995:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:996:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:997:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:998:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:999:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1000:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1001:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1002:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1003:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1004:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1005:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1006:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1007:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1008:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1009:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1010:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1011:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1012:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1013:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1014:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1015:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1016:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1017:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1018:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1019:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1020:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1021:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1022:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1023:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1024:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1025:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1026:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1027:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1028:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1029:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1030:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1031:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1032:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1033:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1034:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1035:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1036:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1037:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1038:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1039:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1040:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1041:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1042:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1043:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1044:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1045:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1046:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1047:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1048:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1049:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1050:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1051:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1052:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1053:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1054:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1055:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1056:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1057:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1058:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1059:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1060:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1061:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1062:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1063:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1064:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1065:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1066:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1067:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1068:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1069:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1070:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1071:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1072:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1073:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1074:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1075:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1076:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1077:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1078:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1079:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1080:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1081:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1082:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1083:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1084:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1085:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1086:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1087:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1088:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1089:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1090:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1091:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1092:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1093:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1094:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1095:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1096:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1097:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1098:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1099:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1101:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1102:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1103:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1105:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1107:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1109:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1110:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1112:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1116:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1118:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1119:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1120:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1122:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1124:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1125:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1126:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1128:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1129:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1130:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1131:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1132:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1133:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1134:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1135:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1136:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1137:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1138:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1139:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1140:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1141:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1142:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1143:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1144:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1146:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1147:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1148:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1149:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1150:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1151:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1152:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1153:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1154:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1155:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1156:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1157:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1158:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1159:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1160:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1161:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1162:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1163:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1164:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int _Complex))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-version-1_1061:
  build:
    cflags: ' -std=c99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-version-1.c'
    sources:
      binary: c99-version-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-vla-1_1062:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-vla-1.c'
    sources:
      binary: c99-vla-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-vla-2_1063:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-vla-2.c'
    sources:
      binary: c99-vla-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-vla-jump-1_1064:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-vla-jump-1.c'
    sources:
      binary: c99-vla-jump-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(21:jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(21:jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(21:jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(21:jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(21:jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:131:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:134:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:140:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:154:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:158:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:171:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:174:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:185:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:202:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:205:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:206:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:207:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:209:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:210:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:222:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:223:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:224:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:225:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:226:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:227:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:230:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:232:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:234:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:236:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:239:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:240:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:241:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:242:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:243:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:244:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:247:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:249:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:253:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:256:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:257:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:258:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:259:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:260:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:261:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:263:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:264:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:265:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:266:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:267:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:268:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:270:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:273:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:274:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:275:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:276:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:277:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:278:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:280:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:281:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:282:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:283:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:284:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:285:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:290:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:291:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:292:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:293:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:294:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:295:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:297:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:298:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:299:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:300:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:301:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:302:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-vla-jump-2_1065:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-vla-jump-2.c'
    sources:
      binary: c99-vla-jump-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:131:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:134:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:140:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:154:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:158:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:171:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:174:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:185:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:202:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:205:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:206:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:207:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:209:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:210:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:222:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:223:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:224:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:225:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:226:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:227:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:230:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:232:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:234:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:236:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:239:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:240:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:241:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:242:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:243:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:244:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:247:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:249:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:253:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:256:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:257:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:258:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:259:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:260:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:261:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:263:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:264:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:265:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:266:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:267:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:268:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:270:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:273:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:274:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:275:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:276:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:277:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:278:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:280:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:281:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:282:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:283:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:284:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:285:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:290:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:291:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:292:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:293:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:294:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:295:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:297:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:298:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:299:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:300:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:301:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:302:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-vla-jump-3_1066:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-vla-jump-3.c'
    sources:
      binary: c99-vla-jump-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:131:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:134:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:140:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:154:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:158:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:171:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:174:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:185:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:202:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:205:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:206:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:207:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:209:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:210:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:222:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:223:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:224:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:225:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:226:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:227:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:230:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:232:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:234:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:236:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:239:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:240:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:241:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:242:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:243:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:244:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:247:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:249:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:253:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:256:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:257:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:258:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:259:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:260:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:261:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:263:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:264:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:265:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:266:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:267:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:268:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:270:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:273:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:274:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:275:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:276:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:277:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:278:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:280:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:281:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:282:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:283:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:284:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:285:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:290:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:291:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:292:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:293:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:294:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:295:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:297:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:298:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:299:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:300:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:301:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:302:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-vla-jump-4_1067:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-vla-jump-4.c'
    sources:
      binary: c99-vla-jump-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:131:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:134:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:140:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:154:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:158:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:171:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:174:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:185:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:202:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:205:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:206:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:207:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:209:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:210:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:222:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:223:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:224:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:225:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:226:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:227:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:230:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:232:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:234:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:236:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:239:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:240:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:241:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:242:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:243:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:244:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:247:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:249:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:253:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:256:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:257:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:258:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:259:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:260:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:261:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:263:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:264:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:265:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:266:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:267:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:268:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:270:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:273:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:274:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:275:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:276:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:277:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:278:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:280:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:281:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:282:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:283:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:284:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:285:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:290:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:291:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:292:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:293:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:294:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:295:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:297:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:298:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:299:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:300:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:301:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:302:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-vla-jump-5_1068:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-vla-jump-5.c'
    sources:
      binary: c99-vla-jump-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(switch jumps into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(switch jumps into scope of identifier with variably modified type))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(statement will never be executed))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_call-diag-1_1069:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/call-diag-1.c'
    sources:
      binary: call-diag-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments to function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_call-diag-2_1070:
  build:
    cflags: ' -std=gnu99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/call-diag-2.c'
    sources:
      binary: call-diag-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(qualified void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(qualified void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(function called through a non-compatible type" "cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(function called through a non-compatible type" "cast))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_case-bogus-1_1071:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/case-bogus-1.c'
    sources:
      binary: case-bogus-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(21:case label does not reduce to an integer constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_case-const-1_1072:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/case-const-1.c'
    sources:
      binary: case-const-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_case-const-2_1073:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/case-const-2.c'
    sources:
      binary: case-const-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(case label is not an integer constant expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_case-const-3_1074:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/case-const-3.c'
    sources:
      binary: case-const-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(case label is not an integer constant expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-1_1075:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cast-1.c'
    sources:
      binary: cast-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast specifies array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast specifies function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conversion to non-scalar type requested))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast to union type from type not present in union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where an integer was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where an integer was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a complex was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a complex was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot convert to a pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot convert to a pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used struct type value where scalar is required))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used union type value where scalar is required))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(cast to pointer from integer of different size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from pointer to integer of different size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from pointer to integer of different size))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-2_1076:
  build:
    cflags: ' -std=gnu99 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cast-2.c'
    sources:
      binary: cast-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast specifies array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast specifies function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conversion to non-scalar type requested))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast to union type from type not present in union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where an integer was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where an integer was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a complex was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a complex was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot convert to a pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot convert to a pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used struct type value where scalar is required))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used union type value where scalar is required))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids casting nonscalar to the same type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids casting nonscalar to the same type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids casts to union type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(cast to pointer from integer of different size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from pointer to integer of different size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from pointer to integer of different size))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-3_1077:
  build:
    cflags: ' -std=gnu99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cast-3.c'
    sources:
      binary: cast-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast specifies array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast specifies function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids casting nonscalar to the same type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids casting nonscalar to the same type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conversion to non-scalar type requested))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids casts to union type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast to union type from type not present in union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where an integer was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where an integer was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a complex was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a complex was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot convert to a pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot convert to a pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used struct type value where scalar is required))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used union type value where scalar is required))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(cast to pointer from integer of different size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from pointer to integer of different size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from pointer to integer of different size))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-4_1078:
  build:
    cflags: ' -std=gnu99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cast-4.c'
    sources:
      binary: cast-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from pointer to integer of different size))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-function-1_1079:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cast-function-1.c'
    sources:
      binary: cast-function-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(8:non-compatible|abort))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(8:non-compatible|abort))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(8:non-compatible|abort))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(non-compatible|abort))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(8:non-compatible|abort))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(non-compatible|abort))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(non-compatible|abort))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-lvalue-1_1080:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cast-lvalue-1.c'
    sources:
      binary: cast-lvalue-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "cast as lvalue))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-lvalue-2_1081:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cast-lvalue-2.c'
    sources:
      binary: cast-lvalue-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "cast as lvalue))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-pretty-print-1_1082:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cast-pretty-print-1.c'
    sources:
      binary: cast-pretty-print-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(called object '\\(unsigned int\\)i' is not a function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(called object '\\(char\\)i' is not a function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-qual-1_1083:
  build:
    cflags: ' -Wcast-qual -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cast-qual-1.c'
    sources:
      binary: cast-qual-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wcast-qual"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(cast discards" "discarding `const' warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization discards" "discarding `const' warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-qual-2_1084:
  build:
    cflags: ' -Wcast-qual -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cast-qual-2.c'
    sources:
      binary: cast-qual-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wcast-qual"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(makes '__attribute__..const..' qualified function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(adds '__attribute__..const..' qualifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(makes '__attribute__..noreturn..' qualified function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(adds '__attribute__..noreturn..' qualifier))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-qual-3_1085:
  build:
    cflags: ' -Wcast-qual -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cast-qual-3.c'
    sources:
      binary: cast-qual-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wcast-qual"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(cast discards .volatile. qualifier))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cdce1_1086:
  build:
    cflags: ' -O2 -fmath-errno -fdump-tree-cdce-details  -lm'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cdce1.c'
    sources:
      binary: ./cdce1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmath-errno -fdump-tree-cdce-details  -lm"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cdce2_1087:
  build:
    cflags: ' -O2 -fmath-errno -fdump-tree-cdce-details  -lm'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cdce2.c'
    sources:
      binary: ./cdce2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmath-errno -fdump-tree-cdce-details  -lm"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_char-compare_1088:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/char-compare.c'
    sources:
      binary: ./char-compare.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-10_1090:
  build:
    cflags: ' -fexceptions -fnon-call-exceptions -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-10.c'
    sources:
      binary: ./cleanup-10.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fexceptions -fnon-call-exceptions -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-11_1091:
  build:
    cflags: ' -fexceptions -fnon-call-exceptions -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-11.c'
    sources:
      binary: ./cleanup-11.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fexceptions -fnon-call-exceptions -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-12_1092:
  build:
    cflags: ' -O2 -fexceptions'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-12.c'
    sources:
      binary: ./cleanup-12.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fexceptions"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-13_1093:
  build:
    cflags: ' -fexceptions'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-13.c'
    sources:
      binary: ./cleanup-13.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fexceptions"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-1_1089:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-1.c'
    sources:
      binary: cleanup-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not a function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not a function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not an identifier))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(from pointer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-2_1094:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-2.c'
    sources:
      binary: ./cleanup-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-3_1095:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-3.c'
    sources:
      binary: ./cleanup-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-4_1096:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-4.c'
    sources:
      binary: ./cleanup-4.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-5_1097:
  build:
    cflags: ' -fexceptions'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-5.c'
    sources:
      binary: ./cleanup-5.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fexceptions"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-6_1098:
  build:
    cflags: -O -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-6.c'
    sources:
      binary: cleanup-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-7_1099:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-7.c'
    sources:
      binary: ./cleanup-7.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-8_1100:
  build:
    cflags: ' -fexceptions -fnon-call-exceptions -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-8.c'
    sources:
      binary: ./cleanup-8.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fexceptions -fnon-call-exceptions -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-9_1101:
  build:
    cflags: ' -fexceptions -fnon-call-exceptions -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-9.c'
    sources:
      binary: ./cleanup-9.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fexceptions -fnon-call-exceptions -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_combine-clobber_1102:
  build:
    cflags: -O2 -fdump-rtl-combine-all -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/combine-clobber.c'
    sources:
      binary: combine-clobber.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-combine-all"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_combine-subregs_1103:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/combine-subregs.c'
    sources:
      binary: ./combine-subregs.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_combine_ashiftrt_1_1104:
  build:
    cflags: -O2 -fdump-rtl-combine-all -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/combine_ashiftrt_1.c'
    sources:
      binary: combine_ashiftrt_1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-combine-all"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_combine_ashiftrt_2_1105:
  build:
    cflags: -O2 -fdump-rtl-combine-all -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/combine_ashiftrt_2.c'
    sources:
      binary: combine_ashiftrt_2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-combine-all"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_comp-goto-1_1106:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/comp-goto-1.c'
    sources:
      binary: comp-goto-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_comp-goto-2_1107:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/comp-goto-2.c'
    sources:
      binary: comp-goto-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(taking the address of a label is non-standard))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids 'goto \\*expr;'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_comp-goto-3_1108:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/comp-goto-3.c'
    sources:
      binary: comp-goto-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(taking the address of a label is non-standard))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids 'goto \\*expr;'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_comp-goto-4_1109:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/comp-goto-4.c'
    sources:
      binary: comp-goto-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing 'void \\*' pointer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_comp-return-1_1110:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/comp-return-1.c'
    sources:
      binary: comp-return-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible" "f1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible" "f2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible" "f3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible" "f4))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_compare10_1112:
  build:
    cflags: ' -Wsign-compare -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/compare10.c'
    sources:
      binary: compare10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wsign-compare"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_compare1_1111:
  build:
    cflags: ' -fno-short-enums -Wsign-compare -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/compare1.c'
    sources:
      binary: compare1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-short-enums -Wsign-compare"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(signed and unsigned" "case 4))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_compare2_1113:
  build:
    cflags: ' -Wsign-compare -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/compare2.c'
    sources:
      binary: compare2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wsign-compare"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(signed and unsigned" "case 6))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(signed and unsigned" "case 8))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(signed and unsigned" "case 14))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(signed and unsigned" "case 16))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(conditional expression" "case 20))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(conditional expression" "case 24))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_compare3_1114:
  build:
    cflags: ' -Wsign-compare -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/compare3.c'
    sources:
      binary: compare3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wsign-compare"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_compare4_1115:
  build:
    cflags: ' -fshow-column -Wsign-compare -fstrict-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/compare4.c'
    sources:
      binary: compare4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fshow-column -Wsign-compare -fstrict-overflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(9:signed and unsigned" "COMPOUND_EXPR))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(9:signed and unsigned" "MODIFY_EXPR))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_compare5_1116:
  build:
    cflags: ' -Wsign-compare -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/compare5.c'
    sources:
      binary: compare5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wsign-compare"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(signed and unsigned" "DIV_EXPR))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(signed and unsigned" "MOD_EXPR))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_compare6_1117:
  build:
    cflags: ' -Wtype-limits -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/compare6.c'
    sources:
      binary: compare6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wtype-limits"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(always false" "signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(always false" "unsigned))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_compare7_1118:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/compare7.c'
    sources:
      binary: compare7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_compare8_1119:
  build:
    cflags: ' -Wsign-compare -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/compare8.c'
    sources:
      binary: compare8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wsign-compare"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_compare9_1120:
  build:
    cflags: ' -fshort-enums -Wsign-compare -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/compare9.c'
    sources:
      binary: compare9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fshort-enums -Wsign-compare"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_complete-port_1121:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/complete-port.c'
    sources:
      binary: complete-port.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_complex-1_1122:
  build:
    cflags: ' -O'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/complex-1.c'
    sources:
      binary: ./complex-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_complex-2_1123:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/complex-2.c'
    sources:
      binary: complex-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_complex-3_1124:
  build:
    cflags: ' -O -fno-tree-sra'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/complex-3.c'
    sources:
      binary: ./complex-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-sra"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_complex-4_1125:
  build:
    cflags: ' -O -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/complex-4.c'
    sources:
      binary: complex-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_complex-5_1126:
  build:
    cflags: ' -std=c99 -O -ffloat-store -lm'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/complex-5.c'
    sources:
      binary: ./complex-5.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -O -ffloat-store -lm"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_compound-literal-1_1127:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/compound-literal-1.c'
    sources:
      binary: compound-literal-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_compound-lvalue-1_1128:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/compound-lvalue-1.c'
    sources:
      binary: compound-lvalue-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "compound expression as lvalue))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_concat2_1130:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/concat2.c'
    sources:
      binary: concat2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_concat_1129:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/concat.c'
    sources:
      binary: concat.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((parse|syntax|expected|invalid|array)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((parse|syntax|expected|invalid|array)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((parse|syntax|expected|invalid)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((parse|syntax|expected|invalid)))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cond-constqual-1_1131:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cond-constqual-1.c'
    sources:
      binary: cond-constqual-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(read-only variable" "conditional expression with const variable))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cond-lvalue-1_1132:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cond-lvalue-1.c'
    sources:
      binary: cond-lvalue-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "conditional expression as lvalue))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_const-1_1133:
  build:
    cflags: ' -O2 -Wsuggest-attribute=const -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/const-1.c'
    sources:
      binary: const-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wsuggest-attribute=const"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(const" "detect const candidate" { target *-*-* } "8))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(const" "detect const candidate" { target *-*-* } "16))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(const\[^\n\]* normally" "detect const candidate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(const\[^\n\]* normally" "detect const candidate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(const" "detect const candidate" { target *-*-* } "54))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_const-elim-1_1134:
  build:
    cflags: -O2 -std=c99 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/const-elim-1.c'
    sources:
      binary: const-elim-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=c99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_const-elim-2_1135:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/const-elim-2.c'
    sources:
      binary: const-elim-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_const-float128-ped_1136:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/const-float128-ped.c'
    sources:
      binary: const-float128-ped.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(non-standard suffix on floating constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_const-float128_1137:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/const-float128.c'
    sources:
      binary: const-float128.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_const-float80-ped_1138:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/const-float80-ped.c'
    sources:
      binary: const-float80-ped.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(non-standard suffix on floating constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_const-float80_1139:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/const-float80.c'
    sources:
      binary: const-float80.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_const-uniq-1_1140:
  build:
    cflags: ' -Os -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/const-uniq-1.c'
    sources:
      binary: const-uniq-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_constructor-1_1141:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/constructor-1.c'
    sources:
      binary: ./constructor-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_conv-1_1142:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/conv-1.c'
    sources:
      binary: conv-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_conv-2_1143:
  build:
    cflags: ' -Wpointer-sign -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/conv-2.c'
    sources:
      binary: conv-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wpointer-sign"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*( pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*( pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*( differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*( differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*( pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*( pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*( pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*( pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*( pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*( pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_conv-3_1144:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/conv-3.c'
    sources:
      binary: ./conv-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cr-decimal-dig-1_1145:
  build:
    cflags: ' -std=c11 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cr-decimal-dig-1.c'
    sources:
      binary: cr-decimal-dig-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ctor1_1146:
  build:
    cflags: -ansi -pedantic-errors -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ctor1.c'
    sources:
      binary: ctor1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cwsc0_1147:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cwsc0.c'
    sources:
      binary: cwsc0.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a call))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cwsc1_1148:
  build:
    cflags: ' -O'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cwsc1.c'
    sources:
      binary: ./cwsc1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-10_1150:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-10.c'
    sources:
      binary: decl-10.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10:unknown type name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(4:unknown type name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:unknown type name))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-1_1149:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-1.c'
    sources:
      binary: decl-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-2_1151:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-2.c'
    sources:
      binary: decl-2.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-3_1152:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-3.c'
    sources:
      binary: decl-3.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types|redeclaration of enumerator))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-4_1153:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-4.c'
    sources:
      binary: decl-4.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of parameter" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of parameter" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-5_1154:
  build:
    cflags: ' -O2 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-5.c'
    sources:
      binary: decl-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-6_1155:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-6.c'
    sources:
      binary: decl-6.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-7_1156:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-7.c'
    sources:
      binary: decl-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(array 'a' assumed to have one element))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-8_1157:
  build:
    cflags: ' -std=gnu89 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-8.c'
    sources:
      binary: decl-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of typedef 'I'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types for 'I1'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-9_1158:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-9.c'
    sources:
      binary: decl-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 'w'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 'y'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 'g'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 'g'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(a label can only be part of a statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 'd'" "unknown type name))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-global-ext_1159:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-global-ext.c'
    sources:
      binary: decl-global-ext.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-nospec-1_1160:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-nospec-1.c'
    sources:
      binary: decl-nospec-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(data definition has no type or storage class))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-nospec-2_1161:
  build:
    cflags: ' -std=gnu89 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-nospec-2.c'
    sources:
      binary: decl-nospec-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(data definition has no type or storage class))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-nospec-3_1162:
  build:
    cflags: ' -std=gnu89 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-nospec-3.c'
    sources:
      binary: decl-nospec-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(data definition has no type or storage class))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declare-simd_1163:
  build:
    cflags: ' -O3 -fopenmp-simd -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declare-simd.c'
    sources:
      binary: declare-simd.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fopenmp-simd"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-10_1165:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-10.c'
    sources:
      binary: declspec-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function definition declared 'register'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function definition declared 'typedef'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(file-scope declaration of 'x' specifies 'auto'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested function 'x' declared 'extern'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'a' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'b' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'c' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'r' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'r1' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class for function 'f8'))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(function definition declared 'auto'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(file-scope declaration of 'y' specifies 'register'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids nested functions" "nested))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(file-scope declaration of 'f8' specifies 'register'" "register function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids nested functions))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(function definition declared 'auto'" "nested))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(cannot inline function 'main'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-11_1166:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-11.c'
    sources:
      binary: declspec-11.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function definition declared 'auto'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function definition declared 'register'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function definition declared 'typedef'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(file-scope declaration of 'x' specifies 'auto'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(file-scope declaration of 'y' specifies 'register'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested function 'x' declared 'extern'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids nested functions" "nested))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'a' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'b' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'c' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'r' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'r1' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class for function 'f8'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(file-scope declaration of 'f8' specifies 'register'" "register function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids nested functions))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function definition declared 'auto'" "nested))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot inline function 'main'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-12_1167:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-12.c'
    sources:
      binary: declspec-12.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type qualifier in empty declaration))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-13_1168:
  build:
    cflags: ' -std=gnu89 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-13.c'
    sources:
      binary: declspec-13.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -pedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long' and 'short' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long long' and 'double' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long' and 'short' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long' and 'void' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long' and '_Bool' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long' and 'char' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long' and 'float' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long' and 'short' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'short' and 'void' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'short' and '_Bool' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'short' and 'char' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'short' and 'float' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'short' and 'double' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'signed' and 'unsigned' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'signed' and 'void' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'signed' and '_Bool' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'signed' and 'float' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'signed' and 'double' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'signed' and 'unsigned' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'unsigned' and 'void' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'unsigned' and '_Bool' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'unsigned' and 'float' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'unsigned' and 'double' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'complex' and 'void' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'complex' and '_Bool' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long' and 'void' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'short' and 'void' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'signed' and 'void' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'unsigned' and 'void' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'complex' and 'void' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long' and '_Bool' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'short' and '_Bool' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'signed' and '_Bool' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'unsigned' and '_Bool' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'complex' and '_Bool' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long' and 'char' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'short' and 'char' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long' and 'float' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'short' and 'float' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'signed' and 'float' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'unsigned' and 'float' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long long' and 'double' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'short' and 'double' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'signed' and 'double' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'unsigned' and 'double' in declaration specifiers))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support complex types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support complex types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C does not support plain 'complex' meaning 'double complex'" "ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support complex types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C does not support complex integer types" "ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support complex types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support complex types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support complex types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C does not support plain 'complex' meaning 'double complex'" "complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support complex types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C does not support plain 'complex' meaning 'double complex'" "complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support 'long long'" "C90))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-14_1169:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-14.c'
    sources:
      binary: declspec-14.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-15_1170:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-15.c'
    sources:
      binary: declspec-15.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(empty declaration))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-16_1171:
  build:
    cflags: ' -std=gnu89 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-16.c'
    sources:
      binary: declspec-16.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(empty declaration))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-17_1172:
  build:
    cflags: ' -std=gnu89 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-17.c'
    sources:
      binary: declspec-17.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty declaration))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-18_1173:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-18.c'
    sources:
      binary: declspec-18.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't1'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't2'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('z' redeclared " "redeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't3'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't4'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't1'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't5'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't6'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't7'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't8'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't9'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't1'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't10'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared" "undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't11'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't12'" "t12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared" "undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't13'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't14'" "t14))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't15'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't16'" "t16))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't17'" "t17))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't18'" "t18))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't19'" "t19))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't20'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't21'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't22'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't23'" "t23))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-1_1164:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-1.c'
    sources:
      binary: declspec-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'x0' isn't known" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'x1' isn't known))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'x4' isn't known" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'x5' isn't known))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(long long long))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-2_1174:
  build:
    cflags: ' -std=gnu89 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-2.c'
    sources:
      binary: declspec-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(long long))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-3-Wextra_1175:
  build:
    cflags: ' -Wextra -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-3-Wextra.c'
    sources:
      binary: declspec-3-Wextra.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wextra"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-3-no_1176:
  build:
    cflags: ' -Wextra -Wno-old-style-declaration -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-3-no.c'
    sources:
      binary: declspec-3-no.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wextra -Wno-old-style-declaration"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-3_1177:
  build:
    cflags: ' -Wold-style-declaration -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-3.c'
    sources:
      binary: declspec-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wold-style-declaration"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-4_1178:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-4.c'
    sources:
      binary: declspec-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(unnamed struct/union that defines no instances))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(useless storage class specifier in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(empty declaration" "static const))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(unnamed struct/union that defines no instances))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "char union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "double enum))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "T struct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-5_1179:
  build:
    cflags: ' -std=gnu89 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-5.c'
    sources:
      binary: declspec-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -pedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids forward references))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(unnamed struct/union that defines no instances))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(useless storage class specifier in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(empty declaration" "static const))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(unnamed struct/union that defines no instances))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "char union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "double enum))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "T struct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support complex types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C does not support plain 'complex' meaning 'double complex'" "ISO C))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-6_1180:
  build:
    cflags: ' -std=gnu89 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-6.c'
    sources:
      binary: declspec-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids forward references))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unnamed struct/union that defines no instances))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(useless type name in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(useless type name in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(useless type name in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty declaration" "static const))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unnamed struct/union that defines no instances))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(useless type name in empty declaration" "char union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(useless type name in empty declaration" "double enum))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(useless type name in empty declaration" "T struct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support complex types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C does not support plain 'complex' meaning 'double complex'" "ISO C))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(useless storage class specifier in empty declaration))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-7_1181:
  build:
    cflags: ' -fgnu89-inline -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-7.c'
    sources:
      binary: declspec-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgnu89-inline"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate 'static'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate 'extern'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate 'typedef'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate 'auto'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate 'register'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(multiple storage classes in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(multiple storage classes in declaration specifiers))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-8_1182:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-8.c'
    sources:
      binary: declspec-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate 'static'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(multiple storage classes in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('inline' in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('auto' in file-scope empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('register' in file-scope empty declaration))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(useless storage class specifier in empty declaration" "static static))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(useless storage class specifier in empty declaration" "static extern))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(useless storage class specifier in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(useless storage class specifier in empty declaration))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-9_1183:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-9.c'
    sources:
      binary: declspec-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function definition declared 'register'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function definition declared 'typedef'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(file-scope declaration of 'x' specifies 'auto'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(register name not specified for 'y'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested function 'x' declared 'extern'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'a' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'b' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'c' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'r' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'r1' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class for function 'f8'))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(function definition declared 'auto'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(cannot inline function 'main'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_delay-slot-1_1184:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/delay-slot-1.c'
    sources:
      binary: delay-slot-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -mabi=64" { target { mips*-*-linux* && mips64 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_delay-slot-2_1185:
  build:
    cflags: -g -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/delay-slot-2.c'
    sources:
      binary: delay-slot-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_deprecated-2_1186:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/deprecated-2.c'
    sources:
      binary: deprecated-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(type is deprecated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(type is deprecated))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_deprecated-3_1187:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/deprecated-3.c'
    sources:
      binary: deprecated-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*('func' is deprecated))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_deprecated-4_1188:
  build:
    cflags: ' -Wdeprecated-declarations -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/deprecated-4.c'
    sources:
      binary: deprecated-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wdeprecated-declarations"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*('INT1' is deprecated: Please avoid INT1" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*('INT1' is deprecated: Please avoid INT1" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*('INT1' is deprecated: Please avoid INT1" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*('INT2' is deprecated: Please avoid INT2" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*('INT2' is deprecated: Please avoid INT2" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*('INT2' is deprecated: Please avoid INT2" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*('Color' is deprecated: Please avoid Color" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*('INT1' is deprecated: Please avoid INT1" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*('f1' is deprecated: Please avoid f1" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*('x' is deprecated: Avoid x" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*('y' is deprecated: Bad y" "y))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*('g2' is deprecated: Please avoid g2" "g2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*('g3' is deprecated: Please avoid g3" "g3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*('f1' is deprecated: Please avoid f1" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*('field2' is deprecated: Please avoid field2" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*('field4' is deprecated: Please avoid field4" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*('u2' is deprecated: Please avoid u2" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*('field6' is deprecated: Please avoid field6" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*('field8' is deprecated: Please avoid field8" "field8))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*('INT1' is deprecated: Please avoid INT1" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*('SS1' is deprecated: Please avoid SS1" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*('INT1' is deprecated: Please avoid INT1" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*('SS2' is deprecated: Please avoid SS2" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_deprecated-5_1189:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/deprecated-5.c'
    sources:
      binary: deprecated-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(type is deprecated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(type is deprecated: Do not use))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_deprecated-6_1190:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/deprecated-6.c'
    sources:
      binary: deprecated-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*('func' is deprecated: Do not use))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_deprecated_1191:
  build:
    cflags: ' -Wdeprecated-declarations -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/deprecated.c'
    sources:
      binary: deprecated.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wdeprecated-declarations"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*('INT1' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*('INT1' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*('INT1' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*('INT2' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*('INT2' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*('INT2' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*('Color' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*('INT1' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*('f1' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*('x' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*('y' is deprecated" "y))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*('g2' is deprecated" "g2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*('g3' is deprecated" "g3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*('f1' is deprecated" "f1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*('field2' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*('field4' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*('u2' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*('field6' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: warning:[^
        ]*('field8' is deprecated" "field8))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*('INT1' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*('SS1' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*('INT1' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*('SS2' is deprecated" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dg-test-1_1192:
  build:
    cflags: ' -Wunused-parameter -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dg-test-1.c'
    sources:
      binary: dg-test-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wunused-parameter"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('a' undeclared" "err1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('b' undeclared" "err2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('c' undeclared" "err3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('d' undeclared" "err4))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(unused parameter 'e'" "warn1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(unused parameter 'f'" "warn2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(unused parameter 'g'" "warn3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(unused parameter 'h'" "warn4))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(unused parameter 'i'" "warn5))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(unused parameter 'j'" "warn6))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diag-aka-1_1193:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/diag-aka-1.c'
    sources:
      binary: diag-aka-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid application of .sizeof. to incomplete type .int \\(\\*\\\[\\\]\\)\\\[\\\].))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(request for implicit conversion from .void \\*. to .T \\* {aka struct T \\*}. not))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diagnostic-range-bad-called-object_1194:
  build:
    cflags: ' -fdiagnostics-show-caret -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/diagnostic-range-bad-called-object.c'
    sources:
      binary: diagnostic-range-bad-called-object.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(called object is not a function or function pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(called object 'argP' is not a function or function pointer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diagnostic-range-bad-return_1195:
  build:
    cflags: ' -fdiagnostics-show-caret -Wreturn-local-addr -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/diagnostic-range-bad-return.c'
    sources:
      binary: diagnostic-range-bad-return.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret -Wreturn-local-addr"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(function returns address of local variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*('return' with a value, in function returning void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*('return' with a value, in function returning void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*('return' with no value, in function returning non-void))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diagnostic-range-static-assert_1196:
  build:
    cflags: ' -fdiagnostics-show-caret -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/diagnostic-range-static-assert.c'
    sources:
      binary: diagnostic-range-static-assert.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expression in static assertion is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expression in static assertion is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expression in static assertion is not constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diagnostic-ranges-1_1197:
  build:
    cflags: ' -fdiagnostics-show-caret -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/diagnostic-ranges-1.c'
    sources:
      binary: diagnostic-ranges-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(unused variable))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diagnostic-token-ranges_1198:
  build:
    cflags: ' -fdiagnostics-show-caret -Wc++-compat -std=c11 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/diagnostic-token-ranges.c'
    sources:
      binary: diagnostic-token-ranges.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret -Wc++-compat -std=c11"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('name' undeclared .first use in this function.; did you mean .nanl.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 'foo'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 'qux'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C requires a named argument before '...'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 'unknown_type'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wide string literal in 'asm'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(break statement not within loop or switch))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(continue statement not within a loop))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('long long long' is too long for GCC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long' and 'short' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'signed' and 'unsigned' in declaration specifiers))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(identifier 'new' conflicts with))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diagnostic-tree-expr-ranges-2_1199:
  build:
    cflags: ' -Wuninitialized -fdiagnostics-show-caret -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/diagnostic-tree-expr-ranges-2.c'
    sources:
      binary: diagnostic-tree-expr-ranges-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -fdiagnostics-show-caret"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_div-compare-1_1200:
  build:
    cflags: ' -std=c99'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/div-compare-1.c'
    sources:
      binary: ./div-compare-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_div-double-1_1201:
  build:
    cflags: ' -O2 -ffinite-math-only'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/div-double-1.c'
    sources:
      binary: ./div-double-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffinite-math-only"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divbyzero_1202:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divbyzero.c'
    sources:
      binary: divbyzero.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divmod-1-simode_1203:
  build:
    cflags: ' -O2 -fdump-tree-widening_mul-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divmod-1-simode.c'
    sources:
      binary: divmod-1-simode.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divmod-1_1204:
  build:
    cflags: ' -O2 -fdump-tree-widening_mul-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divmod-1.c'
    sources:
      binary: divmod-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divmod-2-simode_1205:
  build:
    cflags: ' -O2 -fdump-tree-widening_mul-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divmod-2-simode.c'
    sources:
      binary: divmod-2-simode.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divmod-2_1206:
  build:
    cflags: ' -O2 -fdump-tree-widening_mul-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divmod-2.c'
    sources:
      binary: divmod-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divmod-3-simode_1207:
  build:
    cflags: ' -O2 -fdump-tree-widening_mul-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divmod-3-simode.c'
    sources:
      binary: divmod-3-simode.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divmod-3_1208:
  build:
    cflags: ' -O2 -fdump-tree-widening_mul-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divmod-3.c'
    sources:
      binary: divmod-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divmod-4-simode_1209:
  build:
    cflags: ' -O2 -fdump-tree-widening_mul-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divmod-4-simode.c'
    sources:
      binary: divmod-4-simode.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divmod-4_1210:
  build:
    cflags: ' -O2 -fdump-tree-widening_mul-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divmod-4.c'
    sources:
      binary: divmod-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divmod-5_1211:
  build:
    cflags: ' -O2 -fdump-tree-widening_mul-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divmod-5.c'
    sources:
      binary: divmod-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divmod-6-simode_1212:
  build:
    cflags: ' -O2 -fdump-tree-widening_mul-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divmod-6-simode.c'
    sources:
      binary: divmod-6-simode.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divmod-6_1213:
  build:
    cflags: ' -O2 -fdump-tree-widening_mul-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divmod-6.c'
    sources:
      binary: divmod-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divmod-7_1214:
  build:
    cflags: ' -O2 -fdump-tree-widening_mul-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divmod-7.c'
    sources:
      binary: divmod-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dll-10a_1215:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dll-10a.c'
    sources:
      binary: dll-10a.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dll-11a_1216:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dll-11a.c'
    sources:
      binary: dll-11a.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dll-12a_1217:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dll-12a.c'
    sources:
      binary: dll-12a.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dll-6a_1218:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dll-6a.c'
    sources:
      binary: dll-6a.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dll-7a_1219:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dll-7a.c'
    sources:
      binary: dll-7a.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dll-9a_1220:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dll-9a.c'
    sources:
      binary: dll-9a.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_do-empty_1221:
  build:
    cflags: ' -Wempty-body -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/do-empty.c'
    sources:
      binary: do-empty.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wempty-body"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(empty body in))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dollar_1222:
  build:
    cflags: ' -fno-dollars-in-identifiers -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dollar.c'
    sources:
      binary: dollar.s
  group: GRPSERIAL
  info:
    extraopts:
      - -fno-dollars-in-identifiers
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(11:stray '\\$'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_doloop-2_1223:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/doloop-2.c'
    sources:
      binary: ./doloop-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dremf-type-compat-1_1224:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dremf-type-compat-1.c'
    sources:
      binary: dremf-type-compat-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dremf-type-compat-2_1225:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dremf-type-compat-2.c'
    sources:
      binary: dremf-type-compat-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(prototype declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(promoted argument 'x' doesn't match prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(promoted argument 'y' doesn't match prototype))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dremf-type-compat-3_1226:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dremf-type-compat-3.c'
    sources:
      binary: dremf-type-compat-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(promoted argument 'x' doesn't match prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(promoted argument 'y' doesn't match prototype))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dremf-type-compat-4_1227:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dremf-type-compat-4.c'
    sources:
      binary: dremf-type-compat-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(conflicting types for built-in function 'dremf'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dse_1228:
  build:
    cflags: ' -O2 -fdump-tree-dse1-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dse.c'
    sources:
      binary: dse.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-dse1-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_duff-1_1229:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/duff-1.c'
    sources:
      binary: ./duff-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_duff-2_1230:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/duff-2.c'
    sources:
      binary: ./duff-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_duff-3_1231:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/duff-3.c'
    sources:
      binary: ./duff-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_duff-4_1232:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/duff-4.c'
    sources:
      binary: ./duff-4.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dump-pass_1233:
  build:
    cflags: ' -O2 -fdump-passes -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dump-pass.c'
    sources:
      binary: dump-pass.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-passes"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dx-test_1234:
  build:
    cflags: ' -dx -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dx-test.c'
    sources:
      binary: dx-test.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-dx"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_empty-source-1_1235:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/empty-source-1.c'
    sources:
      binary: empty-source-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_empty-source-2_1236:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/empty-source-2.c'
    sources:
      binary: empty-source-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids an empty translation unit" "empty))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_empty-source-3_1237:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/empty-source-3.c'
    sources:
      binary: empty-source-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids an empty translation unit" "empty))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_empty1_1238:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/empty1.c'
    sources:
      binary: ./empty1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_empty2_1239:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/empty2.c'
    sources:
      binary: empty2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(struct has no members))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum-compat-1_1240:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum-compat-1.c'
    sources:
      binary: enum-compat-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype" "error at decl))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(doesn't match prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types" "error at second decl))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible" "incompatible pointer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum-const-1_1241:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum-const-1.c'
    sources:
      binary: enum-const-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum-const-2_1242:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum-const-2.c'
    sources:
      binary: enum-const-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(not an integer constant expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum-const-3_1243:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum-const-3.c'
    sources:
      binary: enum-const-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not an integer constant expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum-incomplete-1_1244:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum-incomplete-1.c'
    sources:
      binary: enum-incomplete-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum-incomplete-2_1245:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum-incomplete-2.c'
    sources:
      binary: enum-incomplete-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum-incomplete-3_1246:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum-incomplete-3.c'
    sources:
      binary: enum-incomplete-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(size of unnamed array has incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(size of unnamed array has incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(size of array .a1. has incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(size of array .a2. has incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(size of array .a3. has incomplete type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum-incomplete-4_1247:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum-incomplete-4.c'
    sources:
      binary: enum-incomplete-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum-mode-1_1248:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum-mode-1.c'
    sources:
      binary: enum-mode-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(specified mode too small for enumeral values))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(specified mode too small for enumeral values))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(specified mode too small for enumeral values))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(specified mode too small for enumeral values))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(specified mode too small for enumeral values" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(specified mode too small for enumeral values" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum-mode-2_1249:
  build:
    cflags: ' -ansi -pedantic-errors -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum-mode-2.c'
    sources:
      binary: enum-mode-2.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum1_1250:
  build:
    cflags: ' -std=gnu89'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum1.c'
    sources:
      binary: ./enum1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum2_1251:
  build:
    cflags: ' -fshort-enums -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum2.c'
    sources:
      binary: enum2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fshort-enums"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum3_1252:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum3.c'
    sources:
      binary: enum3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumerator value for 'E1' is not an integer constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_errno-1_1253:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/errno-1.c'
    sources:
      binary: errno-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-elim-1_1254:
  build:
    cflags: ' -O -free -fno-rename-registers -ftree-vectorize -funroll-loops'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ext-elim-1.c'
    sources:
      binary: ./ext-elim-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -free -fno-rename-registers -ftree-vectorize -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_extra-semi-1_1255:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/extra-semi-1.c'
    sources:
      binary: extra-semi-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_extra-semi-2_1256:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/extra-semi-2.c'
    sources:
      binary: extra-semi-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C does not allow extra ';' outside of a function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_extra-semi-3_1257:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/extra-semi-3.c'
    sources:
      binary: extra-semi-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C does not allow extra ';' outside of a function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fail_always_inline2_1259:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fail_always_inline2.c'
    sources:
      binary: fail_always_inline2.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fail_always_inline_1258:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fail_always_inline.c'
    sources:
      binary: fail_always_inline.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(function might not be inlinable))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_falign-labels-1_1260:
  build:
    cflags: ' -falign-labels=8'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/falign-labels-1.c'
    sources:
      binary: ./falign-labels-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-falign-labels=8"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fastmath-1_1261:
  build:
    cflags: ' -O2 -ffast-math'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fastmath-1.c'
    sources:
      binary: ./fastmath-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fdata-sections-1_1262:
  build:
    cflags: -fdata-sections -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fdata-sections-1.c'
    sources:
      binary: fdata-sections-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdata-sections"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fdata-sections-2_1263:
  build:
    cflags: -O -ffunction-sections -fdata-sections -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fdata-sections-2.c'
    sources:
      binary: fdata-sections-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ffunction-sections -fdata-sections"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fixits_1264:
  build:
    cflags: ' -fdiagnostics-show-caret -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fixits.c'
    sources:
      binary: fixits.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('ptr' is a pointer; did you mean to use '->'?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('ptr' is a pointer; did you mean to use '->'?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(request for member 'x' in something not a structure or union))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fixuns-trunc-1_1265:
  build:
    cflags: ' -std=c99'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fixuns-trunc-1.c'
    sources:
      binary: ./fixuns-trunc-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float-exact-1_1266:
  build:
    cflags: ' -w'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float-exact-1.c'
    sources:
      binary: ./float-exact-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float-range-1_1267:
  build:
    cflags: ' -ansi -pedantic-errors -Woverflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float-range-1.c'
    sources:
      binary: float-range-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ansi -pedantic-errors -Woverflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant exceeds range of 'float'" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant exceeds range of 'double'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant exceeds range of 'long double'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float-range-3_1268:
  build:
    cflags: ' -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float-range-3.c'
    sources:
      binary: float-range-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant exceeds range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant exceeds range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant exceeds range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant exceeds range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float-range-4_1269:
  build:
    cflags: ' -Wno-overflow -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float-range-4.c'
    sources:
      binary: float-range-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wno-overflow -std=c99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float-range-5_1270:
  build:
    cflags: ' -pedantic-errors -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float-range-5.c'
    sources:
      binary: float-range-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors -std=c99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant exceeds range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant exceeds range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant exceeds range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant exceeds range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float128-align_1271:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float128-align.c'
    sources:
      binary: float128-align.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float128-typeof_1272:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float128-typeof.c'
    sources:
      binary: float128-typeof.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float128x-align_1273:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float128x-align.c'
    sources:
      binary: float128x-align.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float128x-typeof_1274:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float128x-typeof.c'
    sources:
      binary: float128x-typeof.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float16-align_1275:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float16-align.c'
    sources:
      binary: float16-align.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float16-typeof_1276:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float16-typeof.c'
    sources:
      binary: float16-typeof.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float32-align_1277:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float32-align.c'
    sources:
      binary: float32-align.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float32-typeof_1278:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float32-typeof.c'
    sources:
      binary: float32-typeof.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float32x-align_1279:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float32x-align.c'
    sources:
      binary: float32x-align.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float32x-typeof_1280:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float32x-typeof.c'
    sources:
      binary: float32x-typeof.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float64-align_1281:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float64-align.c'
    sources:
      binary: float64-align.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float64-typeof_1282:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float64-typeof.c'
    sources:
      binary: float64-typeof.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float64x-align_1283:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float64x-align.c'
    sources:
      binary: float64x-align.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float64x-typeof_1284:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float64x-typeof.c'
    sources:
      binary: float64x-typeof.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_floatn-arithconv_1285:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/floatn-arithconv.c'
    sources:
      binary: floatn-arithconv.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_floatn-errs_1286:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/floatn-errs.c'
    sources:
      binary: floatn-errs.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(match prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(match prototype))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fltconst-1_1287:
  build:
    cflags: ' -std=gnu99 -fshow-column -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fltconst-1.c'
    sources:
      binary: fltconst-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fshow-column"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:invalid suffix))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fltconst-2_1288:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fltconst-2.c'
    sources:
      binary: fltconst-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fltconst-double-pedantic-1_1289:
  build:
    cflags: ' -std=c99 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fltconst-double-pedantic-1.c'
    sources:
      binary: fltconst-double-pedantic-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(double constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(double constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(double constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(imaginary constants))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(imaginary constants))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(imaginary constants))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(imaginary constants))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(double constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fltconst-double-pedantic-2_1290:
  build:
    cflags: ' -std=c99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fltconst-double-pedantic-2.c'
    sources:
      binary: fltconst-double-pedantic-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(double constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(double constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(double constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary constants))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary constants))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary constants))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary constants))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(double constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fltconst-pedantic-dfp_1291:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fltconst-pedantic-dfp.c'
    sources:
      binary: fltconst-pedantic-dfp.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(decimal float))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fnegate-1_1292:
  build:
    cflags: ' -O2 -ffast-math'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fnegate-1.c'
    sources:
      binary: ./fnegate-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-abs-1_1293:
  build:
    cflags: ' -O1 -fwrapv -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-abs-1.c'
    sources:
      binary: fold-abs-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fwrapv"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-abs-2_1294:
  build:
    cflags: ' -O1 -fwrapv'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-abs-2.c'
    sources:
      binary: ./fold-abs-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fwrapv"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-abs-3_1295:
  build:
    cflags: ' -fdump-tree-gimple -fwrapv -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-abs-3.c'
    sources:
      binary: fold-abs-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple -fwrapv"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-abs-4_1296:
  build:
    cflags: ' -fdump-tree-gimple -fwrapv -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-abs-4.c'
    sources:
      binary: fold-abs-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple -fwrapv"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-abs-5_1297:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-abs-5.c'
    sources:
      binary: fold-abs-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-addr-1_1298:
  build:
    cflags: ' -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-addr-1.c'
    sources:
      binary: fold-addr-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-alloca-1_1299:
  build:
    cflags: ' -fdump-tree-cfg -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-alloca-1.c'
    sources:
      binary: fold-alloca-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-cfg"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-and-1_1300:
  build:
    cflags: ' -O -fdump-tree-cddce1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-and-1.c'
    sources:
      binary: fold-and-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-and-2_1301:
  build:
    cflags: ' -O -fdump-tree-cddce1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-and-2.c'
    sources:
      binary: fold-and-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-and-lshift_1302:
  build:
    cflags: -O -fdump-tree-original -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-and-lshift.c'
    sources:
      binary: fold-and-lshift.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-and-rshift-1_1303:
  build:
    cflags: -O -fdump-tree-original -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-and-rshift-1.c'
    sources:
      binary: fold-and-rshift-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-and-rshift-2_1304:
  build:
    cflags: -O -fdump-tree-original -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-and-rshift-2.c'
    sources:
      binary: fold-and-rshift-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-andxor-1_1305:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-andxor-1.c'
    sources:
      binary: fold-andxor-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-bitand-1_1306:
  build:
    cflags: ' -w -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-bitand-1.c'
    sources:
      binary: fold-bitand-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-bitand-2_1307:
  build:
    cflags: ' -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-bitand-2.c'
    sources:
      binary: fold-bitand-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-bitand-3_1308:
  build:
    cflags: ' -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-bitand-3.c'
    sources:
      binary: fold-bitand-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-bitand-4_1309:
  build:
    cflags: ' -O -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-bitand-4.c'
    sources:
      binary: fold-bitand-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-bopcond-1_1310:
  build:
    cflags: ' -O3 -fdump-tree-ifcvt -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-bopcond-1.c'
    sources:
      binary: fold-bopcond-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-tree-ifcvt"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-bopcond-2_1311:
  build:
    cflags: ' -O3 -fdump-tree-ifcvt -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-bopcond-2.c'
    sources:
      binary: fold-bopcond-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-tree-ifcvt"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-compare-1_1312:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-compare-1.c'
    sources:
      binary: fold-compare-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-compare-2_1313:
  build:
    cflags: ' -O2 -fdump-tree-fre1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-compare-2.c'
    sources:
      binary: fold-compare-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-fre1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-compare-3_1314:
  build:
    cflags: ' -O2 -fdump-tree-cfg -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-compare-3.c'
    sources:
      binary: fold-compare-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-cfg"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-compare-4_1315:
  build:
    cflags: ' -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-compare-4.c'
    sources:
      binary: fold-compare-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-compare-5_1316:
  build:
    cflags: ' -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-compare-5.c'
    sources:
      binary: fold-compare-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-compare-6_1317:
  build:
    cflags: ' -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-compare-6.c'
    sources:
      binary: fold-compare-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-compare-7_1318:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-compare-7.c'
    sources:
      binary: fold-compare-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-compare-8_1319:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-compare-8.c'
    sources:
      binary: fold-compare-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-complex-1_1320:
  build:
    cflags: ' -O -ffast-math -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-complex-1.c'
    sources:
      binary: fold-complex-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ffast-math -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-cond-1_1321:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-cond-1.c'
    sources:
      binary: fold-cond-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-cond_expr-1_1322:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-cond_expr-1.c'
    sources:
      binary: fold-cond_expr-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-condcmpconv-1_1323:
  build:
    cflags: ' -O3 -fdump-tree-ifcvt -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-condcmpconv-1.c'
    sources:
      binary: fold-condcmpconv-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-tree-ifcvt"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-condcmpconv-2_1324:
  build:
    cflags: ' -O3 -fdump-tree-ifcvt -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-condcmpconv-2.c'
    sources:
      binary: fold-condcmpconv-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-tree-ifcvt"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-convmaxconv-1_1325:
  build:
    cflags: ' -O -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-convmaxconv-1.c'
    sources:
      binary: fold-convmaxconv-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-convminconv-1_1326:
  build:
    cflags: ' -O -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-convminconv-1.c'
    sources:
      binary: fold-convminconv-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-convnotconv-1_1327:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-convnotconv-1.c'
    sources:
      binary: fold-convnotconv-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-convround-1_1328:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-convround-1.c'
    sources:
      binary: fold-convround-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-copysign-1_1329:
  build:
    cflags: ' -O -fdump-tree-cddce1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-copysign-1.c'
    sources:
      binary: fold-copysign-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-cstring_1330:
  build:
    cflags: ' -O'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-cstring.c'
    sources:
      binary: ./fold-cstring.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-cstvecshift_1331:
  build:
    cflags: ' -O -fdump-tree-ccp1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-cstvecshift.c'
    sources:
      binary: fold-cstvecshift.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-ccp1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-cvect_1332:
  build:
    cflags: ' -O'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-cvect.c'
    sources:
      binary: ./fold-cvect.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-div-1_1333:
  build:
    cflags: ' -funsafe-math-optimizations -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-div-1.c'
    sources:
      binary: fold-div-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-funsafe-math-optimizations -fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-div-2_1334:
  build:
    cflags: ' -ffinite-math-only -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-div-2.c'
    sources:
      binary: fold-div-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ffinite-math-only -fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-div-3_1335:
  build:
    cflags: ' -O -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-div-3.c'
    sources:
      binary: fold-div-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-eqand-1_1336:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-eqand-1.c'
    sources:
      binary: fold-eqand-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-eqandnot-1_1337:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-eqandnot-1.c'
    sources:
      binary: fold-eqandnot-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-eqandshift-1_1338:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-eqandshift-1.c'
    sources:
      binary: fold-eqandshift-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-eqandshift-2_1339:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-eqandshift-2.c'
    sources:
      binary: fold-eqandshift-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-eqandshift-3_1340:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-eqandshift-3.c'
    sources:
      binary: fold-eqandshift-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-eqcmplx-1_1341:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-eqcmplx-1.c'
    sources:
      binary: fold-eqcmplx-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-eqxor-1_1342:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-eqxor-1.c'
    sources:
      binary: fold-eqxor-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-eqxor-2_1343:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-eqxor-2.c'
    sources:
      binary: fold-eqxor-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-eqxor-3_1344:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-eqxor-3.c'
    sources:
      binary: fold-eqxor-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-eqxor-4_1345:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-eqxor-4.c'
    sources:
      binary: fold-eqxor-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-even-1_1346:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-even-1.c'
    sources:
      binary: fold-even-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-ior-1_1347:
  build:
    cflags: ' -O -fdump-tree-cddce1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-ior-1.c'
    sources:
      binary: fold-ior-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-ior-2_1348:
  build:
    cflags: ' -O -fdump-tree-cddce1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-ior-2.c'
    sources:
      binary: fold-ior-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-ior-3_1349:
  build:
    cflags: ' -O -fdump-tree-cddce1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-ior-3.c'
    sources:
      binary: fold-ior-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-minus-1_1350:
  build:
    cflags: ' -O -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-minus-1.c'
    sources:
      binary: fold-minus-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-minus-2_1351:
  build:
    cflags: ' -O -fdump-tree-cddce1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-minus-2.c'
    sources:
      binary: fold-minus-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-minus-3_1352:
  build:
    cflags: ' -O -fdump-tree-cddce1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-minus-3.c'
    sources:
      binary: fold-minus-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-minus-4_1353:
  build:
    cflags: ' -O -fdump-tree-cddce1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-minus-4.c'
    sources:
      binary: fold-minus-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-minus-5_1354:
  build:
    cflags: ' -O -fdump-tree-cddce1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-minus-5.c'
    sources:
      binary: fold-minus-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-minus-6_1355:
  build:
    cflags: ' -O -fdump-tree-cddce1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-minus-6.c'
    sources:
      binary: fold-minus-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-minus-7_1356:
  build:
    cflags: ' -O -fdump-tree-cddce1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-minus-7.c'
    sources:
      binary: fold-minus-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-mod-1_1357:
  build:
    cflags: ' -fdump-tree-gimple -fstrict-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-mod-1.c'
    sources:
      binary: fold-mod-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple -fstrict-overflow"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-modpow2_1358:
  build:
    cflags: ' -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-modpow2.c'
    sources:
      binary: fold-modpow2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-mulconj-1_1359:
  build:
    cflags: ' -O2 -ffast-math -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-mulconj-1.c'
    sources:
      binary: fold-mulconj-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math -fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-narrowbopcst-1_1360:
  build:
    cflags: ' -O1 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-narrowbopcst-1.c'
    sources:
      binary: fold-narrowbopcst-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-nonneg-1_1361:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-nonneg-1.c'
    sources:
      binary: fold-nonneg-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decimal points))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-notrotate-1_1362:
  build:
    cflags: ' -O -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-notrotate-1.c'
    sources:
      binary: fold-notrotate-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-notshift-1_1363:
  build:
    cflags: ' -O -fdump-tree-cddce1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-notshift-1.c'
    sources:
      binary: fold-notshift-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-notshift-2_1364:
  build:
    cflags: ' -O -fdump-tree-cddce1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-notshift-2.c'
    sources:
      binary: fold-notshift-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-notunord_1365:
  build:
    cflags: ' -O -ftrapping-math -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-notunord.c'
    sources:
      binary: fold-notunord.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ftrapping-math -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-overflow-1_1366:
  build:
    cflags: -O -ftrapping-math -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-overflow-1.c'
    sources:
      binary: fold-overflow-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ftrapping-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-perm_1367:
  build:
    cflags: ' -O -fdump-tree-fre1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-perm.c'
    sources:
      binary: fold-perm.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-fre1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-plus-1_1368:
  build:
    cflags: ' -O -fdump-tree-cddce1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-plus-1.c'
    sources:
      binary: fold-plus-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-plus-2_1369:
  build:
    cflags: ' -O -fdump-tree-cddce1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-plus-2.c'
    sources:
      binary: fold-plus-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-plusmult-2_1370:
  build:
    cflags: ' -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-plusmult-2.c'
    sources:
      binary: fold-plusmult-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-plusmult_1371:
  build:
    cflags: ' -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-plusmult.c'
    sources:
      binary: fold-plusmult.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-plusnot-1_1372:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-plusnot-1.c'
    sources:
      binary: fold-plusnot-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-reassoc-1_1373:
  build:
    cflags: ' -O -ffast-math -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-reassoc-1.c'
    sources:
      binary: fold-reassoc-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ffast-math -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-reassoc-2_1374:
  build:
    cflags: ' -O -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-reassoc-2.c'
    sources:
      binary: fold-reassoc-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-reassoc-3_1375:
  build:
    cflags: ' -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-reassoc-3.c'
    sources:
      binary: fold-reassoc-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-rotate-1_1376:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-rotate-1.c'
    sources:
      binary: fold-rotate-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-sub_1377:
  build:
    cflags: ' -ffinite-math-only -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-sub.c'
    sources:
      binary: fold-sub.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ffinite-math-only -fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-xor-1_1378:
  build:
    cflags: ' -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-xor-1.c'
    sources:
      binary: fold-xor-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-xor-2_1379:
  build:
    cflags: ' -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-xor-2.c'
    sources:
      binary: fold-xor-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-xor-3_1380:
  build:
    cflags: ' -O -fdump-tree-cddce1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-xor-3.c'
    sources:
      binary: fold-xor-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-xor-4_1381:
  build:
    cflags: ' -O -fdump-tree-cddce1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-xor-4.c'
    sources:
      binary: fold-xor-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-xor-5_1382:
  build:
    cflags: ' -O -fdump-tree-cddce1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-xor-5.c'
    sources:
      binary: fold-xor-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-xorand-1_1383:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-xorand-1.c'
    sources:
      binary: fold-xorand-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-xornot-1_1384:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-xornot-1.c'
    sources:
      binary: fold-xornot-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_for-1_1385:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/for-1.c'
    sources:
      binary: for-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(at end of input" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fpermitted-flt-eval-methods_1_1386:
  build:
    cflags: ' -std=c11'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fpermitted-flt-eval-methods_1.c'
    sources:
      binary: ./fpermitted-flt-eval-methods_1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fpermitted-flt-eval-methods_2_1387:
  build:
    cflags: ' -fpermitted-flt-eval-methods=c11'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fpermitted-flt-eval-methods_2.c'
    sources:
      binary: ./fpermitted-flt-eval-methods_2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fpermitted-flt-eval-methods=c11"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fpermitted-flt-eval-methods_3_1388:
  build:
    cflags: ' -std=c11'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fpermitted-flt-eval-methods_3.c'
    sources:
      binary: ./fpermitted-flt-eval-methods_3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fpermitted-flt-eval-methods_4_1389:
  build:
    cflags: ' -std=c11'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fpermitted-flt-eval-methods_4.c'
    sources:
      binary: ./fpermitted-flt-eval-methods_4.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_free-1_1390:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/free-1.c'
    sources:
      binary: free-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_free-2_1391:
  build:
    cflags: ' -O0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/free-2.c'
    sources:
      binary: free-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fshort-wchar_1392:
  build:
    cflags: ' -fshort-wchar -Wl,--no-wchar-size-warning'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fshort-wchar.c'
    sources:
      binary: ./fshort-wchar.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fshort-wchar"'
      - '"-fshort-wchar -Wl,--no-wchar-size-warning" { target arm_eabi }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fstack-protector-strong_1393:
  build:
    cflags: -O2 -fstack-protector-strong -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fstack-protector-strong.c'
    sources:
      binary: fstack-protector-strong.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fstack-protector-strong"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 105 bytes into a region of size 100))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ftrapv-1_1394:
  build:
    cflags: ' -ftrapv'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ftrapv-1.c'
    sources:
      binary: ./ftrapv-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ftrapv"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ftrapv-2_1395:
  build:
    cflags: ' -ftrapv'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ftrapv-2.c'
    sources:
      binary: ./ftrapv-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ftrapv"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ftrapv-3_1396:
  build:
    cflags: ' -ftrapv'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ftrapv-3.c'
    sources:
      binary: ./ftrapv-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ftrapv"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_func-args-1_1397:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/func-args-1.c'
    sources:
      binary: func-args-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments to function 'f0'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments to function 'x.f0'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments to function 'f0'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments to function 'x.f0'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments to function 'f1'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments to function 'x.f1'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments to function 'f1'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments to function 'x.f1'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments to function 'f1v'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments to function 'x.f1v'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments to function 'f2'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments to function 'x.f2'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments to function 'f2'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments to function 'x.f2'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments to function 'f2v'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments to function 'x.f2v'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_func-args-2_1398:
  build:
    cflags: ' -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/func-args-2.c'
    sources:
      binary: func-args-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_func-outside-1_1399:
  build:
    cflags: ' -fshow-column -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/func-outside-1.c'
    sources:
      binary: func-outside-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fshow-column"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(17:'__func__' is not defined outside of function scope" "undef))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_func-outside-2_1400:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/func-outside-2.c'
    sources:
      binary: func-outside-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('__func__' is not defined outside of function scope" "undef))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_func-ptr-conv-1_1401:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/func-ptr-conv-1.c'
    sources:
      binary: func-ptr-conv-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(12:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(12:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(12:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(12:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(12:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(12:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(12:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(12:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(6:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(6:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(8:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(8:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(6:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(6:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(8:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(8:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(6:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(6:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(8:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(8:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(10:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(11:pointer" "bad conversion))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_funcdef-attr-1_1402:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/funcdef-attr-1.c'
    sources:
      binary: funcdef-attr-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_funcdef-storage-1_1403:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/funcdef-storage-1.c'
    sources:
      binary: funcdef-storage-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_funcdef-var-1_1404:
  build:
    cflags: ' -Wmissing-prototypes -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/funcdef-var-1.c'
    sources:
      binary: funcdef-var-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-prototypes"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redeclared as different kind of symbol))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(no previous prototype" "no previous prototype))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_funcdef-var-2_1405:
  build:
    cflags: ' -Wmissing-prototypes -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/funcdef-var-2.c'
    sources:
      binary: funcdef-var-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-prototypes"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redeclared as different kind of symbol))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(no previous prototype" "no previous prototype))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_funcorder_1406:
  build:
    cflags: -O2 -funit-at-a-time -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/funcorder.c'
    sources:
      binary: funcorder.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funit-at-a-time"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_funroll-loops-all_1407:
  build:
    cflags: ' -funroll-loops-all -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/funroll-loops-all.c'
    sources:
      binary: funroll-loops-all.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-funroll-loops-all"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option '-funroll-loops-all'" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fuse-caller-save_1408:
  build:
    cflags: ' -fipa-ra'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fuse-caller-save.c'
    sources:
      binary: ./fuse-caller-save.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fipa-ra"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fwrapv-1_1409:
  build:
    cflags: ' -O2 -fwrapv'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fwrapv-1.c'
    sources:
      binary: ./fwrapv-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fwrapv"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fwrapv-2_1410:
  build:
    cflags: ' -O2 -fno-wrapv'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fwrapv-2.c'
    sources:
      binary: ./fwrapv-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-wrapv"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc-have-sync-compare-and-swap_1411:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gcc-have-sync-compare-and-swap.c'
    sources:
      binary: gcc-have-sync-compare-and-swap.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-10_1413:
  build:
    cflags: ' -fgimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-10.c'
    sources:
      binary: gimplefe-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-11_1414:
  build:
    cflags: ' -fgimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-11.c'
    sources:
      binary: gimplefe-11.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-12_1415:
  build:
    cflags: ' -O -fgimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-12.c'
    sources:
      binary: gimplefe-12.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fgimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-13_1416:
  build:
    cflags: ' -O -fgimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-13.c'
    sources:
      binary: gimplefe-13.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fgimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-14_1417:
  build:
    cflags: ' -O -fgimple'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-14.c'
    sources:
      binary: ./gimplefe-14.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fgimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-15_1418:
  build:
    cflags: ' -O -fgimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-15.c'
    sources:
      binary: gimplefe-15.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fgimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-16_1419:
  build:
    cflags: ' -O -fgimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-16.c'
    sources:
      binary: gimplefe-16.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fgimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-17_1420:
  build:
    cflags: ' -fgimple -fdump-tree-ssa -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-17.c'
    sources:
      binary: gimplefe-17.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgimple -fdump-tree-ssa"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-18_1421:
  build:
    cflags: ' -fgimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-18.c'
    sources:
      binary: gimplefe-18.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-19_1422:
  build:
    cflags: ' -fgimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-19.c'
    sources:
      binary: gimplefe-19.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-1_1412:
  build:
    cflags: ' -fgimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-1.c'
    sources:
      binary: gimplefe-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-20_1424:
  build:
    cflags: ' -O -fgimple -fdump-tree-ssa-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-20.c'
    sources:
      binary: gimplefe-20.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fgimple -fdump-tree-ssa-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-21_1425:
  build:
    cflags: ' -fgimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-21.c'
    sources:
      binary: gimplefe-21.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-22_1426:
  build:
    cflags: ' -fgimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-22.c'
    sources:
      binary: gimplefe-22.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-23_1427:
  build:
    cflags: ' -fgimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-23.c'
    sources:
      binary: gimplefe-23.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-24_1428:
  build:
    cflags: ' -fgimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-24.c'
    sources:
      binary: gimplefe-24.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-25_1429:
  build:
    cflags: ' -O -fgimple -fdump-tree-ssa-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-25.c'
    sources:
      binary: gimplefe-25.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fgimple -fdump-tree-ssa-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-26_1430:
  build:
    cflags: ' -O -fgimple -fdump-tree-ssa-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-26.c'
    sources:
      binary: gimplefe-26.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fgimple -fdump-tree-ssa-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-2_1423:
  build:
    cflags: ' -fgimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-2.c'
    sources:
      binary: gimplefe-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-3_1431:
  build:
    cflags: ' -fgimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-3.c'
    sources:
      binary: gimplefe-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-4_1432:
  build:
    cflags: ' -fgimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-4.c'
    sources:
      binary: gimplefe-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-5_1433:
  build:
    cflags: ' -fgimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-5.c'
    sources:
      binary: gimplefe-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-6_1434:
  build:
    cflags: ' -fgimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-6.c'
    sources:
      binary: gimplefe-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-7_1435:
  build:
    cflags: ' -fgimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-7.c'
    sources:
      binary: gimplefe-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-8_1436:
  build:
    cflags: ' -fgimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-8.c'
    sources:
      binary: gimplefe-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-9_1437:
  build:
    cflags: ' -fgimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-9.c'
    sources:
      binary: gimplefe-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-error-1_1438:
  build:
    cflags: ' -fgimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-error-1.c'
    sources:
      binary: gimplefe-error-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-error-2_1439:
  build:
    cflags: ' -fgimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-error-2.c'
    sources:
      binary: gimplefe-error-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-error-3_1440:
  build:
    cflags: ' -fgimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-error-3.c'
    sources:
      binary: gimplefe-error-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_globalalias-2_1441:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/globalalias-2.c'
    sources:
      binary: globalalias-2.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_globalalias_1442:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/globalalias.c'
    sources:
      binary: ./globalalias.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu-cond-expr-1_1443:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu-cond-expr-1.c'
    sources:
      binary: gnu-cond-expr-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu-cond-expr-2_1444:
  build:
    cflags: ' -std=gnu99 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu-cond-expr-2.c'
    sources:
      binary: gnu-cond-expr-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids omitting the middle term of a \\?: expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu-cond-expr-3_1445:
  build:
    cflags: ' -std=gnu99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu-cond-expr-3.c'
    sources:
      binary: gnu-cond-expr-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids omitting the middle term of a \\?: expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu-predef-1_1446:
  build:
    cflags: ' -std=gnu11 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu-predef-1.c'
    sources:
      binary: gnu-predef-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*( ISO C does not support .__FUNCTION__. predefined identifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*( ISO C does not support .__PRETTY_FUNCTION__. predefined identifier))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu11-version-1_1447:
  build:
    cflags: ' -std=gnu11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu11-version-1.c'
    sources:
      binary: gnu11-version-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu89-const-expr-1_1448:
  build:
    cflags: ' -std=gnu89 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu89-const-expr-1.c'
    sources:
      binary: gnu89-const-expr-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 forbids variable length array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids braced-groups" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 forbids variable length array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids omitting" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids omitting))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex" "complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "imaginary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(braced" "ISO))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu89-const-expr-2_1449:
  build:
    cflags: ' -std=gnu89 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu89-const-expr-2.c'
    sources:
      binary: gnu89-const-expr-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not a constant" "error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu89-dupqual-1_1450:
  build:
    cflags: ' -std=gnu89 -Werror -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu89-dupqual-1.c'
    sources:
      binary: gnu89-dupqual-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -Werror"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu89-init-1_1451:
  build:
    cflags: ' -std=gnu89'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu89-init-1.c'
    sources:
      binary: ./gnu89-init-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu89-init-2_1452:
  build:
    cflags: -std=gnu89 -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu89-init-2.c'
    sources:
      binary: gnu89-init-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu89-init-3_1453:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu89-init-3.c'
    sources:
      binary: gnu89-init-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu89-init-4_1454:
  build:
    cflags: ' -std=gnu89 -W -Wall -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu89-init-4.c'
    sources:
      binary: gnu89-init-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -W -Wall -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu90-const-expr-1_1455:
  build:
    cflags: ' -std=gnu90 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu90-const-expr-1.c'
    sources:
      binary: gnu90-const-expr-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu90 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 forbids variable length array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids braced-groups" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 forbids variable length array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids omitting" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids omitting))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex" "complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "imaginary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(braced" "ISO))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu99-const-expr-1_1456:
  build:
    cflags: ' -std=gnu99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu99-const-expr-1.c'
    sources:
      binary: gnu99-const-expr-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids braced-groups" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids omitting" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids omitting))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex" "complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "imaginary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(braced" "ISO))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu99-const-expr-2_1457:
  build:
    cflags: ' -std=gnu99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu99-const-expr-2.c'
    sources:
      binary: gnu99-const-expr-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not a constant" "error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu99-const-expr-3_1458:
  build:
    cflags: ' -std=gnu99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu99-const-expr-3.c'
    sources:
      binary: gnu99-const-expr-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu99-const-expr-4_1459:
  build:
    cflags: ' -std=gnu99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu99-const-expr-4.c'
    sources:
      binary: gnu99-const-expr-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu99-init-1_1460:
  build:
    cflags: ' -std=gnu99'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu99-init-1.c'
    sources:
      binary: ./gnu99-init-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu99-init-2_1461:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu99-init-2.c'
    sources:
      binary: gnu99-init-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(integer type|near init" "pointer designator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(integer type|near init" "pointer designator))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu99-static-1_1462:
  build:
    cflags: ' -O2 -std=gnu99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu99-static-1.c'
    sources:
      binary: gnu99-static-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used but never defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used but never defined))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_h8300-bit-insn-ice2_1464:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/h8300-bit-insn-ice2.c'
    sources:
      binary: h8300-bit-insn-ice2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_h8300-bit-insn-ice_1463:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/h8300-bit-insn-ice.c'
    sources:
      binary: h8300-bit-insn-ice.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_h8300-div-delay-slot_1465:
  build:
    cflags: -Os -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/h8300-div-delay-slot.c'
    sources:
      binary: h8300-div-delay-slot.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_h8300-ice2_1466:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/h8300-ice2.c'
    sources:
      binary: h8300-ice2.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_header_1467:
  build:
    cflags: ' -S -x c-header -c'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/header.c'
    sources:
      binary: header.o
  group: GRPSERIAL
  info:
    extraopts:
      - '"-S -x c-header"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_hex-round-1_1468:
  build:
    cflags: ' -O -std=gnu99'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/hex-round-1.c'
    sources:
      binary: hex-round-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_hex-round-2_1469:
  build:
    cflags: ' -O -std=gnu99'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/hex-round-2.c'
    sources:
      binary: hex-round-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_hoist-register-pressure-1_1470:
  build:
    cflags: -Os -fdump-rtl-hoist -fno-code-hoisting -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/hoist-register-pressure-1.c'
    sources:
      binary: hoist-register-pressure-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fdump-rtl-hoist -fno-code-hoisting"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_hoist-register-pressure-2_1471:
  build:
    cflags: -Os -fdump-rtl-hoist -fno-code-hoisting -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/hoist-register-pressure-2.c'
    sources:
      binary: hoist-register-pressure-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fdump-rtl-hoist -fno-code-hoisting"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_hoist-register-pressure-3_1472:
  build:
    cflags: -Os -fdump-rtl-hoist -fno-code-hoisting -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/hoist-register-pressure-3.c'
    sources:
      binary: hoist-register-pressure-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fdump-rtl-hoist -fno-code-hoisting"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ia64-sync-1_1473:
  build:
    cflags: ' -march=i486'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ia64-sync-1.c'
    sources:
      binary: ./ia64-sync-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-march=i486" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
      - '"-mcpu=v9" { target sparc*-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ia64-sync-2_1474:
  build:
    cflags: ' -march=i486'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ia64-sync-2.c'
    sources:
      binary: ./ia64-sync-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-march=i486" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
      - '"-mcpu=v9" { target sparc*-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ia64-sync-3_1475:
  build:
    cflags: ' -march=i486'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ia64-sync-3.c'
    sources:
      binary: ./ia64-sync-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-march=i486" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
      - '"-mcpu=v9" { target sparc*-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ia64-sync-4_1476:
  build:
    cflags: ' -march=i486 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ia64-sync-4.c'
    sources:
      binary: ia64-sync-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -finline-functions"'
      - '"-march=i486" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
      - '"-mcpu=v9" { target sparc*-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_iec-559-macros-1_1477:
  build:
    cflags: '  -E'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/iec-559-macros-1.c'
    sources:
      binary: iec-559-macros-1.i
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_iec-559-macros-2_1478:
  build:
    cflags: ' -funsafe-math-optimizations -E'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/iec-559-macros-2.c'
    sources:
      binary: iec-559-macros-2.i
  group: GRPSERIAL
  info:
    extraopts:
      - '"-funsafe-math-optimizations"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_iec-559-macros-3_1479:
  build:
    cflags: ' -freciprocal-math -E'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/iec-559-macros-3.c'
    sources:
      binary: iec-559-macros-3.i
  group: GRPSERIAL
  info:
    extraopts:
      - '"-freciprocal-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_iec-559-macros-4_1480:
  build:
    cflags: ' -ffinite-math-only -E'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/iec-559-macros-4.c'
    sources:
      binary: iec-559-macros-4.i
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ffinite-math-only"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_iec-559-macros-5_1481:
  build:
    cflags: ' -fno-signed-zeros -E'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/iec-559-macros-5.c'
    sources:
      binary: iec-559-macros-5.i
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-signed-zeros"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_iec-559-macros-6_1482:
  build:
    cflags: ' -fsingle-precision-constant -E'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/iec-559-macros-6.c'
    sources:
      binary: iec-559-macros-6.i
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fsingle-precision-constant"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_iec-559-macros-7_1483:
  build:
    cflags: ' -fcx-limited-range -E'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/iec-559-macros-7.c'
    sources:
      binary: iec-559-macros-7.i
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fcx-limited-range"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_iec-559-macros-8_1484:
  build:
    cflags: ' -fcx-fortran-rules -E'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/iec-559-macros-8.c'
    sources:
      binary: iec-559-macros-8.i
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fcx-fortran-rules"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_iec-559-macros-9_1485:
  build:
    cflags: ' -std=c11 -E'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/iec-559-macros-9.c'
    sources:
      binary: iec-559-macros-9.i
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_if-empty-1_1486:
  build:
    cflags: ' -Wempty-body -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/if-empty-1.c'
    sources:
      binary: if-empty-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wempty-body"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest braces around empty body in an))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest braces around empty body in an))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ifcvt-3_1487:
  build:
    cflags: -fdump-rtl-ce1 -O2 --param max-rtl-if-conversion-unpredictable-cost=100 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ifcvt-3.c'
    sources:
      binary: ifcvt-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-rtl-ce1 -O2 --param max-rtl-if-conversion-unpredictable-cost=100"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ifcvt-4_1488:
  build:
    cflags: -fdump-rtl-ce1 -O2 --param max-rtl-if-conversion-insns=3 --param max-rtl-if-conversion-unpredictable-cost=100 -mtune-ctrl=^one_if_conv_insn -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ifcvt-4.c'
    sources:
      binary: ifcvt-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-rtl-ce1 -O2 --param max-rtl-if-conversion-insns=3 --param max-rtl-if-conversion-unpredictable-cost=100"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ifcvt-5_1489:
  build:
    cflags: -fdump-rtl-ce1 -O2 --param max-rtl-if-conversion-insns=1 --param max-rtl-if-conversion-unpredictable-cost=200 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ifcvt-5.c'
    sources:
      binary: ifcvt-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-rtl-ce1 -O2 --param max-rtl-if-conversion-insns=1 --param max-rtl-if-conversion-unpredictable-cost=200"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ifcvt-fabs-1_1490:
  build:
    cflags: ' -O -march=i686'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ifcvt-fabs-1.c'
    sources:
      binary: ./ifcvt-fabs-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
      - '"-O -march=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ifelse-1_1491:
  build:
    cflags: ' -W -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ifelse-1.c'
    sources:
      binary: ifelse-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-W -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ifelse-2_1492:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ifelse-2.c'
    sources:
      binary: ./ifelse-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_imag-1_1493:
  build:
    cflags: ' -std=gnu99'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/imag-1.c'
    sources:
      binary: ./imag-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_incomplete-typedef-1_1494:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/incomplete-typedef-1.c'
    sources:
      binary: incomplete-typedef-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of incomplete typedef))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of incomplete typedef))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-bad-1_1495:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-bad-1.c'
    sources:
      binary: init-bad-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function 'g' is initialized like a variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parameter 'a' is initialized))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable 'x' has initializer but incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size" "size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(excess elements in char array initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty scalar initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array index in initializer exceeds array bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array index in initializer exceeds array bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array index range in initializer exceeds array bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty index range in initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array index range in initializer exceeds array bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array index in initializer exceeds array bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array index in initializer exceeds array bounds))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init" "excess))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer-string for array of chars is too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer-string for array of chars is too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements in scalar initializer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-bad-2_1496:
  build:
    cflags: ' -std=gnu99 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-bad-2.c'
    sources:
      binary: init-bad-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function 'g' is initialized like a variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parameter 'a' is initialized))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable 'x' has initializer but incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size" "size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(excess elements in char array initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array index in initializer exceeds array bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array index in initializer exceeds array bounds))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer-string for array of chars is too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer-string for array of chars is too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements in scalar initializer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-bad-3_1497:
  build:
    cflags: ' -std=gnu99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-bad-3.c'
    sources:
      binary: init-bad-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function 'g' is initialized like a variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parameter 'a' is initialized))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable 'x' has initializer but incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size" "size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer-string for array of chars is too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer-string for array of chars is too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(excess elements in char array initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(excess elements in scalar initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array index in initializer exceeds array bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array index in initializer exceeds array bounds))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-bad-4_1498:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-bad-4.c'
    sources:
      binary: init-bad-4.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no members|extra brace|near|undeclared|constant|compound|excess))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-bad-5_1499:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-bad-5.c'
    sources:
      binary: init-bad-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete|empty|initialization))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-bad-6_1500:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-bad-6.c'
    sources:
      binary: init-bad-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements in array initializer|near initialization))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-bad-7_1501:
  build:
    cflags: ' -std=gnu99 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-bad-7.c'
    sources:
      binary: init-bad-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization from incompatible pointer type|near initialization for))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-bad-8_1502:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-bad-8.c'
    sources:
      binary: init-bad-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(35: .struct S. has no member named .l.))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-bad-9_1503:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-bad-9.c'
    sources:
      binary: init-bad-9.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when initializing))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when initializing))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-desig-obs-1_1504:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-desig-obs-1.c'
    sources:
      binary: init-desig-obs-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(syntax error|parse error|expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(syntax error|parse error|expected))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-desig-obs-2_1505:
  build:
    cflags: ' -std=gnu99 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-desig-obs-2.c'
    sources:
      binary: init-desig-obs-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(obsolete use of designated initializer with ':'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(obsolete use of designated initializer without '='))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-desig-obs-3_1506:
  build:
    cflags: ' -std=gnu99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-desig-obs-3.c'
    sources:
      binary: init-desig-obs-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(obsolete use of designated initializer with ':'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(obsolete use of designated initializer without '='))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-empty-1_1507:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-empty-1.c'
    sources:
      binary: init-empty-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-empty-2_1508:
  build:
    cflags: ' -std=gnu99 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-empty-2.c'
    sources:
      binary: init-empty-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids empty initializer braces))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids empty initializer braces))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-empty-3_1509:
  build:
    cflags: ' -std=gnu99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-empty-3.c'
    sources:
      binary: init-empty-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids empty initializer braces))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids empty initializer braces))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-excess-1_1510:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-excess-1.c'
    sources:
      binary: init-excess-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-excess-2_1511:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-excess-2.c'
    sources:
      binary: init-excess-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(positional initialization|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-string-1_1512:
  build:
    cflags: ' -std=c99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-string-1.c'
    sources:
      binary: init-string-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parenthesized|near init" "paren array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parenthesized|near init" "paren array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parenthesized|near init" "paren array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parenthesized|near init" "paren array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parenthesized|near init" "paren array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parenthesized|near init" "paren array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parenthesized|near init" "paren array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parenthesized|near init" "paren array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parenthesized|near init" "paren array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parenthesized|near init" "paren array))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-string-2_1513:
  build:
    cflags: ' -std=c99 -pedantic-errors -fshort-enums -fshort-wchar -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-string-2.c'
    sources:
      binary: init-string-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors -fshort-enums -fshort-wchar"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(string constant" "a7))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(string constant" "a8))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(string constant" "a9))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(string constant" "a10))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(string constant" "a11))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from wide string" "a12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-wide string" "a13))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(string constant" "b7))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(string constant" "b8))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(string constant" "b9))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(string constant" "b10))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(string constant" "b11))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from wide string" "b12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-wide string" "b13))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-undef-1_1514:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-undef-1.c'
    sources:
      binary: init-undef-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_initpri1_1515:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/initpri1.c'
    sources:
      binary: ./initpri1.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_initpri2_1516:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/initpri2.c'
    sources:
      binary: initpri2.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(priorities))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(priorities))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(priorities))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(priorities))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(priorities))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(priorities))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(priorities))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(priorities))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(reserved))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(reserved))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_initpri3_1517:
  build:
    cflags: ' -flto -O3'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/initpri3.c'
    sources:
      binary: ./initpri3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-flto -O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-10_1519:
  build:
    cflags: ' -std=gnu99 -ffreestanding -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-10.c'
    sources:
      binary: inline-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -ffreestanding -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-11_1520:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-11.c'
    sources:
      binary: inline-11.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(variable 'a' declared 'inline'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(variable 'b' declared 'inline'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(typedef 'c' declared 'inline'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(typedef 'd' declared 'inline'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(parameter 'f' declared 'inline'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(parameter '\\({anonymous}\\)' declared 'inline'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-12_1521:
  build:
    cflags: ' -std=gnu99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-12.c'
    sources:
      binary: inline-12.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable 'a' declared 'inline'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable 'b' declared 'inline'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(typedef 'c' declared 'inline'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(typedef 'd' declared 'inline'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parameter 'f' declared 'inline'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parameter '\\({anonymous}\\)' declared 'inline'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-13_1522:
  build:
    cflags: -std=c99 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-13.c'
    sources:
      binary: inline-13.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-14_1523:
  build:
    cflags: ' -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-14.c'
    sources:
      binary: inline-14.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-15_1524:
  build:
    cflags: ' -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-15.c'
    sources:
      binary: inline-15.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(never defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(never defined))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-16_1525:
  build:
    cflags: ' -std=c99'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-16.c'
    sources:
      binary: inline-16.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-17_1526:
  build:
    cflags: -std=c99 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-17.c'
    sources:
      binary: inline-17.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-18_1527:
  build:
    cflags: -std=c99 -fgnu89-inline -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-18.c'
    sources:
      binary: inline-18.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -fgnu89-inline"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-19_1528:
  build:
    cflags: -fgnu89-inline -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-19.c'
    sources:
      binary: inline-19.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgnu89-inline"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-1_1518:
  build:
    cflags: ' -O1 -fgnu89-inline -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-1.c'
    sources:
      binary: inline-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fgnu89-inline"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-20_1530:
  build:
    cflags: -std=c99 -fno-gnu89-inline -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-20.c'
    sources:
      binary: inline-20.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -fno-gnu89-inline"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-21_1531:
  build:
    cflags: ' -std=gnu89 -fno-gnu89-inline -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-21.c'
    sources:
      binary: inline-21.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -fno-gnu89-inline"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(only supported in GNU99 or C99 mode" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-22_1532:
  build:
    cflags: ' -funit-at-a-time -Wno-attributes -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-22.c'
    sources:
      binary: inline-22.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-funit-at-a-time -Wno-attributes"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-23_1533:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-23.c'
    sources:
      binary: inline-23.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-24_1534:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-24.c'
    sources:
      binary: inline-24.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-25_1535:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-25.c'
    sources:
      binary: inline-25.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used in inline))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used in inline))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declared in inline))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-26_1536:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-26.c'
    sources:
      binary: inline-26.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(used in inline))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(used in inline))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(declared in inline))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-27_1537:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-27.c'
    sources:
      binary: inline-27.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(used in inline))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(used in inline))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(declared in inline))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-28_1538:
  build:
    cflags: ' -O0 -std=gnu89'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-28.c'
    sources:
      binary: ./inline-28.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0 -std=gnu89"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-29_1539:
  build:
    cflags: ' -O0 -std=gnu99'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-29.c'
    sources:
      binary: ./inline-29.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0 -std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-2_1529:
  build:
    cflags: -O3 -finline-limit=0 -fpic -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-2.c'
    sources:
      binary: inline-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -finline-limit=0 -fpic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-30_1541:
  build:
    cflags: ' -O0 -std=gnu99 -fgnu89-inline'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-30.c'
    sources:
      binary: ./inline-30.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0 -std=gnu99 -fgnu89-inline"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-31_1542:
  build:
    cflags: ' -std=c99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-31.c'
    sources:
      binary: inline-31.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-32_1543:
  build:
    cflags: ' -std=c99 -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-32.c'
    sources:
      binary: inline-32.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-32a_1544:
  build:
    cflags: ' -std=c99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-32a.c'
    sources:
      binary: inline-32a.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-33_1545:
  build:
    cflags: ' -O3 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-33.c'
    sources:
      binary: inline-33.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-tree-optimized" '
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-34_1546:
  build:
    cflags: ' -std=c99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-34.c'
    sources:
      binary: inline-34.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-35_1547:
  build:
    cflags: ' -std=c99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-35.c'
    sources:
      binary: inline-35.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-36_1548:
  build:
    cflags: ' -O2 -fdump-tree-optimized -fdisable-tree-einline -fdisable-ipa-inline -Wno-attributes -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-36.c'
    sources:
      binary: inline-36.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized -fdisable-tree-einline -fdisable-ipa-inline -Wno-attributes"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-37_1549:
  build:
    cflags: ' -O2 -fdump-tree-optimized -fdisable-tree-einline=0:100 -fdisable-ipa-inline -Wno-attributes -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-37.c'
    sources:
      binary: inline-37.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized -fdisable-tree-einline=0:100 -fdisable-ipa-inline -Wno-attributes"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-38_1550:
  build:
    cflags: ' -O2 -fdump-tree-optimized -fdisable-tree-einline=foo,foo2 -fdisable-ipa-inline -Wno-attributes -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-38.c'
    sources:
      binary: inline-38.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized -fdisable-tree-einline=foo,foo2 -fdisable-ipa-inline -Wno-attributes"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-39_1551:
  build:
    cflags: ' -O2 -fdump-tree-optimized -fdisable-tree-einline=foo2 -fdisable-ipa-inline -Wno-attributes -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-39.c'
    sources:
      binary: inline-39.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized -fdisable-tree-einline=foo2 -fdisable-ipa-inline -Wno-attributes"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-3_1540:
  build:
    cflags: -O2 -funit-at-a-time -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-3.c'
    sources:
      binary: inline-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funit-at-a-time"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-4_1552:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-4.c'
    sources:
      binary: inline-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-5_1553:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-5.c'
    sources:
      binary: inline-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-6_1554:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-6.c'
    sources:
      binary: inline-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-7_1555:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-7.c'
    sources:
      binary: inline-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-8_1556:
  build:
    cflags: ' -std=gnu99 -fhosted -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-8.c'
    sources:
      binary: inline-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fhosted"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(cannot inline function 'main'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-9_1557:
  build:
    cflags: ' -std=gnu99 -fhosted -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-9.c'
    sources:
      binary: inline-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fhosted -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot inline function 'main'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline1_1558:
  build:
    cflags: ' -Wall -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline1.c'
    sources:
      binary: inline1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline2_1559:
  build:
    cflags: ' -Wall -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline2.c'
    sources:
      binary: inline2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -std=gnu89"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline3_1560:
  build:
    cflags: ' -Wall -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline3.c'
    sources:
      binary: inline3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline4_1561:
  build:
    cflags: ' -Wall -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline4.c'
    sources:
      binary: inline4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline5_1562:
  build:
    cflags: ' -Wall -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline5.c'
    sources:
      binary: inline5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline6_1563:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline6.c'
    sources:
      binary: inline6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(static))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline7_1564:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline7.c'
    sources:
      binary: inline7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(static))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_instrument-1_1565:
  build:
    cflags: -finstrument-functions -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/instrument-1.c'
    sources:
      binary: instrument-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-finstrument-functions"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_instrument-2_1566:
  build:
    cflags: -finstrument-functions -finstrument-functions-exclude-function-list=fn -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/instrument-2.c'
    sources:
      binary: instrument-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-finstrument-functions -finstrument-functions-exclude-function-list=fn"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_instrument-3_1567:
  build:
    cflags: -finstrument-functions -finstrument-functions-exclude-file-list=instrument-3 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/instrument-3.c'
    sources:
      binary: instrument-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-finstrument-functions -finstrument-functions-exclude-file-list=instrument-3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_intermod-1_1568:
  build:
    cflags: -ansi -pedantic-errors -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/intermod-1.c'
    sources:
      binary: intermod-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_intmax_t-1_1569:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/intmax_t-1.c'
    sources:
      binary: intmax_t-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_invalid-call-1_1570:
  build:
    cflags: ' -O2 -march=i586 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/invalid-call-1.c'
    sources:
      binary: invalid-call-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -march=i586" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(function called through a non-compatible type" "non-compatible type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ira-loop-pressure_1571:
  build:
    cflags: -O2 -fira-loop-pressure -fdump-rtl-loop2_invariant -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ira-loop-pressure.c'
    sources:
      binary: ira-loop-pressure.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fira-loop-pressure -fdump-rtl-loop2_invariant "'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ira-shrinkwrap-prep-1_1572:
  build:
    cflags: -O3 -fdump-rtl-ira -fdump-rtl-pro_and_epilogue -fno-ipa-ra -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ira-shrinkwrap-prep-1.c'
    sources:
      binary: ira-shrinkwrap-prep-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-rtl-ira -fdump-rtl-pro_and_epilogue -fno-ipa-ra" '
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ira-shrinkwrap-prep-2_1573:
  build:
    cflags: -O3 -fdump-rtl-ira -fdump-rtl-pro_and_epilogue -fno-ipa-ra -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ira-shrinkwrap-prep-2.c'
    sources:
      binary: ira-shrinkwrap-prep-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-rtl-ira -fdump-rtl-pro_and_epilogue -fno-ipa-ra" '
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ivdep_1574:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ivdep.c'
    sources:
      binary: ivdep.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(missing loop condition in loop with 'GCC ivdep' pragma before ';' token))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_label-compound-stmt-1_1575:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/label-compound-stmt-1.c'
    sources:
      binary: label-compound-stmt-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(label|parse|syntax" "label at end of compound statement))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_label-decl-1_1576:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/label-decl-1.c'
    sources:
      binary: label-decl-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(label 'd' used but not defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(label 'c' used but not defined))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_label-decl-2_1577:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/label-decl-2.c'
    sources:
      binary: label-decl-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(label 'd' used but not defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(label 'c' used but not defined))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids label declarations" "label decls))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_label-decl-3_1578:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/label-decl-3.c'
    sources:
      binary: label-decl-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(label 'd' used but not defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids label declarations" "label decls))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(label 'c' used but not defined))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_label-decl-4_1579:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/label-decl-4.c'
    sources:
      binary: label-decl-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate label declaration 'a'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate label declaration 'c'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_large-size-array-2_1580:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/large-size-array-2.c'
    sources:
      binary: large-size-array-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_large-size-array-3_1581:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/large-size-array-3.c'
    sources:
      binary: large-size-array-3.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(size of array 'a' is too large))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_large-size-array-4_1582:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/large-size-array-4.c'
    sources:
      binary: large-size-array-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_large-size-array-5_1583:
  build:
    cflags: ' -Wno-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/large-size-array-5.c'
    sources:
      binary: large-size-array-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wno-overflow"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_large-size-array-6_1584:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/large-size-array-6.c'
    sources:
      binary: large-size-array-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_large-size-array_1585:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/large-size-array.c'
    sources:
      binary: large-size-array.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(size of array 'a' is too large))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_limits-width-1_1586:
  build:
    cflags: ' -std=c11 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/limits-width-1.c'
    sources:
      binary: limits-width-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_local1_1587:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/local1.c'
    sources:
      binary: local1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_localalias-2_1588:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/localalias-2.c'
    sources:
      binary: localalias-2.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_localalias_1589:
  build:
    cflags: ' -Wstrict-aliasing=2 -fstrict-aliasing'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/localalias.c'
    sources:
      binary: ./localalias.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wstrict-aliasing=2 -fstrict-aliasing"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_long-long-compare-1_1590:
  build:
    cflags: ' -O0'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/long-long-compare-1.c'
    sources:
      binary: ./long-long-compare-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_long-long-cst1_1591:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/long-long-cst1.c'
    sources:
      binary: ./long-long-cst1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_long-long-typespec-1_1592:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -Wno-long-long -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/long-long-typespec-1.c'
    sources:
      binary: long-long-typespec-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors -Wno-long-long"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:126:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:131:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:133:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:136:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:140:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:150:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:152:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:153:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:154:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:158:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:160:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:165:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:177:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:178:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:179:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:180:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:182:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:186:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:187:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:195:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:199:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:201:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:203:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:204:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:205:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:209:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:210:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:211:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:212:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:214:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:215:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:216:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:218:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:222:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:223:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:224:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:225:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:226:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:227:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:228:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:231:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:232:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:233:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:234:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:235:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:236:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:237:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:238:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:239:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:240:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:241:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:242:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:243:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:244:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:245:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:246:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:247:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:248:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:249:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:250:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:251:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:252:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:253:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:254:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:255:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:257:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:258:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:259:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:260:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:261:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:262:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:263:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:265:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:267:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:268:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:269:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:270:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:271:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:272:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:273:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:276:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:277:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:278:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:279:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:280:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:281:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:282:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:283:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:284:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:285:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:286:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:287:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:288:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:289:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:290:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:291:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:293:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:294:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:295:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:296:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:297:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:298:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:299:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:301:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:303:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:304:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:305:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:306:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:307:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:308:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:309:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:312:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:313:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:314:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:315:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:316:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:317:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:318:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:319:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:320:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:321:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:322:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:323:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:324:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:325:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:326:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:327:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:328:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:329:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:330:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:331:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:332:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:333:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:334:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:335:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:336:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:337:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:338:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:339:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:340:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:341:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:342:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:343:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:344:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:345:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:346:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:347:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:348:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:349:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:350:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:351:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:352:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:353:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:354:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:355:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:356:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:357:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:358:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:359:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:360:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:361:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:362:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:363:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:364:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:365:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:366:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:367:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:368:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:369:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:370:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:371:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:372:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:373:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:374:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:375:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:376:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:379:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:380:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:381:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:382:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:384:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:385:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:386:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:387:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:388:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:389:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:390:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:391:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:393:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:394:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:395:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:396:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:397:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:398:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:399:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:400:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:401:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:402:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:403:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:404:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:405:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:406:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:407:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:408:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:409:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:411:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:412:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:413:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:414:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:415:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:416:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:417:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:418:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:419:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:420:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:421:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:422:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:423:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:424:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:425:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:426:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:427:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:429:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:430:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:431:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:432:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:433:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:434:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:435:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:436:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:437:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:438:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:439:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:442:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:443:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:444:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:445:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:447:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:448:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:449:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:450:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:451:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:452:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:453:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:454:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:456:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:457:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:458:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:459:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:460:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:461:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:462:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:463:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:464:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:465:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:466:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:469:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:470:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:471:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:473:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:474:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:475:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:476:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:477:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:478:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:479:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:480:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:482:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:483:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:484:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:485:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:486:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:487:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:488:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:489:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:490:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:492:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:493:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:494:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:495:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:496:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:497:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:498:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:500:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:501:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:502:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:503:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:504:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:505:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:506:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:507:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:508:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:510:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:511:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:512:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:513:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:514:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:515:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:516:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:518:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:519:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:520:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:521:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:522:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:523:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:524:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:525:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:526:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:527:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:528:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:529:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:530:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:531:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:532:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:533:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:534:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:535:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:536:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:537:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:538:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:539:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:540:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:541:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:542:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:543:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:544:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:546:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:547:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:548:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:549:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:550:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:551:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:552:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:553:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:555:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:556:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:557:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:558:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:559:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:560:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:561:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:563:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:564:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:565:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:566:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:567:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:568:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:569:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:570:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:571:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:572:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:573:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:574:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:575:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:576:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:577:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:578:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:579:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:580:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:581:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:582:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:583:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:584:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:585:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:586:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:587:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:588:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:589:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:591:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:592:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:593:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:594:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:595:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:596:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:597:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:598:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:600:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:601:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:602:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:603:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:604:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:605:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:606:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:608:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:609:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:610:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:611:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:612:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:613:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:614:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:615:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:616:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:617:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:618:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:619:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:620:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:621:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:622:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:623:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:624:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:625:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:626:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:627:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:628:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:629:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:630:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:631:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:632:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:633:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:634:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:635:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:636:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:637:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:638:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:639:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:640:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:641:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:642:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:643:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:644:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:645:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:646:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:647:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:648:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:649:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:650:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:651:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:652:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:653:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:654:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:655:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:656:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:657:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:658:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:659:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:660:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:661:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:662:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:663:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:664:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:665:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:666:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:667:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:668:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:669:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:670:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:671:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:672:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:673:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:674:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:675:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:676:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:677:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:678:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:679:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:680:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:681:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:682:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:683:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:684:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:685:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:686:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:687:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:688:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:689:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:690:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:691:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:692:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:693:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:694:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:695:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:696:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:697:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:698:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:699:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:700:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:701:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:702:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:703:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:704:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:705:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:706:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:707:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:708:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:709:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:710:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:711:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:712:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:713:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:714:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:715:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:716:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:717:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:718:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:719:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:720:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:721:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:722:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:723:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:724:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:725:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:726:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:727:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:728:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:729:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:730:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:731:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:732:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:733:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:734:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:735:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:736:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:737:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:738:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:739:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:740:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:741:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:742:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:743:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:744:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:745:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:746:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:747:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:748:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:749:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:750:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:751:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:752:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:753:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:754:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:755:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:756:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:757:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:758:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:759:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:760:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:761:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:762:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:763:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:764:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:765:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:766:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:767:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:768:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:769:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:770:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:771:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:772:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:773:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:774:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:775:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:776:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:777:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:778:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:779:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:780:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:781:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:782:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:783:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:784:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:785:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:786:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:787:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:788:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:789:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:790:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:791:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:792:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:793:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:794:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:795:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:796:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:797:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:798:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:799:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:800:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:801:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:802:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:803:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:804:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:805:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:806:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:807:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:808:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:809:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:810:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:811:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:812:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:813:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:814:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:815:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:816:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:817:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:818:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:819:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:820:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:821:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:822:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:823:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:824:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:825:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:826:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:827:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:828:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int unsigned))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_long_branch_1593:
  build:
    cflags: ' -O2 -fno-reorder-blocks'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/long_branch.c'
    sources:
      binary: ./long_branch.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-reorder-blocks"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-1_1594:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-1.c'
    sources:
      binary: loop-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-2_1595:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-2.c'
    sources:
      binary: ./loop-2.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-3_1596:
  build:
    cflags: ' -O3 -mtune=i386 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-3.c'
    sources:
      binary: loop-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
      - '"-O3 -mtune=i386" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-4_1597:
  build:
    cflags: ' -O2 -funroll-loops'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-4.c'
    sources:
      binary: ./loop-4.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-5_1598:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-5.c'
    sources:
      binary: loop-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-6_1599:
  build:
    cflags: ' -O2 -funroll-all-loops'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-6.c'
    sources:
      binary: ./loop-6.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-all-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-8_1600:
  build:
    cflags: -O1 -fdump-rtl-loop2_invariant -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-8.c'
    sources:
      binary: loop-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fdump-rtl-loop2_invariant"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-9_1601:
  build:
    cflags: -O1 -fdump-rtl-loop2_invariant -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-9.c'
    sources:
      binary: loop-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fdump-rtl-loop2_invariant"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-invariant_1602:
  build:
    cflags: -O2 -fdump-rtl-loop2_invariant -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-invariant.c'
    sources:
      binary: loop-invariant.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-loop2_invariant"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-split_1603:
  build:
    cflags: ' -O2 -fsplit-loops -fdump-tree-lsplit-details'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-split.c'
    sources:
      binary: ./loop-split.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fsplit-loops -fdump-tree-lsplit-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-unswitch-1_1604:
  build:
    cflags: ' -O2 -funswitch-loops -fdump-tree-unswitch-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-unswitch-1.c'
    sources:
      binary: loop-unswitch-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funswitch-loops -fdump-tree-unswitch-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-unswitch-2_1605:
  build:
    cflags: ' -O2 -funswitch-loops -fdump-tree-unswitch-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-unswitch-2.c'
    sources:
      binary: loop-unswitch-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funswitch-loops -fdump-tree-unswitch-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-unswitch-3_1606:
  build:
    cflags: ' -O2 -funswitch-loops -fdump-tree-unswitch-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-unswitch-3.c'
    sources:
      binary: loop-unswitch-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funswitch-loops -fdump-tree-unswitch-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-unswitch-4_1607:
  build:
    cflags: ' -O2 -funswitch-loops'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-unswitch-4.c'
    sources:
      binary: ./loop-unswitch-4.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funswitch-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-unswitch-5_1608:
  build:
    cflags: ' -fno-tree-vrp -O2 -funswitch-loops -fdump-tree-unswitch-details'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-unswitch-5.c'
    sources:
      binary: ./loop-unswitch-5.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-tree-vrp -O2 -funswitch-loops -fdump-tree-unswitch-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_lvalue-2_1609:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/lvalue-2.c'
    sources:
      binary: lvalue-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as left operand of assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as increment operand))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as increment operand))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as decrement operand))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as decrement operand))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as unary '&' operand))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only variable 'c'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member 'x' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only member 'x'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of read-only variable 'c'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of member 'x' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of read-only member 'x'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of read-only location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of read-only variable 'c'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of member 'x' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of read-only member 'x'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of read-only location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of read-only variable 'c'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of member 'x' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of read-only member 'x'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of read-only location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of read-only variable 'c'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of member 'x' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of read-only member 'x'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of read-only location))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_lvalue-3_1610:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/lvalue-3.c'
    sources:
      binary: lvalue-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only member 'a'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only variable 'b'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_lvalue-4_1611:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/lvalue-4.c'
    sources:
      binary: lvalue-4.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_lvalue-5_1612:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/lvalue-5.c'
    sources:
      binary: lvalue-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment of read-only location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(increment of read-only location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(decrement of read-only location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(increment of read-only location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(decrement of read-only location))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_lvalue-6_1613:
  build:
    cflags: ' -std=iso9899:1990 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/lvalue-6.c'
    sources:
      binary: lvalue-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(taking address of expression of type 'void'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(taking address of expression of type 'void'" "C90 only error))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_lvalue-7_1614:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/lvalue-7.c'
    sources:
      binary: lvalue-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(taking address of expression of type 'void'))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_lvalue-8_1615:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/lvalue-8.c'
    sources:
      binary: lvalue-8.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as left operand of assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as left operand of assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as left operand of assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as left operand of assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as left operand of assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as left operand of assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as left operand of assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as left operand of assignment))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_lvalue1_1616:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/lvalue1.c'
    sources:
      binary: lvalue1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as left operand of assignment))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_m-un-1_1617:
  build:
    cflags: ' -O -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/m-un-1.c'
    sources:
      binary: m-un-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_m-un-2_1618:
  build:
    cflags: ' -W -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/m-un-2.c'
    sources:
      binary: m-un-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-W -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(missing initializer" "warning regression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_macro-1_1619:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/macro-1.c'
    sources:
      binary: macro-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_macro-fusion-1_1620:
  build:
    cflags: -O2 -mtune=corei7 -fdump-rtl-sched2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/macro-fusion-1.c'
    sources:
      binary: macro-fusion-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -mtune=corei7 -fdump-rtl-sched2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_macro-fusion-2_1621:
  build:
    cflags: -O2 -mtune=corei7-avx -fdump-rtl-sched2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/macro-fusion-2.c'
    sources:
      binary: macro-fusion-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -mtune=corei7-avx -fdump-rtl-sched2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_mallign_1622:
  build:
    cflags: ' -fno-builtin-malloc'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/mallign.c'
    sources:
      binary: ./mallign.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-builtin-malloc"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_march-generic_1623:
  build:
    cflags: ' -march=generic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/march-generic.c'
    sources:
      binary: march-generic.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-march=generic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('generic' CPU can be used only for '-mtune=' switch" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_march_1624:
  build:
    cflags: ' -march=foo -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/march.c'
    sources:
      binary: march.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-march=foo"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(march" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_max-1_1625:
  build:
    cflags: ' -O1 '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/max-1.c'
    sources:
      binary: ./max-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 "'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_max_1626:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/max.c'
    sources:
      binary: max.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_memcmp-1_1627:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/memcmp-1.c'
    sources:
      binary: ./memcmp-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_memcpy-1_1628:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/memcpy-1.c'
    sources:
      binary: memcpy-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_memcpy-2_1629:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/memcpy-2.c'
    sources:
      binary: memcpy-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(writing))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_memcpy-3_1630:
  build:
    cflags: ' -O -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/memcpy-3.c'
    sources:
      binary: memcpy-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_memcpy-4_1631:
  build:
    cflags: -O2 -fdump-rtl-expand -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/memcpy-4.c'
    sources:
      binary: memcpy-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-expand"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_memcpy-5_1632:
  build:
    cflags: ' -O -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/memcpy-5.c'
    sources:
      binary: memcpy-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_memmove-1_1633:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/memmove-1.c'
    sources:
      binary: memmove-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_memmove-2_1634:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/memmove-2.c'
    sources:
      binary: memmove-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_memmove-3_1635:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/memmove-3.c'
    sources:
      binary: memmove-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_memmove-4_1636:
  build:
    cflags: ' -O -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/memmove-4.c'
    sources:
      binary: memmove-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_memset-1_1637:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/memset-1.c'
    sources:
      binary: memset-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(memset used with constant zero))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_memset-2_1638:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/memset-2.c'
    sources:
      binary: memset-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_merge-all-constants-1_1639:
  build:
    cflags: -w -O2 -fmerge-all-constants -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/merge-all-constants-1.c'
    sources:
      binary: merge-all-constants-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w -O2 -fmerge-all-constants"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_min_1640:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/min.c'
    sources:
      binary: min.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_minmax-1_1641:
  build:
    cflags: ' -fdump-tree-original'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/minmax-1.c'
    sources:
      binary: ./minmax-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_misaligned-expand-1_1642:
  build:
    cflags: ' -O0'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/misaligned-expand-1.c'
    sources:
      binary: ./misaligned-expand-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_misaligned-expand-2_1643:
  build:
    cflags: ' -O0'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/misaligned-expand-2.c'
    sources:
      binary: ./misaligned-expand-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_misaligned-expand-3_1644:
  build:
    cflags: ' -O0'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/misaligned-expand-3.c'
    sources:
      binary: ./misaligned-expand-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_misc-column_1645:
  build:
    cflags: ' -fshow-column -Wall -Wfloat-equal -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/misc-column.c'
    sources:
      binary: misc-column.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fshow-column -Wall -Wfloat-equal -pedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(3:wrong type argument to unary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(3:wrong type argument to bit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(3:wrong type argument to increment))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(9:comparing floating point with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(9:comparison of distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(10:comparison will always evaluate as 'false'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(9:comparison between pointer and integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(9:ordered comparison of pointer with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(9:division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(5:division by zero))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_mismatch-decl-1_1646:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/mismatch-decl-1.c'
    sources:
      binary: mismatch-decl-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redeclared as different kind of symbol))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redeclared as different kind of symbol))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(built-in function 'memchr' declared as non-function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_missing-field-init-1_1647:
  build:
    cflags: ' -Wextra -Wno-missing-field-initializers -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/missing-field-init-1.c'
    sources:
      binary: missing-field-init-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wextra -Wno-missing-field-initializers -std=c99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_missing-field-init-2_1648:
  build:
    cflags: ' -Wmissing-field-initializers -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/missing-field-init-2.c'
    sources:
      binary: missing-field-init-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-field-initializers -std=c99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*((missing initializer)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*((missing initializer)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*((missing initializer)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*((missing initializer)|(near initialization)))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_modmod_1649:
  build:
    cflags: ' -O -fdump-tree-optimized-raw -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/modmod.c'
    sources:
      binary: modmod.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized-raw"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_mtune_1650:
  build:
    cflags: ' -mtune=foo -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/mtune.c'
    sources:
      binary: mtune.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-mtune=foo"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(mtune" "mtune))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_multiple-overflow-warn-1_1651:
  build:
    cflags: ' -std=c99 -Woverflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/multiple-overflow-warn-1.c'
    sources:
      binary: multiple-overflow-warn-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -Woverflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_multiple-overflow-warn-2_1652:
  build:
    cflags: ' -std=c99 -Woverflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/multiple-overflow-warn-2.c'
    sources:
      binary: multiple-overflow-warn-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -Woverflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_multiple-overflow-warn-3_1653:
  build:
    cflags: ' -Woverflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/multiple-overflow-warn-3.c'
    sources:
      binary: multiple-overflow-warn-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Woverflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_multiword-1_1654:
  build:
    cflags: ' -O3'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/multiword-1.c'
    sources:
      binary: ./multiword-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nand_1655:
  build:
    cflags: ' -O -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nand.c'
    sources:
      binary: nand.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nested-calls-1_1656:
  build:
    cflags: ' -std=c99 -O -fno-inline -mtune=i686'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nested-calls-1.c'
    sources:
      binary: ./nested-calls-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -O -fno-inline"'
      - '"-std=c99 -O -fno-inline -mtune=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nested-func-10_1658:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nested-func-10.c'
    sources:
      binary: nested-func-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nested-func-1_1657:
  build:
    cflags: ' -Wno-switch-unreachable -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nested-func-1.c'
    sources:
      binary: nested-func-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wno-switch-unreachable"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(break statement" "break switch 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(break statement" "break switch 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(break statement" "break while))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(break statement" "break do))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(break statement" "break for))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(continue statement" "continue while))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(continue statement" "continue do))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(continue statement" "continue for))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nested-func-2_1659:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nested-func-2.c'
    sources:
      binary: nested-func-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((is not constant)|(near initialization)))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nested-func-3_1660:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nested-func-3.c'
    sources:
      binary: nested-func-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested function 'fn' declared but never defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested function 'fn2' declared but never defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested function 'hn' declared but never defined))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nested-func-5_1661:
  build:
    cflags: ' -fexceptions -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nested-func-5.c'
    sources:
      binary: nested-func-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fexceptions"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nested-func-6_1662:
  build:
    cflags: ' -O -Winline -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nested-func-6.c'
    sources:
      binary: nested-func-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Winline"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nested-func-7_1663:
  build:
    cflags: ' -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nested-func-7.c'
    sources:
      binary: nested-func-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nested-func-8_1664:
  build:
    cflags: ' -O -fno-inline'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nested-func-8.c'
    sources:
      binary: ./nested-func-8.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-inline"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nested-func-9_1665:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nested-func-9.c'
    sources:
      binary: ./nested-func-9.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nested-redef-1_1666:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nested-redef-1.c'
    sources:
      binary: nested-redef-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested redefinition of 'struct s0'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested redefinition of 'struct s1'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested redefinition of 'struct s2'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested redefinition of 'struct s3'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested redefinition of 'union u0'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested redefinition of 'enum e0'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redeclaration of enumerator 'E2'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-asm-1_1667:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-asm-1.c'
    sources:
      binary: no-asm-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(before .asm.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty declaration" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(before .typeof.))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(empty declaration))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-asm-2_1668:
  build:
    cflags: ' -std=gnu89 -fno-asm -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-asm-2.c'
    sources:
      binary: no-asm-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -fno-asm"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-asm-3_1669:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-asm-3.c'
    sources:
      binary: no-asm-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(before .asm.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty declaration" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(before .typeof.))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(empty declaration))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-asm-4_1670:
  build:
    cflags: ' -std=gnu99 -fno-asm -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-asm-4.c'
    sources:
      binary: no-asm-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fno-asm"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty declaration" "))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(empty declaration))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-math-errno-1_1671:
  build:
    cflags: ' -fno-math-errno -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-math-errno-1.c'
    sources:
      binary: no-math-errno-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-math-errno"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-math-errno-2_1672:
  build:
    cflags: ' -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-math-errno-2.c'
    sources:
      binary: no-math-errno-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-math-errno-3_1673:
  build:
    cflags: ' -fmath-errno -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-math-errno-3.c'
    sources:
      binary: no-math-errno-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fmath-errno"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-math-errno-4_1674:
  build:
    cflags: ' -fmath-errno -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-math-errno-4.c'
    sources:
      binary: no-math-errno-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fmath-errno"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-strict-overflow-1_1675:
  build:
    cflags: ' -fno-strict-overflow -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-strict-overflow-1.c'
    sources:
      binary: no-strict-overflow-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-strict-overflow -O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-strict-overflow-2_1676:
  build:
    cflags: ' -fno-strict-overflow -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-strict-overflow-2.c'
    sources:
      binary: no-strict-overflow-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-strict-overflow -O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-strict-overflow-3_1677:
  build:
    cflags: ' -fno-strict-overflow -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-strict-overflow-3.c'
    sources:
      binary: no-strict-overflow-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-strict-overflow -O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-strict-overflow-4_1678:
  build:
    cflags: ' -fno-strict-overflow -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-strict-overflow-4.c'
    sources:
      binary: no-strict-overflow-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-strict-overflow -O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-strict-overflow-5_1679:
  build:
    cflags: ' -fno-strict-overflow -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-strict-overflow-5.c'
    sources:
      binary: no-strict-overflow-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-strict-overflow -O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-strict-overflow-6_1680:
  build:
    cflags: ' -fno-strict-overflow -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-strict-overflow-6.c'
    sources:
      binary: no-strict-overflow-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-strict-overflow -O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-strict-overflow-7_1681:
  build:
    cflags: ' -fno-strict-overflow -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-strict-overflow-7.c'
    sources:
      binary: no-strict-overflow-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-strict-overflow -O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-strict-overflow-8_1682:
  build:
    cflags: ' -fno-strict-overflow -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-strict-overflow-8.c'
    sources:
      binary: no-strict-overflow-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-strict-overflow -O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no_profile_instrument_function-attr-1_1683:
  build:
    cflags: ' -O2 -fprofile-generate -fprofile-update=single -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no_profile_instrument_function-attr-1.c'
    sources:
      binary: no_profile_instrument_function-attr-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fprofile-generate -fprofile-update=single -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_non-local-goto-1_1684:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/non-local-goto-1.c'
    sources:
      binary: ./non-local-goto-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_non-local-goto-2_1685:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/non-local-goto-2.c'
    sources:
      binary: ./non-local-goto-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nonnull-1_1686:
  build:
    cflags: ' -Wnonnull -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nonnull-1.c'
    sources:
      binary: nonnull-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wnonnull"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null with argless nonnull 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null with argless nonnull 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null with single explicit nonnull))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null with explicit nonnull 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null with explicit nonnull 3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null with cond expr rhs))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null with cond expr lhs))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null with nested cond expr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null with multiple attributes 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null with multiple attributes 2))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nonnull-2_1687:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nonnull-2.c'
    sources:
      binary: nonnull-2.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(out-of-range operand))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operand number|undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(references non-pointer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nonnull-3_1688:
  build:
    cflags: ' -Wnonnull -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nonnull-3.c'
    sources:
      binary: nonnull-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wnonnull"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nonnull-4_1689:
  build:
    cflags: ' -O2 -Wnonnull -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nonnull-4.c'
    sources:
      binary: nonnull-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wnonnull"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null" "argument 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 3 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 3 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 3 null" "argument 3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 4 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 3 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 4 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 3 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 4 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 3 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 4 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 13 null))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nonnull-5_1690:
  build:
    cflags: ' -O2 -Wnonnull -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nonnull-5.c'
    sources:
      binary: nonnull-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wnonnull"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_noreorder2_1692:
  build:
    cflags: -O2 -fno-toplevel-reorder -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noreorder2.c'
    sources:
      binary: noreorder2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-toplevel-reorder"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_noreorder3_1693:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noreorder3.c'
    sources:
      binary: noreorder3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_noreorder4_1694:
  build:
    cflags: -O2 -fno-toplevel-reorder -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noreorder4.c'
    sources:
      binary: noreorder4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-toplevel-reorder"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_noreorder_1691:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noreorder.c'
    sources:
      binary: noreorder.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_noreturn-1_1695:
  build:
    cflags: ' -O2 -Wmissing-noreturn -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noreturn-1.c'
    sources:
      binary: noreturn-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wmissing-noreturn"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*('noreturn' function does return" "detect falling off end of noreturn))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(candidate for attribute 'noreturn'" "detect noreturn candidate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*('noreturn' has a 'return' statement" "detect invalid return))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(function does return" "detect return from noreturn))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*('noreturn' function does return" "detect return from tail call))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_noreturn-2_1696:
  build:
    cflags: ' -O3 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noreturn-2.c'
    sources:
      binary: noreturn-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_noreturn-3_1697:
  build:
    cflags: ' -O2 -Wmissing-noreturn -fhosted -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noreturn-3.c'
    sources:
      binary: noreturn-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wmissing-noreturn -fhosted"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_noreturn-4_1698:
  build:
    cflags: ' -O2 -Wmissing-noreturn -ffreestanding -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noreturn-4.c'
    sources:
      binary: noreturn-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wmissing-noreturn -ffreestanding"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(function might be candidate for attribute 'noreturn'" "warn for main))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_noreturn-5_1699:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noreturn-5.c'
    sources:
      binary: noreturn-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_noreturn-6_1700:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noreturn-6.c'
    sources:
      binary: noreturn-6.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not compatible))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_noreturn-7_1701:
  build:
    cflags: ' -O2 -Wreturn-type -Wmissing-noreturn -fno-ipa-icf -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noreturn-7.c'
    sources:
      binary: noreturn-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wreturn-type -Wmissing-noreturn -fno-ipa-icf"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(might be candidate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(might be candidate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(might be candidate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(control reaches))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_noreturn-8_1702:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noreturn-8.c'
    sources:
      binary: ./noreturn-8.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nrv1_1703:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nrv1.c'
    sources:
      binary: ./nrv1.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nrv2_1704:
  build:
    cflags: -O -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nrv2.c'
    sources:
      binary: nrv2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nrv3_1705:
  build:
    cflags: ' -O -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nrv3.c'
    sources:
      binary: nrv3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nrv4_1706:
  build:
    cflags: ' -O -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nrv4.c'
    sources:
      binary: nrv4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nrv5_1707:
  build:
    cflags: ' -O -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nrv5.c'
    sources:
      binary: nrv5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_null-pointer-1_1708:
  build:
    cflags: ' -O -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/null-pointer-1.c'
    sources:
      binary: null-pointer-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_old-style-asm-1_1709:
  build:
    cflags: -O2 -dP -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/old-style-asm-1.c'
    sources:
      binary: old-style-asm-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -dP"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_old-style-param-1_1710:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/old-style-param-1.c'
    sources:
      binary: old-style-param-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array of functions))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_old-style-prom-1_1711:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/old-style-prom-1.c'
    sources:
      binary: old-style-prom-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_old-style-prom-2_1712:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/old-style-prom-2.c'
    sources:
      binary: old-style-prom-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(prototype declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(promoted argument 'x' doesn't match prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(promoted argument 'y' doesn't match prototype))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_old-style-prom-3_1713:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/old-style-prom-3.c'
    sources:
      binary: old-style-prom-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(promoted argument 'x' doesn't match prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(promoted argument 'y' doesn't match prototype))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_old-style-then-proto-1_1714:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/old-style-then-proto-1.c'
    sources:
      binary: old-style-then-proto-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype for 'f2' declares more arguments than previous old-style definition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype for 'f3' declares fewer arguments than previous old-style definition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype for 'f5' declares more arguments than previous old-style definition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types for 'f6'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype for 'f7' declares fewer arguments than previous old-style definition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types for 'f8'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype for 'f10' declares argument 2 with incompatible type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype for 'f11' declares argument 1 with incompatible type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype for 'f13' declares argument 1 with incompatible type))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(prototype for 'f1' follows non-prototype definition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(prototype for 'f4' follows non-prototype definition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(prototype for 'f9' follows non-prototype definition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(prototype for 'f12' follows non-prototype definition))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_optimize-bswapdi-1_1715:
  build:
    cflags: ' -O2 -fdump-tree-bswap -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/optimize-bswapdi-1.c'
    sources:
      binary: optimize-bswapdi-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-bswap"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_optimize-bswapdi-2_1716:
  build:
    cflags: ' -O2 -fdump-tree-bswap -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/optimize-bswapdi-2.c'
    sources:
      binary: optimize-bswapdi-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-bswap"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_optimize-bswapdi-3_1717:
  build:
    cflags: ' -O2 -fdump-tree-bswap -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/optimize-bswapdi-3.c'
    sources:
      binary: optimize-bswapdi-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-bswap"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_optimize-bswapsi-1_1718:
  build:
    cflags: ' -O2 -fdump-tree-bswap -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/optimize-bswapsi-1.c'
    sources:
      binary: optimize-bswapsi-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-bswap"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_optimize-bswapsi-2_1719:
  build:
    cflags: ' -O2 -fdump-tree-bswap -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/optimize-bswapsi-2.c'
    sources:
      binary: optimize-bswapsi-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-bswap"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_optimize-bswapsi-3_1720:
  build:
    cflags: ' -O2 -fdump-tree-bswap -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/optimize-bswapsi-3.c'
    sources:
      binary: optimize-bswapsi-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-bswap"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_optimize-bswapsi-4_1721:
  build:
    cflags: ' -O2 -fdump-tree-bswap -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/optimize-bswapsi-4.c'
    sources:
      binary: optimize-bswapsi-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-bswap"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_optimize-bswapsi-5_1722:
  build:
    cflags: ' -O2 -fdump-tree-bswap -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/optimize-bswapsi-5.c'
    sources:
      binary: optimize-bswapsi-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-bswap"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opts-1_1723:
  build:
    cflags: ' -Wno-strict-aliasing=1 -Wno-strict-overflow=1 -fno-abi-version=1 -fno-lto-compression-level=1 -fno-tree-parallelize-loops=1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/opts-1.c'
    sources:
      binary: opts-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wno-strict-aliasing=1 -Wno-strict-overflow=1 -fno-abi-version=1 -fno-lto-compression-level=1 -fno-tree-parallelize-loops=1"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(-fno-abi-version" "-fno-abi-version))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(-fno-lto-compression-level" "-fno-lto-compression-level))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(-fno-tree-parallelize-loops" "-fno-tree-parallelize-loops))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(-Wno-strict-overflow" "-Wno-strict-overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(-Wno-strict-aliasing" "-Wno-strict-aliasing))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opts-2_1724:
  build:
    cflags: ' -I -O -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/opts-2.c'
    sources:
      binary: opts-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-I -O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opts-3_1725:
  build:
    cflags: ' -Xassembler -dumpmachine -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/opts-3.c'
    sources:
      binary: opts-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Xassembler -dumpmachine"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opts-4_1726:
  build:
    cflags: ' --dump=a -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/opts-4.c'
    sources:
      binary: opts-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"--dump=a"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opts-5_1727:
  build:
    cflags: ' -fstack-limit -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/opts-5.c'
    sources:
      binary: opts-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstack-limit"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opts-6_1728:
  build:
    cflags: ' -ftemplate-depth= -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/opts-6.c'
    sources:
      binary: opts-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ftemplate-depth="'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(missing argument" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opts-7_1729:
  build:
    cflags: ' --help=^ -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/opts-7.c'
    sources:
      binary: opts-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"--help=^"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(missing argument to" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opts-8_1730:
  build:
    cflags: ' --help=target --help=optimizers -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/opts-8.c'
    sources:
      binary: opts-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"--help=target --help=optimizers"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ordered-comparison-1_1731:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ordered-comparison-1.c'
    sources:
      binary: ordered-comparison-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(distinct pointer types lacks a cast))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ordered-comparison-2_1732:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ordered-comparison-2.c'
    sources:
      binary: ordered-comparison-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(ordered comparison of pointer with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(ordered comparison of pointer with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(distinct pointer types lacks a cast))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ordered-comparison-3_1733:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ordered-comparison-3.c'
    sources:
      binary: ordered-comparison-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ordered comparison of pointer with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ordered comparison of pointer with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types lacks a cast))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ordered-comparison-4_1734:
  build:
    cflags: ' -Wextra -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ordered-comparison-4.c'
    sources:
      binary: ordered-comparison-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wextra"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(ordered comparison of pointer with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(ordered comparison of pointer with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(ordered comparison of pointer with null pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(ordered comparison of pointer with null pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(distinct pointer types lacks a cast))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_out-of-bounds-1_1735:
  build:
    cflags: ' -O -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/out-of-bounds-1.c'
    sources:
      binary: out-of-bounds-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -g"'
      - '"-O -g -mstrict-align" { target { powerpc*-*-linux* powerpc*-*-elf* } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_overflow-1_1736:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/overflow-1.c'
    sources:
      binary: overflow-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_overflow-2_1737:
  build:
    cflags: ' -std=c99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/overflow-2.c'
    sources:
      binary: overflow-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_overflow-warn-1_1738:
  build:
    cflags: ' -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/overflow-warn-1.c'
    sources:
      binary: overflow-warn-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(3:enumerator value for 'E3' is not an integer constant" "enum error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumerator value for 'E4' is not an integer constant" "enum error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not an integer constant" "22:integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not computable at load time" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(case label does not reduce to an integer constant" "constant))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(10:division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(15:division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(16:integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(21:integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(16:division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(19:integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(25:integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization makes pointer from integer without a cast" "null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization makes pointer from integer without a cast" "null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_overflow-warn-2_1739:
  build:
    cflags: ' -std=c99 -Wtraditional-conversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/overflow-warn-2.c'
    sources:
      binary: overflow-warn-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -Wtraditional-conversion"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumerator value for 'E3' is not an integer constant" "enum error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumerator value for 'E4' is not an integer constant" "enum error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not an integer constant" "integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not computable at load time" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(case label does not reduce to an integer constant" "constant))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization makes pointer from integer without a cast" "null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization makes pointer from integer without a cast" "null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsc' with different width due to prototype" "-Wtraditional-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsc' with different width due to prototype" "-Wtraditional-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsc' with different width due to prototype" "-Wtraditional-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsc' with different width due to prototype" "-Wtraditional-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fuc' with different width due to prototype" "-Wtraditional-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fuc' with different width due to prototype" "-Wtraditional-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fuc' with different width due to prototype" "-Wtraditional-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fuc' with different width due to prototype" "-Wtraditional-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fuc' with different width due to prototype" "-Wtraditional-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsi' as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsi' as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsi' as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fui' as unsigned due to prototype" "-Wtraditional-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fui' as unsigned due to prototype" "-Wtraditional-conversion))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_overflow-warn-3_1740:
  build:
    cflags: ' -std=c99 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/overflow-warn-3.c'
    sources:
      binary: overflow-warn-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumerator value for 'E3' is not an integer constant" "enum error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumerator value for 'E4' is not an integer constant" "enum error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not an integer constant" "integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not computable at load time" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(case label does not reduce to an integer constant" "constant))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization makes pointer from integer without a cast" "null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization makes pointer from integer without a cast" "null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_overflow-warn-4_1741:
  build:
    cflags: ' -std=c99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/overflow-warn-4.c'
    sources:
      binary: overflow-warn-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumerator value for 'E3' is not an integer constant" "enum error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumerator value for 'E4' is not an integer constant" "enum error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not an integer constant" "integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization makes pointer from integer without a cast" "null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not computable at load time" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization makes pointer from integer without a cast" "null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(case label does not reduce to an integer constant" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_overflow-warn-5_1742:
  build:
    cflags: ' -Woverflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/overflow-warn-5.c'
    sources:
      binary: overflow-warn-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Woverflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_overflow-warn-6_1743:
  build:
    cflags: ' -std=c99 -Woverflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/overflow-warn-6.c'
    sources:
      binary: overflow-warn-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -Woverflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_overflow-warn-7_1744:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/overflow-warn-7.c'
    sources:
      binary: overflow-warn-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_overflow-warn-8_1745:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/overflow-warn-8.c'
    sources:
      binary: overflow-warn-8.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pack-test-2_1746:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pack-test-2.c'
    sources:
      binary: pack-test-2.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(without matching))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(malformed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(without matching))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(without matching))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(small power of two))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pack-test-3_1747:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pack-test-3.c'
    sources:
      binary: pack-test-3.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pack-test-4_1748:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pack-test-4.c'
    sources:
      binary: ./pack-test-4.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pack-test-5_1749:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pack-test-5.c'
    sources:
      binary: ./pack-test-5.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_packed-array_1750:
  build:
    cflags: ' -O2 -fno-inline'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/packed-array.c'
    sources:
      binary: ./packed-array.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-inline"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_packed-vla_1751:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/packed-vla.c'
    sources:
      binary: ./packed-vla.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parm-forwdecl-1_1752:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parm-forwdecl-1.c'
    sources:
      binary: parm-forwdecl-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(just a forward declaration" "no parms))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(just a forward declaration" "no parms))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(just a forward declaration" "no parms))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(just a forward declaration" "no parms))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(just a forward declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(just a forward declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types|previous definition|just a forward declaration))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parm-forwdecl-2_1753:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parm-forwdecl-2.c'
    sources:
      binary: parm-forwdecl-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids forward parameter declarations))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids forward parameter declarations))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parm-forwdecl-3_1754:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parm-forwdecl-3.c'
    sources:
      binary: parm-forwdecl-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids forward parameter declarations))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids forward parameter declarations))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parm-forwdecl-4_1755:
  build:
    cflags: ' -Wredundant-decls -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parm-forwdecl-4.c'
    sources:
      binary: parm-forwdecl-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wredundant-decls"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parm-impl-decl-1_1756:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parm-impl-decl-1.c'
    sources:
      binary: parm-impl-decl-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*('__mode__' attribute ignored))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parm-impl-decl-2_1757:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parm-impl-decl-2.c'
    sources:
      binary: parm-impl-decl-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(label 'z' referenced outside of any function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parm-impl-decl-3_1758:
  build:
    cflags: ' -g -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parm-impl-decl-3.c'
    sources:
      binary: parm-impl-decl-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g -std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*('__mode__' attribute ignored))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parm-incomplete-1_1759:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parm-incomplete-1.c'
    sources:
      binary: parm-incomplete-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parameter 1 \\('x'\\) has incomplete type))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*('struct t2' declared inside parameter list))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(parameter 1 \\('x'\\) has void type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(parameter 1 \\('x'\\) has void type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parm-mismatch-1_1760:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parm-mismatch-1.c'
    sources:
      binary: parm-mismatch-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types for 'f0'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types for 'f1'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types for 'f2'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types for 'f3'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parse-decl-after-if_1761:
  build:
    cflags: ' -fsyntax-only -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parse-decl-after-if.c'
    sources:
      binary: parse-decl-after-if.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fsyntax-only"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression before 'int'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parse-decl-after-label_1762:
  build:
    cflags: ' -fsyntax-only -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parse-decl-after-label.c'
    sources:
      binary: parse-decl-after-label.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fsyntax-only"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(a label can only be part of a statement and a declaration is not a statement))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parse-else-error-2_1763:
  build:
    cflags: ' -fsyntax-only -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parse-else-error-2.c'
    sources:
      binary: parse-else-error-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fsyntax-only"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected .\}. before 'else'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected identifier or '\\(' before .\}. token))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parse-else-error-3_1764:
  build:
    cflags: ' -fsyntax-only -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parse-else-error-3.c'
    sources:
      binary: parse-else-error-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fsyntax-only"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('else' without a previous 'if'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parse-else-error-4_1765:
  build:
    cflags: ' -fsyntax-only -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parse-else-error-4.c'
    sources:
      binary: parse-else-error-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fsyntax-only"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('else' without a previous 'if'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parse-else-error_1766:
  build:
    cflags: ' -fsyntax-only -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parse-else-error.c'
    sources:
      binary: parse-else-error.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fsyntax-only"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected .\}. before 'else'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parse-error-1_1767:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parse-error-1.c'
    sources:
      binary: parse-error-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected identifier))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parse-error-2_1768:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parse-error-2.c'
    sources:
      binary: parse-error-2.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parse-error-3_1769:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parse-error-3.c'
    sources:
      binary: parse-error-3.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is initialized|non-standard|outside of))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialized|undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialized|undeclared|no such parameter))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parser-pr28152-2_1770:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parser-pr28152-2.c'
    sources:
      binary: parser-pr28152-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(__complex__))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(__complex__" "Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(at end of input" "end of input))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parser-pr28152_1771:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parser-pr28152.c'
    sources:
      binary: parser-pr28152.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Complex" "_Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(at end of input" "end of input))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pedwarn-init_1772:
  build:
    cflags: ' -std=gnu99 -Wpedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pedwarn-init.c'
    sources:
      binary: pedwarn-init.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wpedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(17:excess elements in vector initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(15:excess elements in scalar initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(21:excess elements in array initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(15:array index in initializer is not an integer constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(15:array index in initializer is not an integer constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids" "ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(13:array initialized from parenthesized string constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(13:array initialized from parenthesized string constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(12:array initialized from parenthesized string constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(18:excess elements in union initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(14:initialization of a flexible array member))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pg-override_1773:
  build:
    cflags: -fprofile -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pg-override.c'
    sources:
      binary: pg-override.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fprofile" { target i?86-*-linux* x86_64-*-linux* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pg_1774:
  build:
    cflags: -fprofile -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pg.c'
    sources:
      binary: pg.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fprofile" { target i?86-*-linux* x86_64-*-linux* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pic-1_1775:
  build:
    cflags: ' -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pic-1.c'
    sources:
      binary: pic-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fpic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pic-2_1776:
  build:
    cflags: ' -fPIC -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pic-2.c'
    sources:
      binary: pic-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fPIC"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pic-3_1777:
  build:
    cflags: ' -fno-pic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pic-3.c'
    sources:
      binary: pic-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-pic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pic-4_1778:
  build:
    cflags: ' -fno-PIC -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pic-4.c'
    sources:
      binary: pic-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-PIC"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pie-1_1779:
  build:
    cflags: ' -fpie -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pie-1.c'
    sources:
      binary: pie-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fpie"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pie-2_1780:
  build:
    cflags: ' -fPIE -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pie-2.c'
    sources:
      binary: pie-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fPIE"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pie-3_1781:
  build:
    cflags: ' -fno-pie -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pie-3.c'
    sources:
      binary: pie-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-pie"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pie-4_1782:
  build:
    cflags: ' -fno-PIE -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pie-4.c'
    sources:
      binary: pie-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-PIE"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pie-5_1783:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pie-5.c'
    sources:
      binary: pie-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pie-link_1784:
  build:
    cflags: ' -fpie -pie'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pie-link.c'
    sources:
      binary: pie-link.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fpie -pie"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-arith-10_1786:
  build:
    cflags: ' -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-arith-10.c'
    sources:
      binary: pointer-arith-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-arith-1_1785:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-arith-1.c'
    sources:
      binary: pointer-arith-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(subscripted value is pointer to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(subscripted value is pointer to function))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing 'void \\*' pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing 'void \\*' pointer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-arith-2_1787:
  build:
    cflags: ' -Wpointer-arith -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-arith-2.c'
    sources:
      binary: pointer-arith-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wpointer-arith"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(subscripted value is pointer to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(subscripted value is pointer to function))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing 'void \\*' pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic" "array 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing 'void \\*' pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic" "array 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in subtraction))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in subtraction))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-arith-3_1788:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-arith-3.c'
    sources:
      binary: pointer-arith-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(subscripted value is pointer to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(subscripted value is pointer to function))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing 'void \\*' pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic" "array 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing 'void \\*' pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic" "array 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in subtraction))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in subtraction))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-arith-4_1789:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-arith-4.c'
    sources:
      binary: pointer-arith-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in arithmetic" "array 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in arithmetic" "array 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(subscripted value is pointer to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(subscripted value is pointer to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in subtraction))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to a function used in subtraction))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing 'void \\*' pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing 'void \\*' pointer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-arith-5_1790:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-arith-5.c'
    sources:
      binary: pointer-arith-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-arith-6_1791:
  build:
    cflags: ' -Wpointer-arith -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-arith-6.c'
    sources:
      binary: pointer-arith-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wpointer-arith"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid application of 'sizeof' to a void type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid application of 'sizeof' to a void type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid application of 'sizeof' to a function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid application of 'sizeof' to a function type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-arith-7_1792:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-arith-7.c'
    sources:
      binary: pointer-arith-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid application of 'sizeof' to a void type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid application of 'sizeof' to a void type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid application of 'sizeof' to a function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid application of 'sizeof' to a function type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-arith-8_1793:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-arith-8.c'
    sources:
      binary: pointer-arith-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid application of 'sizeof' to a void type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid application of 'sizeof' to a void type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid application of 'sizeof' to a function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid application of 'sizeof' to a function type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-arith-9_1794:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-arith-9.c'
    sources:
      binary: pointer-arith-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-array-atomic_1795:
  build:
    cflags: ' -std=c11 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-array-atomic.c'
    sources:
      binary: pointer-array-atomic.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(return from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(return from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 2 of 'transpose0' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 2 of 'transpose1' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 2 of 'transpose1' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 2 of 'transpose2' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 2 of 'transpose2' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer type mismatch in conditional expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer type mismatch in conditional expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer type mismatch in conditional expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-array-quals-1_1796:
  build:
    cflags: ' -Wdiscarded-array-qualifiers -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-array-quals-1.c'
    sources:
      binary: pointer-array-quals-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wdiscarded-array-qualifiers"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only location))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(return discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'tvoid' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'tvoid' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'tvoid' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'transpose0' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'transpose1' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'transpose2' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer type mismatch in conditional expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer type mismatch in conditional expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer type mismatch in conditional expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to array loses qualifier in conditional expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to array loses qualifier in conditional expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-array-quals-2_1797:
  build:
    cflags: ' -Wdiscarded-array-qualifiers -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-array-quals-2.c'
    sources:
      binary: pointer-array-quals-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wdiscarded-array-qualifiers -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers|return discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'tvoid' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'transpose0' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'transpose1' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'transpose2' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 2 of 'transpose1' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 2 of 'transpose2' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 2 of 'transpose1' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 2 of 'transpose2' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers|initialization discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers|initialization discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer type mismatch in conditional expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer type mismatch in conditional expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer type mismatch in conditional expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers|assignment discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers|assignment discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers|assignment discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers|assignment discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only location|pointers to arrays))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only location|pointers to arrays))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'tvoid' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'tvoid' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to array loses qualifier in conditional expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to array loses qualifier in conditional expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_postincr-1_1798:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/postincr-1.c'
    sources:
      binary: ./postincr-1.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pow-sqrt-1_1799:
  build:
    cflags: ' -O2 -ffast-math --param max-pow-sqrt-depth=5'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pow-sqrt-1.c'
    sources:
      binary: ./pow-sqrt-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math --param max-pow-sqrt-depth=5"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pow-sqrt-2_1800:
  build:
    cflags: ' -O2 -ffast-math --param max-pow-sqrt-depth=5'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pow-sqrt-2.c'
    sources:
      binary: ./pow-sqrt-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math --param max-pow-sqrt-depth=5"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pow-sqrt-3_1801:
  build:
    cflags: ' -O2 -ffast-math --param max-pow-sqrt-depth=3'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pow-sqrt-3.c'
    sources:
      binary: ./pow-sqrt-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math --param max-pow-sqrt-depth=3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pow-sqrt-synth-1_1802:
  build:
    cflags: ' -fdump-tree-sincos -Ofast --param max-pow-sqrt-depth=8 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pow-sqrt-synth-1.c'
    sources:
      binary: pow-sqrt-synth-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-sincos -Ofast --param max-pow-sqrt-depth=8"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr10392-1_1803:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr10392-1.c'
    sources:
      binary: ./pr10392-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -m4" { target sh4-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr10474_1804:
  build:
    cflags: -O3 -fdump-rtl-pro_and_epilogue -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr10474.c'
    sources:
      binary: pr10474.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-rtl-pro_and_epilogue" '
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr11459-1_1805:
  build:
    cflags: ' -ansi -std=c99 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr11459-1.c'
    sources:
      binary: pr11459-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ansi -std=c99 -pedantic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr11492_1806:
  build:
    cflags: ' -Wsign-compare -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr11492.c'
    sources:
      binary: pr11492.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wsign-compare"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr11864-1_1807:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr11864-1.c'
    sources:
      binary: ./pr11864-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr12603_1808:
  build:
    cflags: ' -O3 -Wall -Wextra -Wreturn-type -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr12603.c'
    sources:
      binary: pr12603.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Wall -Wextra -Wreturn-type"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr12625-1_1809:
  build:
    cflags: ' -Wparentheses -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr12625-1.c'
    sources:
      binary: pr12625-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "warning for bit-field))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr13519-1_1810:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr13519-1.c'
    sources:
      binary: pr13519-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(read-only" "correct error))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr13804-1_1811:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr13804-1.c'
    sources:
      binary: pr13804-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('struct s0' has no member named 'c'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('S0 {aka struct s0}' has no member named 'c'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('union u0' has no member named 'c'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('U0 {aka union u0}' has no member named 'c'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('struct s0' has no member named 'c'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('union u0' has no member named 'c'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr14092-1_1812:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr14092-1.c'
    sources:
      binary: pr14092-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr14475_1813:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr14475.c'
    sources:
      binary: pr14475.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids forward references to" "forward ref))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(type of bit-field .code. is a GCC extension" "extension))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete type" "incomplete))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(narrower than values of its type" "narrower))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr14649-1_1814:
  build:
    cflags: ' -O2 -Wpedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr14649-1.c'
    sources:
      binary: pr14649-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wpedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(not a constant expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr14765-1_1815:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr14765-1.c'
    sources:
      binary: pr14765-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not ignored" "void stmt expr))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr14796-1_1816:
  build:
    cflags: ' -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr14796-1.c'
    sources:
      binary: pr14796-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr14796-2_1817:
  build:
    cflags: ' -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr14796-2.c'
    sources:
      binary: pr14796-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr14963_1818:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr14963.c'
    sources:
      binary: pr14963.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:1:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error before))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15236_1819:
  build:
    cflags: ' -Wall -Wextra -pedantic-errors -Wconversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15236.c'
    sources:
      binary: pr15236.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wextra -pedantic-errors -Wconversion"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C restricts enumerator values to range of .int.))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15347_1820:
  build:
    cflags: ' -O'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15347.c'
    sources:
      binary: pr15347.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15360-1_1821:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15360-1.c'
    sources:
      binary: pr15360-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-static" "correct error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-static" "correct error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(has both" "extern init in function))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized and declared" "extern init warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15443-1_1822:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15443-1.c'
    sources:
      binary: pr15443-1.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15443-2_1823:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15443-2.c'
    sources:
      binary: pr15443-2.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15649-1_1824:
  build:
    cflags: ' -ffast-math -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15649-1.c'
    sources:
      binary: pr15649-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ffast-math -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15698-1_1825:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15698-1.c'
    sources:
      binary: pr15698-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 'a' doesn't match built-in prototype))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15698-2_1826:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15698-2.c'
    sources:
      binary: pr15698-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(number of arguments doesn't match prototype))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15698-3_1827:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15698-3.c'
    sources:
      binary: pr15698-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(argument 'a' doesn't match prototype))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15698-4_1828:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15698-4.c'
    sources:
      binary: pr15698-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(number of arguments doesn't match prototype))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15698-5_1829:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15698-5.c'
    sources:
      binary: pr15698-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(number of arguments doesn't match prototype))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15698-6_1830:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15698-6.c'
    sources:
      binary: pr15698-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(number of arguments doesn't match built-in prototype))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15698-7_1831:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15698-7.c'
    sources:
      binary: pr15698-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(number of arguments doesn't match prototype))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15698-8_1832:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15698-8.c'
    sources:
      binary: pr15698-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(argument 'a' doesn't match prototype))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15749-1_1833:
  build:
    cflags: ' -std=iso9899:1999 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15749-1.c'
    sources:
      binary: pr15749-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15784-1_1834:
  build:
    cflags: ' -fstrict-overflow -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15784-1.c'
    sources:
      binary: pr15784-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15784-2_1835:
  build:
    cflags: ' -fdump-tree-gimple -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15784-2.c'
    sources:
      binary: pr15784-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15784-3_1836:
  build:
    cflags: ' -fdump-tree-gimple -fno-finite-math-only -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15784-3.c'
    sources:
      binary: pr15784-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple -fno-finite-math-only"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15784-4_1837:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15784-4.c'
    sources:
      binary: pr15784-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15785-1_1838:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15785-1.c'
    sources:
      binary: pr15785-1.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15825-1_1839:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15825-1.c'
    sources:
      binary: pr15825-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr16107_1840:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr16107.c'
    sources:
      binary: pr16107.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr16194_1841:
  build:
    cflags: ' -O -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr16194.c'
    sources:
      binary: pr16194.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr16302_1842:
  build:
    cflags: ' -Wlogical-op -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr16302.c'
    sources:
      binary: pr16302.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wlogical-op"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*('or' of collectively exhaustive tests is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*('or' of collectively exhaustive tests is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*('or' of collectively exhaustive tests is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*('or' of collectively exhaustive tests is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*('or' of collectively exhaustive tests is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*('or' of collectively exhaustive tests is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*('or' of collectively exhaustive tests is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*('or' of collectively exhaustive tests is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*('or' of collectively exhaustive tests is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*('or' of collectively exhaustive tests is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*('or' of collectively exhaustive tests is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*('or' of collectively exhaustive tests is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr16973_1843:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr16973.c'
    sources:
      binary: pr16973.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17024-1_1844:
  build:
    cflags: ' -funsafe-math-optimizations -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17024-1.c'
    sources:
      binary: pr17024-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-funsafe-math-optimizations"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17036-1_1845:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17036-1.c'
    sources:
      binary: pr17036-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17055-1_1846:
  build:
    cflags: ' -O2 -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17055-1.c'
    sources:
      binary: pr17055-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17112-1_1847:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17112-1.c'
    sources:
      binary: ./pr17112-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17188-1_1848:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17188-1.c'
    sources:
      binary: pr17188-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of 'struct s0'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of 'struct s1'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of 'struct s2'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of 'struct s3'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of 'struct s4'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17301-1_1849:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17301-1.c'
    sources:
      binary: pr17301-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments to function 'va_start'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17301-2_1850:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17301-2.c'
    sources:
      binary: pr17301-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments to function '__builtin_va_start'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17319_1851:
  build:
    cflags: ' -O2 -fno-tree-dce -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17319.c'
    sources:
      binary: pr17319.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-dce"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17322_1852:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17322.c'
    sources:
      binary: pr17322.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17424-1_1853:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17424-1.c'
    sources:
      binary: pr17424-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('tni' undeclared))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17581-1_1854:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17581-1.c'
    sources:
      binary: ./pr17581-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17635_1855:
  build:
    cflags: ' -O2 -ftree-vectorize -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17635.c'
    sources:
      binary: pr17635.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17730-1_1856:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17730-1.c'
    sources:
      binary: pr17730-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as unary '&' operand))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17844-1_1857:
  build:
    cflags: ' -fshort-enums -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17844-1.c'
    sources:
      binary: pr17844-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fshort-enums"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17957_1858:
  build:
    cflags: ' --param ggc-min-expand=0 --param ggc-min-heapsize=0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17957.c'
    sources:
      binary: pr17957.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"--param ggc-min-expand=0 --param ggc-min-heapsize=0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18079_1859:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18079.c'
    sources:
      binary: pr18079.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored due to conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored due to conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored due to conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored due to conflict))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18164_1860:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18164.c'
    sources:
      binary: pr18164.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(output operand constraint lacks))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18241-1_1861:
  build:
    cflags: ' -std=gnu99 -Wall -Wextra -O1'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18241-1.c'
    sources:
      binary: ./pr18241-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wall -Wextra -O1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18241-2_1862:
  build:
    cflags: ' -std=gnu99 -Wall -Wextra -O1'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18241-2.c'
    sources:
      binary: ./pr18241-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wall -Wextra -O1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18241-3_1863:
  build:
    cflags: ' -O1'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18241-3.c'
    sources:
      binary: ./pr18241-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18241-4_1864:
  build:
    cflags: ' -O1'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18241-4.c'
    sources:
      binary: ./pr18241-4.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18241-5_1865:
  build:
    cflags: ' -O1'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18241-5.c'
    sources:
      binary: ./pr18241-5.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18479_1866:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18479.c'
    sources:
      binary: pr18479.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored on types))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18501_1867:
  build:
    cflags: ' -O -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18501.c'
    sources:
      binary: pr18501.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(may be used" "conditional in loop))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18502-1_1868:
  build:
    cflags: ' -std=gnu99 -trigraphs -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18502-1.c'
    sources:
      binary: pr18502-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -trigraphs"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18520-1_1869:
  build:
    cflags: ' -O2 -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18520-1.c'
    sources:
      binary: pr18520-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18596-1_1870:
  build:
    cflags: ' -fno-unit-at-a-time -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18596-1.c'
    sources:
      binary: pr18596-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-unit-at-a-time -std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18596-2_1871:
  build:
    cflags: ' -funit-at-a-time -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18596-2.c'
    sources:
      binary: pr18596-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-funit-at-a-time -std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18596-3_1872:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18596-3.c'
    sources:
      binary: pr18596-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialized like a variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declared but never defined" "nested))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18628_1873:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18628.c'
    sources:
      binary: pr18628.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18725_1874:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18725.c'
    sources:
      binary: pr18725.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(output operand constraint lacks))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18809-1_1875:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18809-1.c'
    sources:
      binary: pr18809-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(forward ref" "forward))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete" "incomplete))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(declared" "declared))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18921-1_1876:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18921-1.c'
    sources:
      binary: ./pr18921-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18928-1_1877:
  build:
    cflags: ' -O2 -fPIC -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18928-1.c'
    sources:
      binary: pr18928-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18963-1_1878:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18963-1.c'
    sources:
      binary: ./pr18963-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr19105_1879:
  build:
    cflags: ' -O2 -fdump-tree-reassoc1-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr19105.c'
    sources:
      binary: pr19105.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-reassoc1-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr19340_1880:
  build:
    cflags: ' -O1 -fschedule-insns2 -fsched2-use-superblocks -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr19340.c'
    sources:
      binary: pr19340.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fschedule-insns2 -fsched2-use-superblocks"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr19345_1881:
  build:
    cflags: ' -O1 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr19345.c'
    sources:
      binary: pr19345.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr19402-1_1882:
  build:
    cflags: -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr19402-1.c'
    sources:
      binary: pr19402-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr19402-2_1883:
  build:
    cflags: ' -fno-inline -Os'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr19402-2.c'
    sources:
      binary: ./pr19402-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-inline -Os"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr19633-1_1884:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr19633-1.c'
    sources:
      binary: ./pr19633-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr19633_1885:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr19633.c'
    sources:
      binary: pr19633.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr19967_1886:
  build:
    cflags: ' -pedantic -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr19967.c'
    sources:
      binary: pr19967.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -std=c99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr19984_1887:
  build:
    cflags: ' -O2 -std=c99 -Wpedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr19984.c'
    sources:
      binary: pr19984.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=c99 -Wpedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*((not a constant)|(near initialization)))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr19988_1888:
  build:
    cflags: ' -O -fdump-tree-optimized -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr19988.c'
    sources:
      binary: pr19988.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20017_1889:
  build:
    cflags: ' -O1 -march=i386 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20017.c'
    sources:
      binary: pr20017.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
      - '"-O1 -march=i386" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20054_1890:
  build:
    cflags: ' -O2 -fno-strict-aliasing -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20054.c'
    sources:
      binary: pr20054.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-strict-aliasing"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20100_1891:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20100.c'
    sources:
      binary: ./pr20100.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20115-1_1892:
  build:
    cflags: ' -O2 -fdump-tree-dom2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20115-1.c'
    sources:
      binary: pr20115-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-dom2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20115_1893:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20115.c'
    sources:
      binary: ./pr20115.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20126_1894:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20126.c'
    sources:
      binary: pr20126.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20130-1_1895:
  build:
    cflags: ' -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20130-1.c'
    sources:
      binary: pr20130-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20216_1896:
  build:
    cflags: ' -O1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20216.c'
    sources:
      binary: pr20216.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20245-1_1897:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20245-1.c'
    sources:
      binary: pr20245-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20368-1_1898:
  build:
    cflags: ' -Wstrict-prototypes -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20368-1.c'
    sources:
      binary: pr20368-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wstrict-prototypes"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('f' undeclared here \\(not in a function\\)))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(function declaration isn't a prototype))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20368-2_1899:
  build:
    cflags: ' -Wmissing-prototypes -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20368-2.c'
    sources:
      binary: pr20368-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-prototypes"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('f' undeclared here \\(not in a function\\)))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(no previous prototype for 'f'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20368-3_1900:
  build:
    cflags: ' -Wmissing-declarations -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20368-3.c'
    sources:
      binary: pr20368-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-declarations"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('f' undeclared here \\(not in a function\\)))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(no previous declaration for 'f'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20672-1_1901:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20672-1.c'
    sources:
      binary: pr20672-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20922-1_1902:
  build:
    cflags: ' -fno-wrapv -fstrict-overflow -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20922-1.c'
    sources:
      binary: pr20922-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-wrapv -fstrict-overflow -fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20922-2_1903:
  build:
    cflags: ' -fwrapv -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20922-2.c'
    sources:
      binary: pr20922-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fwrapv -fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20922-3_1904:
  build:
    cflags: ' -ffast-math -fno-wrapv -fstrict-overflow -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20922-3.c'
    sources:
      binary: pr20922-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ffast-math -fno-wrapv -fstrict-overflow -fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20922-4_1905:
  build:
    cflags: ' -fno-wrapv -fstrict-overflow -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20922-4.c'
    sources:
      binary: pr20922-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-wrapv -fstrict-overflow -fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20922-5_1906:
  build:
    cflags: ' -fsignaling-nans -fwrapv -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20922-5.c'
    sources:
      binary: pr20922-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fsignaling-nans -fwrapv -fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20922-6_1907:
  build:
    cflags: ' -ffast-math -fno-wrapv -fstrict-overflow -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20922-6.c'
    sources:
      binary: pr20922-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ffast-math -fno-wrapv -fstrict-overflow -fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr21032_1908:
  build:
    cflags: ' -O -fdump-tree-optimized -frounding-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr21032.c'
    sources:
      binary: pr21032.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized -frounding-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr21041_1909:
  build:
    cflags: ' -O2 -fPIC -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr21041.c'
    sources:
      binary: pr21041.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr21085_1910:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr21085.c'
    sources:
      binary: pr21085.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr21282_1911:
  build:
    cflags: ' -O1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr21282.c'
    sources:
      binary: pr21282.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr21419_1912:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr21419.c'
    sources:
      binary: pr21419.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(read-only variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(read-only parameter))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr21643_1913:
  build:
    cflags: ' -O2 -fdump-tree-reassoc1-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr21643.c'
    sources:
      binary: pr21643.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-reassoc1-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr21709-1_1914:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr21709-1.c'
    sources:
      binary: pr21709-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr21858_1915:
  build:
    cflags: ' -Os -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr21858.c'
    sources:
      binary: pr21858.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr21921_1916:
  build:
    cflags: ' -O1 -funsafe-math-optimizations -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr21921.c'
    sources:
      binary: pr21921.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -funsafe-math-optimizations"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr22231_1917:
  build:
    cflags: ' -MG -MD -c -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr22231.c'
    sources:
      binary: pr22231.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-MG -MD -c"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(may only be used with -M" "-MG incompatible with -c))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr22308-1_1918:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr22308-1.c'
    sources:
      binary: pr22308-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only variable 't'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr22311-1_1919:
  build:
    cflags: ' -fshort-enums -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr22311-1.c'
    sources:
      binary: pr22311-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fshort-enums"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr22329_1920:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr22329.c'
    sources:
      binary: pr22329.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr22335-1_1921:
  build:
    cflags: ' -O1 -fdelete-null-pointer-checks -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr22335-1.c'
    sources:
      binary: pr22335-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fdelete-null-pointer-checks" '
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr22335-2_1922:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr22335-2.c'
    sources:
      binary: pr22335-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2" '
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr22356-1_1923:
  build:
    cflags: ' -O2 -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr22356-1.c'
    sources:
      binary: pr22356-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr22458-1_1924:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr22458-1.c'
    sources:
      binary: pr22458-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:1:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected declaration or statement" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23049_1925:
  build:
    cflags: ' -O3 -ftree-vectorize -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23049.c'
    sources:
      binary: pr23049.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -ftree-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23075_1926:
  build:
    cflags: ' -O2 -Wreturn-type -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23075.c'
    sources:
      binary: pr23075.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wreturn-type"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(with no value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(control reaches end))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23165_1927:
  build:
    cflags: ' -Wempty-body -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23165.c'
    sources:
      binary: pr23165.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wempty-body"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(empty body in an))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23200_1928:
  build:
    cflags: ' -O0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23200.c'
    sources:
      binary: pr23200.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23295_1929:
  build:
    cflags: ' -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23295.c'
    sources:
      binary: pr23295.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23408_1930:
  build:
    cflags: ' --param ggc-min-expand=0 --param ggc-min-heapsize=0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23408.c'
    sources:
      binary: pr23408.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"--param ggc-min-expand=0 --param ggc-min-heapsize=0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23470-1_1931:
  build:
    cflags: ' -O2 -ffast-math -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23470-1.c'
    sources:
      binary: pr23470-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23518_1932:
  build:
    cflags: ' -O2 -fwrapv'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23518.c'
    sources:
      binary: ./pr23518.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fwrapv"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23547_1933:
  build:
    cflags: ' --param ggc-min-expand=0 --param ggc-min-heapsize=0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23547.c'
    sources:
      binary: pr23547.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"--param ggc-min-expand=0 --param ggc-min-heapsize=0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23584_1934:
  build:
    cflags: ' -O1 -fdump-ipa-pure-const -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23584.c'
    sources:
      binary: pr23584.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fdump-ipa-pure-const"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23623_1935:
  build:
    cflags: -fstrict-volatile-bitfields -fdump-rtl-final -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23623.c'
    sources:
      binary: pr23623.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-volatile-bitfields -fdump-rtl-final"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23818_1936:
  build:
    cflags: ' -O2 -fno-tree-dominator-opts'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23818.c'
    sources:
      binary: ./pr23818.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-dominator-opts"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23911_1937:
  build:
    cflags: ' -O -fdump-tree-dce3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23911.c'
    sources:
      binary: pr23911.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-dce3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr24101-1_1938:
  build:
    cflags: ' -ansi -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr24101-1.i'
    sources:
      binary: pr24101-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr24101-2_1939:
  build:
    cflags: ' -ansi -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr24101-2.i'
    sources:
      binary: pr24101-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr24293_1940:
  build:
    cflags: ' -fsyntax-only -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr24293.c'
    sources:
      binary: pr24293.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fsyntax-only"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'x' isn't known))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'y' isn't known))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'p_obj' isn't known))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'e_var' isn't known))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr24367_1941:
  build:
    cflags: ' -O2 -fPIC -funroll-loops -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr24367.c'
    sources:
      binary: pr24367.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr24445_1942:
  build:
    cflags: ' -O1 -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr24445.c'
    sources:
      binary: pr24445.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fpic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr24561_1943:
  build:
    cflags: -O0 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr24561.c'
    sources:
      binary: pr24561.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr24574_1944:
  build:
    cflags: ' -O -fdump-tree-phiopt1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr24574.c'
    sources:
      binary: pr24574.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-phiopt1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr24600_1945:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr24600.c'
    sources:
      binary: pr24600.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr24615_1946:
  build:
    cflags: ' -Os -fPIC -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr24615.c'
    sources:
      binary: pr24615.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fPIC"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr24620_1947:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr24620.c'
    sources:
      binary: pr24620.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr24683_1948:
  build:
    cflags: ' -O2 -fPIC -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr24683.c'
    sources:
      binary: pr24683.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr24820_1949:
  build:
    cflags: ' -O2 -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr24820.c'
    sources:
      binary: pr24820.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr25023_1950:
  build:
    cflags: ' -O2 -mtune=i686 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr25023.c'
    sources:
      binary: pr25023.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -mtune=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr25376_1951:
  build:
    cflags: -ansi -pedantic-errors -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr25376.c'
    sources:
      binary: pr25376.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr25529_1952:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr25529.c'
    sources:
      binary: pr25529.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr25530_1953:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr25530.c'
    sources:
      binary: pr25530.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr25559_1954:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr25559.c'
    sources:
      binary: pr25559.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(zero vector size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(multiple of component size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(multiple of component size))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr25682_1955:
  build:
    cflags: ' -ansi -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr25682.c'
    sources:
      binary: pr25682.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(variably modified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(variably modified))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr25795-1_1956:
  build:
    cflags: -O3 -fwhole-program -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr25795-1.c'
    sources:
      binary: pr25795-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fwhole-program"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr25795_1957:
  build:
    cflags: -O3 -fwhole-program -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr25795.c'
    sources:
      binary: pr25795.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fwhole-program"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr25801_1958:
  build:
    cflags: ' -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr25801.c'
    sources:
      binary: pr25801.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of array with unspecified bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of array with unspecified bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(arithmetic on pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(arithmetic on pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(arithmetic on pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(arithmetic on pointer to an incomplete type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr25805_1959:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr25805.c'
    sources:
      binary: ./pr25805.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr26004_1960:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr26004.c'
    sources:
      binary: pr26004.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr26632_1961:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr26632.c'
    sources:
      binary: pr26632.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr26717_1962:
  build:
    cflags: ' -O -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr26717.c'
    sources:
      binary: pr26717.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr26719_1963:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr26719.c'
    sources:
      binary: ./pr26719.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr26729-1_1964:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr26729-1.c'
    sources:
      binary: ./pr26729-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr26865_1965:
  build:
    cflags: ' -O2 -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr26865.c'
    sources:
      binary: pr26865.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=c99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit declaration|initialization makes))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr26961-1_1966:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr26961-1.c'
    sources:
      binary: pr26961-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr26983_1967:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr26983.c'
    sources:
      binary: pr26983.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27003_1968:
  build:
    cflags: ' -Os'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27003.c'
    sources:
      binary: ./pr27003.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27095_1969:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27095.c'
    sources:
      binary: pr27095.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -mno-relax-pic-calls" { target mips*-*-* }'
      - '"-O2 -mshort-calls" { target epiphany-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27132_1970:
  build:
    cflags: ' -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27132.c'
    sources:
      binary: pr27132.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27150-1_1971:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27150-1.c'
    sources:
      binary: pr27150-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27301_1972:
  build:
    cflags: ' -O2 -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27301.c'
    sources:
      binary: pr27301.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=gnu89"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27314_1973:
  build:
    cflags: ' -O1 -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27314.c'
    sources:
      binary: pr27314.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27331_1974:
  build:
    cflags: ' -O2 -ftree-vectorize -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27331.c'
    sources:
      binary: pr27331.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27335_1975:
  build:
    cflags: ' -O2 -funroll-loops -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27335.c'
    sources:
      binary: pr27335.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27363_1976:
  build:
    cflags: ' -Os'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27363.c'
    sources:
      binary: ./pr27363.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27382-1_1977:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27382-1.c'
    sources:
      binary: pr27382-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27382-2_1978:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27382-2.c'
    sources:
      binary: pr27382-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27428-1_1979:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27428-1.c'
    sources:
      binary: pr27428-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many decimal points))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27528_1980:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27528.c'
    sources:
      binary: pr27528.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(impossible constraint" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(impossible constraint" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(impossible constraint" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(impossible constraint" "))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(probably doesn't match))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(probably doesn't match))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(probably doesn't match))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(probably doesn't match))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27531-1_1981:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27531-1.c'
    sources:
      binary: pr27531-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27639_1982:
  build:
    cflags: ' -O2 -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27639.c'
    sources:
      binary: pr27639.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=c99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27671-2_1983:
  build:
    cflags: ' -O1 -march=pentium4'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27671-2.c'
    sources:
      binary: ./pr27671-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
      - '"-O1 -march=pentium4" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27758_1984:
  build:
    cflags: ' -O0 -fpic'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27758.c'
    sources:
      binary: ./pr27758.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0 -fpic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27802-1_1985:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27802-1.c'
    sources:
      binary: pr27802-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27861-1_1986:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27861-1.c'
    sources:
      binary: pr27861-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27953_1987:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27953.c'
    sources:
      binary: pr27953.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete type" "incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition" "redef))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(declared inside parameter list" "inside))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27959-2_1988:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27959-2.c'
    sources:
      binary: ./pr27959-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -mtune=z990" { target s390*-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27959_1989:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27959.c'
    sources:
      binary: ./pr27959.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -mtune=z990" { target s390*-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28121_1990:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28121.c'
    sources:
      binary: pr28121.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28162_1991:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28162.c'
    sources:
      binary: pr28162.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28187_1992:
  build:
    cflags: ' -O -ftree-vrp -fwrapv -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28187.c'
    sources:
      binary: pr28187.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ftree-vrp -fwrapv"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28243_1993:
  build:
    cflags: ' -O2 -ftracer -fPIC -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28243.c'
    sources:
      binary: pr28243.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftracer -fPIC"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28322-2_1994:
  build:
    cflags: ' -Wall -Wextra -Wno-foobar -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28322-2.c'
    sources:
      binary: pr28322-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wextra -Wno-foobar"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(unrecognized command line option .-Wno-foobar." "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28322-3_1995:
  build:
    cflags: '  -fno-foobar -mno-foobar -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28322-3.c'
    sources:
      binary: pr28322-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '" -fno-foobar -mno-foobar"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28322_1996:
  build:
    cflags: '  -Wno-foobar -Wno-div-by-zero -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28322.c'
    sources:
      binary: pr28322.s
  group: GRPSERIAL
  info:
    extraopts:
      - '" -Wno-foobar -Wno-div-by-zero"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28402_1997:
  build:
    cflags: -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28402.c'
    sources:
      binary: pr28402.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28419_1998:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28419.c'
    sources:
      binary: pr28419.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28574_1999:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28574.c'
    sources:
      binary: pr28574.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28685-1_2000:
  build:
    cflags: ' -O2 -fdump-tree-optimized -fno-ipa-icf -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28685-1.c'
    sources:
      binary: pr28685-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized -fno-ipa-icf"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28726_2001:
  build:
    cflags: ' -O2 -fsched2-use-superblocks'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28726.c'
    sources:
      binary: ./pr28726.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fsched2-use-superblocks"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28755_2002:
  build:
    cflags: -Os -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28755.c'
    sources:
      binary: pr28755.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28796-1_2003:
  build:
    cflags: ' -ffinite-math-only'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28796-1.c'
    sources:
      binary: pr28796-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ffinite-math-only"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28796-2_2004:
  build:
    cflags: ' -O2 -funsafe-math-optimizations -fno-finite-math-only -DUNSAFE'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28796-2.c'
    sources:
      binary: ./pr28796-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funsafe-math-optimizations -fno-finite-math-only -DUNSAFE"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28888_2005:
  build:
    cflags: ' -O2 -ftree-vectorize -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28888.c'
    sources:
      binary: pr28888.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28911_2006:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28911.c'
    sources:
      binary: pr28911.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -m68000" { target m68k-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28935_2007:
  build:
    cflags: ' -O3 -ftree-vectorize -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28935.c'
    sources:
      binary: pr28935.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -ftree-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29091_2008:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29091.c'
    sources:
      binary: ./pr29091.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29215_2009:
  build:
    cflags: ' -O2 -fdump-tree-ccp1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29215.c'
    sources:
      binary: pr29215.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-ccp1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29254_2010:
  build:
    cflags: ' -O3 -Werror -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29254.c'
    sources:
      binary: pr29254.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Werror"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29299_2011:
  build:
    cflags: -O -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29299.c'
    sources:
      binary: pr29299.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29467_2012:
  build:
    cflags: ' -std=c89 -Wpedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29467.c'
    sources:
      binary: pr29467.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -Wpedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29521-2_2013:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29521-2.c'
    sources:
      binary: pr29521-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids 'return' with expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('return' with a value))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29521_2014:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29521.c'
    sources:
      binary: pr29521.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*('return' with a value))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29637_2015:
  build:
    cflags: ' -O2 -ftree-vectorize -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29637.c'
    sources:
      binary: pr29637.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29683_2016:
  build:
    cflags: ' -Os -fno-inline-functions'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29683.c'
    sources:
      binary: ./pr29683.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fno-inline-functions"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29736_2017:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29736.c'
    sources:
      binary: pr29736.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid vector type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29801_2018:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29801.c'
    sources:
      binary: pr29801.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29921-2_2019:
  build:
    cflags: ' -O2 -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29921-2.c'
    sources:
      binary: pr29921-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29921_2020:
  build:
    cflags: ' -O2 -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29921.c'
    sources:
      binary: pr29921.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30045_2021:
  build:
    cflags: ' -O2 -fno-inline -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30045.c'
    sources:
      binary: pr30045.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-inline"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30137-1_2022:
  build:
    cflags: ' -w -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30137-1.c'
    sources:
      binary: pr30137-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w -fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30137-2_2023:
  build:
    cflags: ' -w -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30137-2.c'
    sources:
      binary: pr30137-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w -fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30172-1_2024:
  build:
    cflags: ' -fno-signed-zeros -ffinite-math-only -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30172-1.c'
    sources:
      binary: pr30172-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-signed-zeros -ffinite-math-only -fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30189_2025:
  build:
    cflags: ' -g -O -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30189.c'
    sources:
      binary: pr30189.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g -O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30260_2026:
  build:
    cflags: ' -pedantic -O'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30260.c'
    sources:
      binary: pr30260.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -O"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in enumeration values))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in enumeration values))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30286_2027:
  build:
    cflags: ' -O2 -ftrapv'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30286.c'
    sources:
      binary: ./pr30286.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftrapv"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30360_2028:
  build:
    cflags: ' -O2 -std=gnu99'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30360.c'
    sources:
      binary: ./pr30360.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30457_2029:
  build:
    cflags: ' -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30457.c'
    sources:
      binary: pr30457.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined behavior when second parameter of 'va_start' is declared with 'register' storage))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*('char' is promoted to 'int' when passed through '...'" "promoted))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30473_2030:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30473.c'
    sources:
      binary: pr30473.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30551-2_2031:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30551-2.c'
    sources:
      binary: pr30551-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30551-3_2032:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30551-3.c'
    sources:
      binary: pr30551-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(first argument of .main. should be .int." "int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.main. takes only zero or two arguments" "zero or two))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(return type of .main. is not .int." "return type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30551-4_2033:
  build:
    cflags: ' -pedantic-errors -Wno-main -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30551-4.c'
    sources:
      binary: pr30551-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors -Wno-main"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30551-5_2034:
  build:
    cflags: ' -pedantic -Wno-main -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30551-5.c'
    sources:
      binary: pr30551-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -Wno-main"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30551-6_2035:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30551-6.c'
    sources:
      binary: pr30551-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(first argument of .main. should be .int." "int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(.main. takes only zero or two arguments" "zero or two))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(return type of .main. is not .int." "return type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30551_2036:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30551.c'
    sources:
      binary: pr30551.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(first argument of .main. should be .int." "int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(.main. takes only zero or two arguments" "zero or two))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(return type of .main. is not .int." "return type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30643_2037:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30643.c'
    sources:
      binary: pr30643.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr3074-1_2038:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr3074-1.c'
    sources:
      binary: pr3074-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(no effect" "no effect))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30744-1_2039:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30744-1.c'
    sources:
      binary: pr30744-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30762-1_2040:
  build:
    cflags: ' -flto -O3'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30762-1.c'
    sources:
      binary: pr30762-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-flto -O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30762-2_2041:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30762-2.c'
    sources:
      binary: pr30762-2.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30904_2042:
  build:
    cflags: ' -O2 -fdump-tree-optimized'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30904.c'
    sources:
      binary: pr30904.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30949_2043:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30949.c'
    sources:
      binary: pr30949.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'recv' from incompatible pointer type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30951_2044:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30951.c'
    sources:
      binary: pr30951.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31096-1_2045:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31096-1.c'
    sources:
      binary: pr31096-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31096_2046:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31096.c'
    sources:
      binary: pr31096.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31127_2047:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31127.c'
    sources:
      binary: pr31127.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31490-2_2048:
  build:
    cflags: ' -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31490-2.c'
    sources:
      binary: pr31490-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fpic" { target fpic }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31490-3_2049:
  build:
    cflags: ' -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31490-3.c'
    sources:
      binary: pr31490-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fpic" { target fpic }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31490-4_2050:
  build:
    cflags: ' -O2 -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31490-4.c'
    sources:
      binary: pr31490-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -fpic" { target fpic }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31490_2051:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31490.c'
    sources:
      binary: pr31490.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31507-1_2052:
  build:
    cflags: ' -Os -fno-omit-frame-pointer'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31507-1.c'
    sources:
      binary: ./pr31507-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fno-omit-frame-pointer"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31507-2_2053:
  build:
    cflags: ' -Os -fno-omit-frame-pointer -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31507-2.c'
    sources:
      binary: pr31507-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fno-omit-frame-pointer"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31529-1_2054:
  build:
    cflags: ' -flto -fgnu89-inline'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31529-1.c'
    sources:
      binary: pr31529-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-flto -fgnu89-inline"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31529-2_2055:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31529-2.c'
    sources:
      binary: pr31529-2.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31847_2056:
  build:
    cflags: ' -O2 -fdump-tree-pre-all -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31847.c'
    sources:
      binary: pr31847.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-pre-all"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31866_2057:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31866.c'
    sources:
      binary: pr31866.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31959_2058:
  build:
    cflags: ' -O0 -fguess-branch-probability -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31959.c'
    sources:
      binary: pr31959.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0 -fguess-branch-probability"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32041_2059:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32041.c'
    sources:
      binary: pr32041.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32061_2060:
  build:
    cflags: ' -Wlogical-op -Wall -Wextra -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32061.c'
    sources:
      binary: pr32061.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wlogical-op -Wall -Wextra"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32069_2061:
  build:
    cflags: ' -O0 -fsplit-wide-types -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32069.c'
    sources:
      binary: pr32069.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0 -fsplit-wide-types"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32135_2062:
  build:
    cflags: ' -Warray-bounds -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32135.c'
    sources:
      binary: pr32135.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Warray-bounds -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32176_2063:
  build:
    cflags: ' -O2 -fprefetch-loop-arrays -w -march=i686 -msse -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32176.c'
    sources:
      binary: pr32176.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fprefetch-loop-arrays -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32207_2064:
  build:
    cflags: ' -Waddress -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32207.c'
    sources:
      binary: pr32207.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Waddress"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(always evaluate as))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(the comparison will always evaluate as 'true'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(the comparison will always evaluate as 'true'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32293_2065:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32293.c'
    sources:
      binary: pr32293.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32328_2066:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32328.c'
    sources:
      binary: pr32328.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32338-1_2067:
  build:
    cflags: ' -O2 -fno-omit-frame-pointer'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32338-1.c'
    sources:
      binary: pr32338-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-omit-frame-pointer"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32338-2_2068:
  build:
    cflags: ' -O2 -fno-omit-frame-pointer'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32338-2.c'
    sources:
      binary: pr32338-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-omit-frame-pointer"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32370_2069:
  build:
    cflags: ' -ffixed-esi -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32370.c'
    sources:
      binary: pr32370.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"" { target ia64-*-* }'
      - '"-ffixed-esi" { target i?86-*-* x86_64-*-* }'
      - '"-mabi=sysv -ffixed-esi" { target x86_64-*-mingw* }'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(while reloading\|has impossible\|inconsistent operand constraints))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32374_2070:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32374.c'
    sources:
      binary: pr32374.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32559_2071:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32559.c'
    sources:
      binary: pr32559.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32573_2072:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32573.c'
    sources:
      binary: pr32573.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32721_2073:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32721.c'
    sources:
      binary: pr32721.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32773_2074:
  build:
    cflags: ' -O -fprofile-use -fopt-info -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32773.c'
    sources:
      binary: pr32773.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fprofile-use -fopt-info"'
      - '"-O -m4 -fprofile-use -fopt-info" { target sh-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32912-2_2075:
  build:
    cflags: ' -O2 -w'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32912-2.c'
    sources:
      binary: ./pr32912-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32912-3_2076:
  build:
    cflags: ' -w -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32912-3.c'
    sources:
      binary: pr32912-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w -O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32975_2077:
  build:
    cflags: ' -O1 -finline-functions -fipa-cp -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32975.c'
    sources:
      binary: pr32975.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -finline-functions -fipa-cp"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33007_2078:
  build:
    cflags: ' -O -ffast-math -ftrapping-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33007.c'
    sources:
      binary: pr33007.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ffast-math -ftrapping-math"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(-fassociative-math disabled" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33017_2079:
  build:
    cflags: ' -O2 -ftree-vectorize'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33017.c'
    sources:
      binary: ./pr33017.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33092_2080:
  build:
    cflags: ' -O1 -fno-tree-salias -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33092.c'
    sources:
      binary: pr33092.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fno-tree-salias"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33136-1_2081:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33136-1.c'
    sources:
      binary: ./pr33136-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33136-2_2082:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33136-2.c'
    sources:
      binary: ./pr33136-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33136-3_2083:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33136-3.c'
    sources:
      binary: ./pr33136-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33238_2084:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33238.c'
    sources:
      binary: pr33238.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33434-1_2085:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33434-1.c'
    sources:
      binary: ./pr33434-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33434-2_2086:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33434-2.c'
    sources:
      binary: ./pr33434-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33434-3_2087:
  build:
    cflags: ' -O3'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33434-3.c'
    sources:
      binary: ./pr33434-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33434-4_2088:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33434-4.c'
    sources:
      binary: pr33434-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33619_2089:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33619.c'
    sources:
      binary: ./pr33619.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33644_2090:
  build:
    cflags: ' -O2 -ftrapv -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33644.c'
    sources:
      binary: pr33644.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftrapv"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33645-1_2091:
  build:
    cflags: ' -O2 -fno-unit-at-a-time'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33645-1.c'
    sources:
      binary: pr33645-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-unit-at-a-time"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33645-2_2092:
  build:
    cflags: -O2 -funit-at-a-time -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33645-2.c'
    sources:
      binary: pr33645-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funit-at-a-time"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33648_2093:
  build:
    cflags: ' -O2 -fmodulo-sched -freorder-blocks-and-partition -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33648.c'
    sources:
      binary: pr33648.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched -freorder-blocks-and-partition"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33653_2094:
  build:
    cflags: -O2 -fdump-rtl-shorten -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33653.c'
    sources:
      binary: pr33653.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-shorten"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33666_2095:
  build:
    cflags: '  -std=c99  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33666.c'
    sources:
      binary: pr33666.s
  group: GRPSERIAL
  info:
    extraopts:
      - '{ -std=c99 }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33667_2096:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33667.c'
    sources:
      binary: pr33667.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33670_2097:
  build:
    cflags: ' -O2 -fsched-stalled-insns=0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33670.c'
    sources:
      binary: pr33670.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fsched-stalled-insns=0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33673_2098:
  build:
    cflags: ' -Os -fno-forward-propagate -fno-guess-branch-probability -fno-move-loop-invariants -fno-tree-dominator-opts -fno-tree-loop-optimize -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33673.c'
    sources:
      binary: pr33673.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fno-forward-propagate -fno-guess-branch-probability -fno-move-loop-invariants -fno-tree-dominator-opts -fno-tree-loop-optimize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33676_2099:
  build:
    cflags: ' -O0 -mtune=i386 -fomit-frame-pointer'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33676.c'
    sources:
      binary: ./pr33676.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
      - '"-O0 -mtune=i386 -fomit-frame-pointer" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33691_2100:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33691.c'
    sources:
      binary: pr33691.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33692_2101:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33692.c'
    sources:
      binary: pr33692.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33693_2102:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33693.c'
    sources:
      binary: pr33693.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33694_2103:
  build:
    cflags: ' -ansi -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33694.c'
    sources:
      binary: pr33694.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33695_2104:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33695.c'
    sources:
      binary: pr33695.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33696_2105:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33696.c'
    sources:
      binary: pr33696.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33697_2106:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33697.c'
    sources:
      binary: pr33697.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33724_2107:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33724.c'
    sources:
      binary: pr33724.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33726_2108:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33726.c'
    sources:
      binary: pr33726.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33742_2109:
  build:
    cflags: ' -O2 -ftree-vectorize -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33742.c'
    sources:
      binary: pr33742.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33826_2110:
  build:
    cflags: ' -O1 -fdump-tree-local-pure-const1 -fdump-ipa-pure-const -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33826.c'
    sources:
      binary: pr33826.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fdump-tree-local-pure-const1 -fdump-ipa-pure-const"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33919_2111:
  build:
    cflags: ' -I . -include ./gcc.dg/pr33919-0.h'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33919.c'
    sources:
      binary: ./pr33919.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-I . -include ${srcdir}/gcc.dg/pr33919-0.h"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33923_2112:
  build:
    cflags: ' -O3 --param max-partial-antic-length=0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33923.c'
    sources:
      binary: pr33923.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 --param max-partial-antic-length=0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33961_2113:
  build:
    cflags: ' -O2 -ftree-cselim'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33961.c'
    sources:
      binary: ./pr33961.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-cselim"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34003-1_2114:
  build:
    cflags: ' -O0'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34003-1.c'
    sources:
      binary: pr34003-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34003-2_2115:
  build:
    cflags: ' -O0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34003-2.c'
    sources:
      binary: pr34003-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34027-1_2116:
  build:
    cflags: ' -Os -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34027-1.c'
    sources:
      binary: pr34027-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34027-2_2117:
  build:
    cflags: ' -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34027-2.c'
    sources:
      binary: pr34027-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34088_2118:
  build:
    cflags: ' -O -Wall -Werror -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34088.c'
    sources:
      binary: pr34088.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wall -Werror"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is used uninitialized))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34171_2119:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34171.c'
    sources:
      binary: pr34171.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34233_2120:
  build:
    cflags: ' -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34233.c'
    sources:
      binary: pr34233.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34263_2121:
  build:
    cflags: ' -O2 -fdump-tree-optimized'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34263.c'
    sources:
      binary: ./pr34263.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34351_2122:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34351.c'
    sources:
      binary: pr34351.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(optimization may eliminate reads and/or writes to register variables))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34457-1_2123:
  build:
    cflags: ' -flto -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34457-1.c'
    sources:
      binary: pr34457-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-flto -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34457-2_2124:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34457-2.c'
    sources:
      binary: pr34457-2.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34668-1_2125:
  build:
    cflags: ' -flto -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34668-1.c'
    sources:
      binary: pr34668-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-flto -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34668-2_2126:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34668-2.c'
    sources:
      binary: pr34668-2.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34825_2127:
  build:
    cflags: ' -O -funsafe-math-optimizations -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34825.c'
    sources:
      binary: pr34825.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -funsafe-math-optimizations"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34856_2128:
  build:
    cflags: ' -O2 -msse2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34856.c'
    sources:
      binary: pr34856.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -msse2" { target { i?86-*-* x86_64-*-* } }'
      - '"-O2 -maltivec" { target { powerpc*-*-linux* && powerpc_altivec_ok } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34965_2129:
  build:
    cflags: ' -O -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34965.c'
    sources:
      binary: pr34965.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(\\(i != 0 \\&\\& j != 0\\)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(\\(i == 0 \\|\\| j == 0\\)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(\\(i != 0 \\^ j == 0\\)))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34969_2130:
  build:
    cflags: ' -O -fipa-cp -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34969.c'
    sources:
      binary: pr34969.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fipa-cp -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34985_2131:
  build:
    cflags: -Wall -Wextra -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34985.c'
    sources:
      binary: pr34985.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wextra -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35045_2132:
  build:
    cflags: ' -O2 -fgcse-after-reload'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35045.c'
    sources:
      binary: ./pr35045.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fgcse-after-reload"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35065_2133:
  build:
    cflags: ' -O2 -g -funroll-loops -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35065.c'
    sources:
      binary: pr35065.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35258_2134:
  build:
    cflags: ' -O1'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35258.c'
    sources:
      binary: ./pr35258.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35264_2135:
  build:
    cflags: ' -O1'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35264.c'
    sources:
      binary: ./pr35264.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35334_2136:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35334.c'
    sources:
      binary: pr35334.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35430_2137:
  build:
    cflags: ' -Wsign-compare -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35430.c'
    sources:
      binary: pr35430.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wsign-compare"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison between signed and unsigned integer expressions))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35440_2138:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35440.c'
    sources:
      binary: pr35440.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(called object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(called object))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35442_2139:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35442.c'
    sources:
      binary: pr35442.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-mabi=altivec" { target { { powerpc*-*-linux* } && ilp32 } }'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35443_2140:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35443.c'
    sources:
      binary: pr35443.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35445_2141:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35445.c'
    sources:
      binary: pr35445.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35468_2142:
  build:
    cflags: ' -O2 -fno-tree-dce -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35468.c'
    sources:
      binary: pr35468.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-dce"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35616_2143:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35616.c'
    sources:
      binary: ./pr35616.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35635_2144:
  build:
    cflags: ' -Wconversion -Wsign-conversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35635.c'
    sources:
      binary: pr35635.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wconversion -Wsign-conversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35691-1_2145:
  build:
    cflags: ' -O2 -fdump-tree-forwprop-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35691-1.c'
    sources:
      binary: pr35691-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-forwprop-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35691-2_2146:
  build:
    cflags: ' -O2 -fdump-tree-forwprop-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35691-2.c'
    sources:
      binary: pr35691-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-forwprop-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35701_2147:
  build:
    cflags: ' -Wconversion -Wsign-conversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35701.c'
    sources:
      binary: pr35701.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wconversion -Wsign-conversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35729_2148:
  build:
    cflags: -Os -fdump-rtl-loop2_invariant -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35729.c'
    sources:
      binary: pr35729.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fdump-rtl-loop2_invariant"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35736_2149:
  build:
    cflags: ' -O -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35736.c'
    sources:
      binary: pr35736.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35742_2150:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35742.c'
    sources:
      binary: pr35742.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35746_2151:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35746.c'
    sources:
      binary: pr35746.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35899_2152:
  build:
    cflags: ' -std=gnu89 -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35899.c'
    sources:
      binary: pr35899.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(conflicting types for))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36015_2153:
  build:
    cflags: ' -O0 -mregparm=3'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36015.c'
    sources:
      binary: ./pr36015.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
      - '"-O0 -mregparm=3" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36017_2154:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36017.c'
    sources:
      binary: ./pr36017.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36111_2155:
  build:
    cflags: ' -O2 -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36111.c'
    sources:
      binary: pr36111.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36194_2156:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36194.c'
    sources:
      binary: ./pr36194.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36224_2157:
  build:
    cflags: ' -O2 -ftree-vectorize'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36224.c'
    sources:
      binary: ./pr36224.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36227_2158:
  build:
    cflags: ' -O2 -Wstrict-overflow=3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36227.c'
    sources:
      binary: pr36227.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstrict-overflow=3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36300-1_2159:
  build:
    cflags: ' -O2 -fwrapv'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36300-1.c'
    sources:
      binary: ./pr36300-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fwrapv"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36300-2_2160:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36300-2.c'
    sources:
      binary: ./pr36300-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36489_2161:
  build:
    cflags: ' -Woverride-init -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36489.c'
    sources:
      binary: pr36489.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Woverride-init"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(initializ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(initializ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(initializ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(initializ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(initializ))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36504_2162:
  build:
    cflags: ' -O3 -fprefetch-loop-arrays -w -march=i686 -msse -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36504.c'
    sources:
      binary: pr36504.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fprefetch-loop-arrays -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36508_2163:
  build:
    cflags: ' -O -ftree-pre -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36508.c'
    sources:
      binary: pr36508.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ftree-pre"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36774-1_2164:
  build:
    cflags: ' -Wmissing-prototypes -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36774-1.c'
    sources:
      binary: pr36774-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-prototypes"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(no previous prototype))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36774-2_2165:
  build:
    cflags: ' -Wmissing-declarations -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36774-2.c'
    sources:
      binary: pr36774-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-declarations"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(no previous declaration))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36901-1_2166:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36901-1.c'
    sources:
      binary: pr36901-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36901-2_2167:
  build:
    cflags: ' -pedantic-errors -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36901-2.c'
    sources:
      binary: pr36901-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36901-3_2168:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36901-3.c'
    sources:
      binary: pr36901-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ordered comparison of pointer with integer zero" "pedantic error))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36901-4_2169:
  build:
    cflags: ' -pedantic-errors -Wsystem-headers -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36901-4.c'
    sources:
      binary: pr36901-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors -Wsystem-headers"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ordered comparison of pointer with integer zero" "pedantic error))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36902_2170:
  build:
    cflags: ' -O2 -Warray-bounds -Wall -Wextra -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36902.c'
    sources:
      binary: pr36902.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Warray-bounds -Wall -Wextra"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(array subscript is above array bounds" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36991_2171:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36991.c'
    sources:
      binary: pr36991.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36997_2172:
  build:
    cflags: ' -std=c99 -msse2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36997.c'
    sources:
      binary: pr36997.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -msse2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36998_2173:
  build:
    cflags: ' -Os -mpreferred-stack-boundary=2 -fasynchronous-unwind-tables -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36998.c'
    sources:
      binary: pr36998.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fasynchronous-unwind-tables"'
      - '"-Os -mpreferred-stack-boundary=2 -fasynchronous-unwind-tables" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
      - '"-fno-omit-frame-pointer" { target { avr-*-* } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37106-1_2174:
  build:
    cflags: ' -O1 -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37106-1.c'
    sources:
      binary: pr37106-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
      - '"-O1 -fpic" { target fpic }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37106-2_2175:
  build:
    cflags: ' -O3 -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37106-2.c'
    sources:
      binary: pr37106-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
      - '"-O3 -fpic" { target fpic }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37156_2176:
  build:
    cflags: ' -O2 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37156.c'
    sources:
      binary: pr37156.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(is experimental))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37171_2177:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37171.c'
    sources:
      binary: pr37171.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37186_2178:
  build:
    cflags: ' -Wall -Werror -Wno-error=pointer-sign -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37186.c'
    sources:
      binary: pr37186.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Werror -Wno-error=pointer-sign"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'foo' differ in signedness))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37217_2179:
  build:
    cflags: ' -Wconversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37217.c'
    sources:
      binary: pr37217.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wconversion"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37261_2180:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37261.c'
    sources:
      binary: pr37261.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37289_2181:
  build:
    cflags: ' -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37289.c'
    sources:
      binary: pr37289.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37303_2182:
  build:
    cflags: -std=c99 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37303.c'
    sources:
      binary: pr37303.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37353_2183:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37353.c'
    sources:
      binary: pr37353.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37360_2184:
  build:
    cflags: ' -O3 -fPIC -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37360.c'
    sources:
      binary: pr37360.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fPIC"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37438_2185:
  build:
    cflags: ' -Os -march=i486 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37438.c'
    sources:
      binary: pr37438.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os"'
      - '"-Os -march=i486" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37529_2186:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37529.c'
    sources:
      binary: pr37529.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression before))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37561_2187:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37561.c'
    sources:
      binary: pr37561.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(cast to pointer from integer of different size" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(cast to pointer from integer of different size" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(cast to pointer from integer of different size" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(cast to pointer from integer of different size" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37645_2188:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37645.c'
    sources:
      binary: pr37645.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37663_2189:
  build:
    cflags: ' -O2 -fwrapv -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37663.c'
    sources:
      binary: pr37663.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fwrapv"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37772_2190:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37772.c'
    sources:
      binary: pr37772.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected string literal before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected string literal before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected string literal before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected string literal before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected string literal before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected string literal before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected string literal before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected string literal before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected string literal before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected string literal before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected string literal before))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37858_2191:
  build:
    cflags: ' -O2 -fdump-ipa-build_ssa_passes -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37858.c'
    sources:
      binary: pr37858.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-ipa-build_ssa_passes"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37879_2192:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37879.c'
    sources:
      binary: pr37879.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(does return))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37908_2193:
  build:
    cflags: ' -Wsync-nand -march=i486'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37908.c'
    sources:
      binary: ./pr37908.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wsync-nand"'
      - '"-Wsync-nand -march=i486" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
      - '"-Wsync-nand -mcpu=v9" { target sparc*-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37985_2194:
  build:
    cflags: '  -Wall -Wextra  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37985.c'
    sources:
      binary: pr37985.s
  group: GRPSERIAL
  info:
    extraopts:
      - '" -Wall -Wextra "'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(no effect))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38140_2195:
  build:
    cflags: ' -O2 -fno-strict-aliasing -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38140.c'
    sources:
      binary: pr38140.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-strict-aliasing"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38200_2196:
  build:
    cflags: ' -O2 -fno-strict-aliasing -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38200.c'
    sources:
      binary: pr38200.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-strict-aliasing"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38245-1_2197:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38245-1.c'
    sources:
      binary: pr38245-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38245-2_2198:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38245-2.c'
    sources:
      binary: pr38245-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38245-3_2199:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38245-3.c'
    sources:
      binary: ./pr38245-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38245-4_2200:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38245-4.c'
    sources:
      binary: pr38245-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38338_2201:
  build:
    cflags: ' -O0 -fPIC -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38338.c'
    sources:
      binary: pr38338.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
      - '"-O0 -fPIC" { target fpic }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38364_2202:
  build:
    cflags: ' -O2 -ftrapv'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38364.c'
    sources:
      binary: ./pr38364.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftrapv"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38615_2203:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38615.c'
    sources:
      binary: ./pr38615.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38645_2204:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38645.c'
    sources:
      binary: pr38645.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38700_2205:
  build:
    cflags: ' -O0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38700.c'
    sources:
      binary: pr38700.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38932_2206:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38932.c'
    sources:
      binary: pr38932.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38934_2207:
  build:
    cflags: ' -O2 -std=gnu99 -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38934.c'
    sources:
      binary: pr38934.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=gnu99 -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38957_2208:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38957.c'
    sources:
      binary: pr38957.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(returns address of local variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(returns address of local variable))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38984_2209:
  build:
    cflags: ' -O2 -fno-delete-null-pointer-checks -fdump-tree-optimized -fno-isolate-erroneous-paths-dereference -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38984.c'
    sources:
      binary: pr38984.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-delete-null-pointer-checks -fdump-tree-optimized -fno-isolate-erroneous-paths-dereference"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39084_2210:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39084.c'
    sources:
      binary: pr39084.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39226_2211:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39226.c'
    sources:
      binary: pr39226.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -mtune=cell -mminimal-toc" { target { powerpc*-*-* && lp64 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39323-1_2212:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39323-1.c'
    sources:
      binary: pr39323-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requested alignment is too large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requested alignment is too large))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39323-2_2213:
  build:
    cflags: -ansi -pedantic-errors -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39323-2.c'
    sources:
      binary: pr39323-2.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39323-3_2214:
  build:
    cflags: -ansi -pedantic-errors -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39323-3.c'
    sources:
      binary: pr39323-3.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39343_2215:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39343.c'
    sources:
      binary: ./pr39343.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39443_2216:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39443.c'
    sources:
      binary: pr39443.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39453_2217:
  build:
    cflags: ' -O2 -fselective-scheduling2 -fsel-sched-pipelining -fsel-sched-pipelining-outer-loops -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39453.c'
    sources:
      binary: pr39453.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fselective-scheduling2 -fsel-sched-pipelining -fsel-sched-pipelining-outer-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39455_2218:
  build:
    cflags: ' -O2 -fprefetch-loop-arrays -w -march=i686 -msse -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39455.c'
    sources:
      binary: pr39455.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fprefetch-loop-arrays -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39464_2219:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39464.c'
    sources:
      binary: pr39464.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39565_2220:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39565.c'
    sources:
      binary: ./pr39565.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39666-1_2221:
  build:
    cflags: ' -O2 -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39666-1.c'
    sources:
      binary: pr39666-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39666-2_2222:
  build:
    cflags: ' -O2 -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39666-2.c'
    sources:
      binary: pr39666-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(may be used uninitialized))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39712_2223:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39712.c'
    sources:
      binary: pr39712.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39794_2224:
  build:
    cflags: ' -O2 -funroll-loops'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39794.c'
    sources:
      binary: ./pr39794.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39867_2225:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39867.c'
    sources:
      binary: pr39867.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39874_2226:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39874.c'
    sources:
      binary: pr39874.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40031_2227:
  build:
    cflags: ' -O2 -fPIC -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40031.c'
    sources:
      binary: pr40031.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40172-1_2228:
  build:
    cflags: ' -Wall -W -Werror -Wlogical-op -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40172-1.c'
    sources:
      binary: pr40172-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -W -Werror -Wlogical-op"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40172-2_2229:
  build:
    cflags: ' -Wall -W -Werror -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40172-2.c'
    sources:
      binary: pr40172-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -W -Werror"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40172-3_2230:
  build:
    cflags: ' -Wall -W -Werror -Wlogical-op -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40172-3.c'
    sources:
      binary: pr40172-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -W -Werror -Wlogical-op"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40209_2231:
  build:
    cflags: ' -O2 -fprofile-use -fopt-info -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40209.c'
    sources:
      binary: pr40209.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fprofile-use -fopt-info"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40340-1_2232:
  build:
    cflags: ' -O2 -Wall -Wno-system-headers -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40340-1.c'
    sources:
      binary: pr40340-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall -Wno-system-headers"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(writing" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40340-2_2233:
  build:
    cflags: ' -O2 -Wall -Wno-system-headers -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40340-2.c'
    sources:
      binary: pr40340-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall -Wno-system-headers"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(writing" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40340-3_2234:
  build:
    cflags: ' -O2 -Wall -Wno-system-headers -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40340-3.c'
    sources:
      binary: pr40340-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall -Wno-system-headers"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40340-4_2235:
  build:
    cflags: ' -O2 -Wall -Wno-system-headers -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40340-4.c'
    sources:
      binary: pr40340-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall -Wno-system-headers -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40340-5_2236:
  build:
    cflags: ' -O2 -Wall -Wsystem-headers -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40340-5.c'
    sources:
      binary: pr40340-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall -Wsystem-headers -g"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(writing" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40501_2237:
  build:
    cflags: ' -O2 -Wno-shift-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40501.c'
    sources:
      binary: pr40501.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wno-shift-overflow"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40669_2238:
  build:
    cflags: ' -O2 -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40669.c'
    sources:
      binary: pr40669.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40792_2239:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40792.c'
    sources:
      binary: pr40792.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40861_2240:
  build:
    cflags: ' -O -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40861.c'
    sources:
      binary: pr40861.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40946_2241:
  build:
    cflags: ' -O2 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40946.c'
    sources:
      binary: pr40946.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40989_2242:
  build:
    cflags: ' -Werror=implicit -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40989.c'
    sources:
      binary: pr40989.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Werror=implicit"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41033_2243:
  build:
    cflags: ' -O1 -fno-strict-aliasing -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41033.c'
    sources:
      binary: pr41033.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fno-strict-aliasing"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41123_2244:
  build:
    cflags: ' -O2 -fno-strict-aliasing -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41123.c'
    sources:
      binary: pr41123.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-strict-aliasing"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41232_2245:
  build:
    cflags: ' -O1 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41232.c'
    sources:
      binary: pr41232.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41241_2246:
  build:
    cflags: ' -O2 -fcompare-debug -g -march=i586 -mtune=i586 -fomit-frame-pointer -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41241.c'
    sources:
      binary: pr41241.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug -g"'
      - '"-O2 -fcompare-debug -g -march=i586 -mtune=i586 -fomit-frame-pointer" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41248_2247:
  build:
    cflags: ' -O2 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41248.c'
    sources:
      binary: pr41248.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41295_2248:
  build:
    cflags: ' -O1 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41295.c'
    sources:
      binary: pr41295.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41340_2249:
  build:
    cflags: ' -O3 -g -fcompare-debug -march=i686 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41340.c'
    sources:
      binary: pr41340.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -g -fcompare-debug"'
      - '"-O3 -g -fcompare-debug -march=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41345_2250:
  build:
    cflags: ' -O2 -g -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41345.c'
    sources:
      binary: pr41345.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41454_2251:
  build:
    cflags: ' -O2 -fno-tree-vrp'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41454.c'
    sources:
      binary: ./pr41454.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-vrp"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41470_2252:
  build:
    cflags: ' -fexceptions -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41470.c'
    sources:
      binary: pr41470.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fexceptions"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41488_2253:
  build:
    cflags: ' -O2 -fdump-tree-sccp-scev -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41488.c'
    sources:
      binary: pr41488.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-sccp-scev"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41551_2254:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41551.c'
    sources:
      binary: pr41551.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41573_2255:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41573.c'
    sources:
      binary: pr41573.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41574_2256:
  build:
    cflags: -O2 -fno-unsafe-math-optimizations -fdump-rtl-combine -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41574.c'
    sources:
      binary: pr41574.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -march=armv7-a -mfloat-abi=softfp -mfpu=neon -fno-unsafe-math-optimizations -fdump-rtl-combine" { target { arm*-*-* } }'
      - '"-O2 -fno-unsafe-math-optimizations -fdump-rtl-combine" { target { ! arm*-*-* } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41619_2257:
  build:
    cflags: ' -O2 -fno-ira-share-save-slots -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41619.c'
    sources:
      binary: pr41619.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-ira-share-save-slots"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41643_2258:
  build:
    cflags: ' -O2 -fno-tree-dce -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41643.c'
    sources:
      binary: pr41643.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-dce"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41762_2259:
  build:
    cflags: ' -O2 -ftracer -fsched2-use-superblocks -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41762.c'
    sources:
      binary: pr41762.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftracer -fsched2-use-superblocks"'
      - '"-O2 -ftracer -fsched2-use-superblocks -fpic" { target fpic }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41783_2260:
  build:
    cflags: ' -O3 -fdump-tree-pre -fno-tree-loop-im -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41783.c'
    sources:
      binary: pr41783.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-tree-pre -fno-tree-loop-im"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41837_2261:
  build:
    cflags: ' -fipa-struct-reorg -O -fwhole-program -fprofile-generate -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41837.c'
    sources:
      binary: pr41837.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fipa-struct-reorg -O -fwhole-program -fprofile-generate"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41841_2262:
  build:
    cflags: ' -O -fipa-struct-reorg -fwhole-program -fipa-cp -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41841.c'
    sources:
      binary: pr41841.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fipa-struct-reorg -fwhole-program -fipa-cp"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41842_2263:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41842.c'
    sources:
      binary: pr41842.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41935_2264:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41935.c'
    sources:
      binary: ./pr41935.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41963_2265:
  build:
    cflags: ' -O2 -ffast-math'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41963.c'
    sources:
      binary: ./pr41963.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42078_2266:
  build:
    cflags: ' -g -O -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42078.c'
    sources:
      binary: pr42078.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g -O -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42084_2267:
  build:
    cflags: ' -O1 -fno-delete-null-pointer-checks'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42084.c'
    sources:
      binary: ./pr42084.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fno-delete-null-pointer-checks"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42215_2268:
  build:
    cflags: ' -O2 -ftree-loop-distribution -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42215.c'
    sources:
      binary: pr42215.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-loop-distribution"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42245-2_2269:
  build:
    cflags: ' -O2 -fselective-scheduling -fsel-sched-pipelining -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42245-2.c'
    sources:
      binary: pr42245-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fselective-scheduling -fsel-sched-pipelining"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42245_2270:
  build:
    cflags: ' -O2 -fselective-scheduling -fsel-sched-pipelining -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42245.c'
    sources:
      binary: pr42245.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fselective-scheduling -fsel-sched-pipelining"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42246_2271:
  build:
    cflags: ' -O2 -fselective-scheduling -fsel-sched-pipelining -fsel-sched-pipelining-outer-loops -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42246.c'
    sources:
      binary: pr42246.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fselective-scheduling -fsel-sched-pipelining -fsel-sched-pipelining-outer-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42249_2272:
  build:
    cflags: ' -O2 -fselective-scheduling -fsel-sched-pipelining -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42249.c'
    sources:
      binary: pr42249.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fselective-scheduling -fsel-sched-pipelining"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42250_2273:
  build:
    cflags: ' -O2 -fipa-struct-reorg -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42250.c'
    sources:
      binary: pr42250.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fipa-struct-reorg"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42388_2274:
  build:
    cflags: ' -O2 -fselective-scheduling -fmodulo-sched -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42388.c'
    sources:
      binary: pr42388.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fselective-scheduling -fmodulo-sched"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42389_2275:
  build:
    cflags: ' -O2 -fselective-scheduling -fsel-sched-pipelining -fsched-pressure -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42389.c'
    sources:
      binary: pr42389.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fselective-scheduling -fsel-sched-pipelining -fsched-pressure"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42396_2276:
  build:
    cflags: ' -O2 -g -ftracer -fsched2-use-superblocks -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42396.c'
    sources:
      binary: pr42396.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g -ftracer -fsched2-use-superblocks"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42427_2277:
  build:
    cflags: ' -O2 -fexceptions -fnon-call-exceptions -fpeel-loops -c'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42427.c'
    sources:
      binary: pr42427.o
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fexceptions -fnon-call-exceptions -fpeel-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42461_2278:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42461.c'
    sources:
      binary: pr42461.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42475_2279:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42475.c'
    sources:
      binary: pr42475.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42611_2280:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42611.c'
    sources:
      binary: pr42611.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(type .struct S. is too large))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42629_2281:
  build:
    cflags: ' -O1 -fsched-pressure -fschedule-insns -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42629.c'
    sources:
      binary: pr42629.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fsched-pressure -fschedule-insns -fcompare-debug" { target scheduling }'
      - '"-O1 -fcompare-debug" { target { ! scheduling } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42630_2282:
  build:
    cflags: ' -O1 -fvariable-expansion-in-unroller -funroll-loops -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42630.c'
    sources:
      binary: pr42630.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fvariable-expansion-in-unroller -funroll-loops -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42631_2283:
  build:
    cflags: ' -g -O1 -funroll-loops -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42631.c'
    sources:
      binary: pr42631.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g -O1 -funroll-loops -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42662_2284:
  build:
    cflags: ' -g -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42662.c'
    sources:
      binary: pr42662.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42685_2285:
  build:
    cflags: ' -O -funroll-loops -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42685.c'
    sources:
      binary: pr42685.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -funroll-loops -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42715_2286:
  build:
    cflags: ' -fPIC -g -O2 -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42715.c'
    sources:
      binary: pr42715.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fPIC -g -O2 -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42719_2287:
  build:
    cflags: ' -O2 -ftracer -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42719.c'
    sources:
      binary: pr42719.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftracer -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42728_2288:
  build:
    cflags: ' -O1 -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42728.c'
    sources:
      binary: pr42728.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42889_2289:
  build:
    cflags: ' -O -fgcse -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42889.c'
    sources:
      binary: pr42889.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fgcse -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42916_2290:
  build:
    cflags: ' -O1 -funroll-loops -ftree-vectorize -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42916.c'
    sources:
      binary: pr42916.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -funroll-loops -ftree-vectorize -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42918_2291:
  build:
    cflags: ' -O2 -fcompare-debug -ftracer -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42918.c'
    sources:
      binary: pr42918.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug -ftracer"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42963_2292:
  build:
    cflags: ' -O2 -fdump-tree-cfg -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42963.c'
    sources:
      binary: pr42963.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-cfg"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43058_2293:
  build:
    cflags: ' -g -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43058.c'
    sources:
      binary: pr43058.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43082_2294:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43082.c'
    sources:
      binary: pr43082.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(void value not ignored as it ought to be))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43084_2295:
  build:
    cflags: ' -O1 -fipa-struct-reorg -fwhole-program -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43084.c'
    sources:
      binary: pr43084.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fipa-struct-reorg -fwhole-program -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43139_2296:
  build:
    cflags: ' -g -O2 -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43139.c'
    sources:
      binary: pr43139.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g -O2 -fpic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43157_2297:
  build:
    cflags: ' -O1 -flto -fuse-linker-plugin'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43157.c'
    sources:
      binary: pr43157.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -flto -fuse-linker-plugin"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43211_2298:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43211.c'
    sources:
      binary: pr43211.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43213_2299:
  build:
    cflags: -ansi -pedantic-errors -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43213.c'
    sources:
      binary: pr43213.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43245_2300:
  build:
    cflags: ' -Wno-discarded-qualifiers -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43245.c'
    sources:
      binary: pr43245.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wno-discarded-qualifiers"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43280_2301:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43280.c'
    sources:
      binary: ./pr43280.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43299_2302:
  build:
    cflags: ' -g -O2 -c'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43299.c'
    sources:
      binary: pr43299.o
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43300_2303:
  build:
    cflags: ' -Os -w -Wno-psabi -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43300.c'
    sources:
      binary: pr43300.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -w"'
      - '"-Os -w -Wno-psabi" { target { i?86-*-* x86_64-*-* } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43305_2304:
  build:
    cflags: ' -Os -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43305.c'
    sources:
      binary: pr43305.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43317_2305:
  build:
    cflags: ' -O -fipa-struct-reorg -fwhole-program -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43317.c'
    sources:
      binary: pr43317.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fipa-struct-reorg -fwhole-program -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43379_2306:
  build:
    cflags: ' -O2 -ftracer -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43379.c'
    sources:
      binary: pr43379.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftracer -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43402_2307:
  build:
    cflags: ' -O1 -fno-inline'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43402.c'
    sources:
      binary: ./pr43402.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fno-inline"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43419_2308:
  build:
    cflags: ' -O1'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43419.c'
    sources:
      binary: ./pr43419.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43513_2309:
  build:
    cflags: ' -O2 -fdump-tree-ccp2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43513.c'
    sources:
      binary: pr43513.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-ccp2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43557-1_2310:
  build:
    cflags: ' -flto -g -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43557-1.c'
    sources:
      binary: pr43557-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-flto -g -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43557-2_2311:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43557-2.c'
    sources:
      binary: pr43557-2.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43562_2312:
  build:
    cflags: ' -O0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43562.c'
    sources:
      binary: pr43562.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43564_2313:
  build:
    cflags: ' -O0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43564.c'
    sources:
      binary: pr43564.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43670_2314:
  build:
    cflags: ' -O -ftree-vrp -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43670.c'
    sources:
      binary: pr43670.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ftree-vrp -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43730_2315:
  build:
    cflags: ' -O0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43730.c'
    sources:
      binary: pr43730.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43864-2_2316:
  build:
    cflags: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43864-2.c'
    sources:
      binary: pr43864-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43864-3_2317:
  build:
    cflags: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43864-3.c'
    sources:
      binary: pr43864-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43864-4_2318:
  build:
    cflags: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43864-4.c'
    sources:
      binary: pr43864-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43864_2319:
  build:
    cflags: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43864.c'
    sources:
      binary: pr43864.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43971_2320:
  build:
    cflags: ' -Os -fno-delete-null-pointer-checks -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43971.c'
    sources:
      binary: pr43971.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fno-delete-null-pointer-checks"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44012_2321:
  build:
    cflags: ' -O -fgcse -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44012.c'
    sources:
      binary: pr44012.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fgcse"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44023_2322:
  build:
    cflags: ' -fcompare-debug -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44023.c'
    sources:
      binary: pr44023.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fcompare-debug -O2"'
      - '"-fcompare-debug -O2 -mcpu=ev67" { target alpha*-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44024_2323:
  build:
    cflags: ' -O1 -fdelete-null-pointer-checks -fdump-tree-ccp1'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44024.c'
    sources:
      binary: pr44024.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fdelete-null-pointer-checks -fdump-tree-ccp1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44028_2324:
  build:
    cflags: ' -O3 -fsched-pressure -fschedule-insns -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44028.c'
    sources:
      binary: pr44028.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fcompare-debug"'
      - '"-O3 -fsched-pressure -fschedule-insns -fcompare-debug" { target i?86-*-* x86_64-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44061_2325:
  build:
    cflags: ' -O2 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44061.c'
    sources:
      binary: pr44061.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44136_2326:
  build:
    cflags: ' -w -Wno-psabi -O2 -g -mno-sse -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44136.c'
    sources:
      binary: pr44136.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w -O2 -g"'
      - '"-w -Wno-psabi -O2 -g -mno-sse" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44194-1_2327:
  build:
    cflags: -O2 -fdump-rtl-dse1 -fdump-rtl-final -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44194-1.c'
    sources:
      binary: pr44194-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-dse1 -fdump-rtl-final"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44194-2_2328:
  build:
    cflags: -O2 -fdump-rtl-dse1 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44194-2.c'
    sources:
      binary: pr44194-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-dse1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44214-1_2329:
  build:
    cflags: ' -O2 -freciprocal-math -fdump-tree-ccp1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44214-1.c'
    sources:
      binary: pr44214-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -freciprocal-math -fdump-tree-ccp1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44214-2_2330:
  build:
    cflags: ' -O2 -freciprocal-math -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44214-2.c'
    sources:
      binary: pr44214-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -freciprocal-math -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44214-3_2331:
  build:
    cflags: ' -O2 -fdump-tree-ccp1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44214-3.c'
    sources:
      binary: pr44214-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-ccp1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44337_2332:
  build:
    cflags: ' -O -fno-tree-dce -fno-tree-dse -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44337.c'
    sources:
      binary: pr44337.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-dce -fno-tree-dse -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44393_2333:
  build:
    cflags: ' -Os -ftree-loop-distribution -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44393.c'
    sources:
      binary: pr44393.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -ftree-loop-distribution"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44404_2334:
  build:
    cflags: ' -O2 -fno-unroll-loops'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44404.c'
    sources:
      binary: ./pr44404.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-unroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44485_2335:
  build:
    cflags: ' -O1 -funsafe-math-optimizations -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44485.c'
    sources:
      binary: pr44485.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -funsafe-math-optimizations"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44509_2336:
  build:
    cflags: ' --param ggc-min-expand=0 --param ggc-min-heapsize=0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44509.c'
    sources:
      binary: pr44509.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"--param ggc-min-expand=0 --param ggc-min-heapsize=0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44539_2337:
  build:
    cflags: ' -ftracer -freorder-blocks -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44539.c'
    sources:
      binary: pr44539.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ftracer -freorder-blocks -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44545_2338:
  build:
    cflags: ' -O2 -fnon-call-exceptions -ftrapv -fexceptions -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44545.c'
    sources:
      binary: pr44545.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fnon-call-exceptions -ftrapv -fexceptions"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44606_2339:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44606.c'
    sources:
      binary: ./pr44606.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44699_2340:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44699.c'
    sources:
      binary: pr44699.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44838_2341:
  build:
    cflags: ' -O2 -funroll-loops'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44838.c'
    sources:
      binary: ./pr44838.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44964_2342:
  build:
    cflags: ' -fkeep-inline-functions -O -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44964.c'
    sources:
      binary: pr44964.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fkeep-inline-functions -O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44971_2343:
  build:
    cflags: ' -O2 -fcompare-debug -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44971.c'
    sources:
      binary: pr44971.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44974_2344:
  build:
    cflags: -O -fno-optimize-sibling-calls -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44974.c'
    sources:
      binary: pr44974.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-optimize-sibling-calls"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45055_2345:
  build:
    cflags: ' -O2 -ftracer -fsched-pressure -funroll-loops -fschedule-insns -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45055.c'
    sources:
      binary: pr45055.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftracer -fsched-pressure -funroll-loops -fschedule-insns -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45071_2346:
  build:
    cflags: ' -O -ftree-vrp -ftree-vectorize -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45071.c'
    sources:
      binary: pr45071.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ftree-vrp -ftree-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45079_2347:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45079.c'
    sources:
      binary: pr45079.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only location))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45083_2348:
  build:
    cflags: ' -O2 -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45083.c'
    sources:
      binary: pr45083.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(cs\[^\n\r\]*\\.b\[^\n\r\]*is used uninitialized))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(cs\[^\n\r\]*\\.a\[^\n\r\]*may be used uninitialized))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(cs\[^\n\r\]*\\.c\[^\n\r\]*may be used uninitialized))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45101_2349:
  build:
    cflags: ' -O2 -fgcse -fgcse-las -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45101.c'
    sources:
      binary: pr45101.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fgcse -fgcse-las"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45105_2350:
  build:
    cflags: ' -Os -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45105.c'
    sources:
      binary: pr45105.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45107_2351:
  build:
    cflags: ' -Os -fgcse-las -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45107.c'
    sources:
      binary: pr45107.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fgcse-las"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45259_2352:
  build:
    cflags: ' -g -O2 -w -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45259.c'
    sources:
      binary: pr45259.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g -O2 -w -fpic" { target fpic }'
      - '"-g -O2 -w" { target { ! fpic } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45352-1_2353:
  build:
    cflags: ' -O3 -fschedule-insns -fschedule-insns2 -fselective-scheduling2 -fsel-sched-pipelining -funroll-loops -fprefetch-loop-arrays -march=i686 -msse -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45352-1.c'
    sources:
      binary: pr45352-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fschedule-insns -fschedule-insns2 -fselective-scheduling2 -fsel-sched-pipelining -funroll-loops -fprefetch-loop-arrays"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45352-2_2354:
  build:
    cflags: ' -O1 -freorder-blocks -fschedule-insns2 -funswitch-loops -fselective-scheduling2 -fsel-sched-pipelining -funroll-all-loops -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45352-2.c'
    sources:
      binary: pr45352-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -freorder-blocks -fschedule-insns2 -funswitch-loops -fselective-scheduling2 -fsel-sched-pipelining -funroll-all-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45352-3_2355:
  build:
    cflags: ' -O -fprofile-generate -fgcse -fno-gcse-lm -fgcse-sm -fno-ivopts -fno-tree-loop-im -ftree-pre -funroll-loops -fno-web -fschedule-insns2 -fselective-scheduling2 -fsel-sched-pipelining -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45352-3.c'
    sources:
      binary: pr45352-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fprofile-generate -fgcse -fno-gcse-lm -fgcse-sm -fno-ivopts -fno-tree-loop-im -ftree-pre -funroll-loops -fno-web -fschedule-insns2 -fselective-scheduling2 -fsel-sched-pipelining"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45352_2356:
  build:
    cflags: ' -Os -fselective-scheduling2 -fsel-sched-pipelining -fprofile-generate -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45352.c'
    sources:
      binary: pr45352.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fselective-scheduling2 -fsel-sched-pipelining -fprofile-generate"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45353_2357:
  build:
    cflags: ' -O2 -fschedule-insns -fselective-scheduling -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45353.c'
    sources:
      binary: pr45353.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fschedule-insns -fselective-scheduling"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45415_2358:
  build:
    cflags: ' -O1 -fno-tree-dominator-opts -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45415.c'
    sources:
      binary: pr45415.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fno-tree-dominator-opts"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45416_2359:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45416.c'
    sources:
      binary: pr45416.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45449_2360:
  build:
    cflags: ' -O2 -fno-tree-pre -fno-tree-pta -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45449.c'
    sources:
      binary: pr45449.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-pre -fno-tree-pta -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45461_2361:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45461.c'
    sources:
      binary: pr45461.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(is promoted" "promoted))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45472_2362:
  build:
    cflags: ' -O -fschedule-insns2 -fselective-scheduling2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45472.c'
    sources:
      binary: pr45472.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fschedule-insns2 -fselective-scheduling2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45506_2363:
  build:
    cflags: ' -g -O -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45506.c'
    sources:
      binary: pr45506.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g -O -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45567_2364:
  build:
    cflags: ' -ftree-ter -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45567.c'
    sources:
      binary: pr45567.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ftree-ter"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45570_2365:
  build:
    cflags: ' -O3 -fselective-scheduling2 -fsel-sched-pipelining -fsel-sched-pipelining-outer-loops -ftracer -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45570.c'
    sources:
      binary: pr45570.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fselective-scheduling2 -fsel-sched-pipelining -fsel-sched-pipelining-outer-loops -ftracer"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45652_2366:
  build:
    cflags: ' -O2 -fselective-scheduling2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45652.c'
    sources:
      binary: ./pr45652.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fselective-scheduling2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45733_2367:
  build:
    cflags: ' -O -fstrict-overflow -ftree-vectorize -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45733.c'
    sources:
      binary: pr45733.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fstrict-overflow -ftree-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45750_2368:
  build:
    cflags: ' -O -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45750.c'
    sources:
      binary: pr45750.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45819_2369:
  build:
    cflags: ' -O2 -fdump-tree-optimized -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45819.c'
    sources:
      binary: pr45819.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45865_2370:
  build:
    cflags: ' -O2 -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45865.c'
    sources:
      binary: pr45865.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45991_2371:
  build:
    cflags: ' -O -fstrict-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45991.c'
    sources:
      binary: pr45991.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fstrict-overflow"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46088_2372:
  build:
    cflags: ' -Os -fnon-call-exceptions -fpeel-loops -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46088.c'
    sources:
      binary: pr46088.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fnon-call-exceptions -fpeel-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46130-1_2373:
  build:
    cflags: ' -O2 -fno-tree-dce -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46130-1.c'
    sources:
      binary: pr46130-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-dce"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46130-2_2374:
  build:
    cflags: ' -O2 -fno-tree-dce -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46130-2.c'
    sources:
      binary: pr46130-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-dce"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46165_2375:
  build:
    cflags: ' -O -fno-tree-ccp -fno-tree-copy-prop -fno-tree-dce -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46165.c'
    sources:
      binary: pr46165.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-ccp -fno-tree-copy-prop -fno-tree-dce"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46171_2376:
  build:
    cflags: ' -O -fno-tree-dce -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46171.c'
    sources:
      binary: pr46171.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-dce -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46177-2_2377:
  build:
    cflags: ' -O -fno-tree-copy-prop -ftree-loop-distribution -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46177-2.c'
    sources:
      binary: pr46177-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-copy-prop -ftree-loop-distribution"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46177_2378:
  build:
    cflags: ' -O -fno-tree-copy-prop -ftree-loop-distribution -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46177.c'
    sources:
      binary: pr46177.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-copy-prop -ftree-loop-distribution"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46184_2379:
  build:
    cflags: ' -O -ftree-vectorize -fno-tree-copy-prop -fno-tree-dce -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46184.c'
    sources:
      binary: pr46184.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ftree-vectorize -fno-tree-copy-prop -fno-tree-dce"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46212_2380:
  build:
    cflags: ' -O3 -funroll-loops -march=i386 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46212.c'
    sources:
      binary: pr46212.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -funroll-loops"'
      - '"-O3 -funroll-loops -march=i386" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46217_2381:
  build:
    cflags: ' -O3 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46217.c'
    sources:
      binary: pr46217.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46233_2382:
  build:
    cflags: ' -O -fno-tree-dce -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46233.c'
    sources:
      binary: pr46233.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-dce"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46251_2383:
  build:
    cflags: ' -ffast-math -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46251.c'
    sources:
      binary: pr46251.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46252_2384:
  build:
    cflags: ' -O -frerun-cse-after-loop -fno-tree-loop-optimize -funroll-loops -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46252.c'
    sources:
      binary: pr46252.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -frerun-cse-after-loop -fno-tree-loop-optimize -funroll-loops -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46288_2385:
  build:
    cflags: ' -O -fno-tree-dce -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46288.c'
    sources:
      binary: pr46288.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-dce"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46307_2386:
  build:
    cflags: ' -O2 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46307.c'
    sources:
      binary: pr46307.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46309-2_2387:
  build:
    cflags: ' -O2 -fno-ipa-icf -fdump-tree-reassoc-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46309-2.c'
    sources:
      binary: pr46309-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-ipa-icf -fdump-tree-reassoc-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46309_2388:
  build:
    cflags: ' -O2 -fdump-tree-reassoc-details -mbranch-cost=2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46309.c'
    sources:
      binary: pr46309.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-reassoc-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46315_2389:
  build:
    cflags: ' -O2 -fno-strict-overflow'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46315.c'
    sources:
      binary: ./pr46315.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-strict-overflow"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46355_2390:
  build:
    cflags: ' -O -ftree-loop-distribution -fstrict-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46355.c'
    sources:
      binary: pr46355.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ftree-loop-distribution -fstrict-overflow"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46375_2391:
  build:
    cflags: ' -fgcse -fno-tree-dominator-opts -fcompare-debug -O -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46375.c'
    sources:
      binary: pr46375.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgcse -fno-tree-dominator-opts -fcompare-debug -O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46387_2392:
  build:
    cflags: ' -g -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46387.c'
    sources:
      binary: pr46387.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46494_2393:
  build:
    cflags: ' -O -fno-tree-ccp -fno-tree-fre -ftree-vrp -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46494.c'
    sources:
      binary: pr46494.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-ccp -fno-tree-fre -ftree-vrp"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46499-1_2394:
  build:
    cflags: ' -O -fno-omit-frame-pointer -fno-tree-ccp -fno-tree-dominator-opts -finline-small-functions'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46499-1.c'
    sources:
      binary: ./pr46499-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-omit-frame-pointer -fno-tree-ccp -fno-tree-dominator-opts -finline-small-functions"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46499-2_2395:
  build:
    cflags: ' -O -fno-tree-ccp -fno-tree-dominator-opts -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46499-2.c'
    sources:
      binary: pr46499-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-ccp -fno-tree-dominator-opts"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46521_2396:
  build:
    cflags: ' -Os -fselective-scheduling2 -fsel-sched-pipelining -fprofile-generate -fno-early-inlining -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46521.c'
    sources:
      binary: pr46521.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fselective-scheduling2 -fsel-sched-pipelining -fprofile-generate -fno-early-inlining"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46522_2397:
  build:
    cflags: ' -O3 -fkeep-inline-functions -fsel-sched-pipelining -fselective-scheduling2 -funroll-loops -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46522.c'
    sources:
      binary: pr46522.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fkeep-inline-functions -fsel-sched-pipelining -fselective-scheduling2 -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46571_2398:
  build:
    cflags: ' -O2 -fcompare-debug -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46571.c'
    sources:
      binary: pr46571.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46585_2399:
  build:
    cflags: ' -fno-dce -fschedule-insns -fselective-scheduling -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46585.c'
    sources:
      binary: pr46585.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-dce -fschedule-insns -fselective-scheduling"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46614_2400:
  build:
    cflags: ' -O -fno-rename-registers -fsched2-use-superblocks -fschedule-insns2 -funroll-loops'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46614.c'
    sources:
      binary: ./pr46614.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-rename-registers -fsched2-use-superblocks -fschedule-insns2 -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46620_2401:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46620.c'
    sources:
      binary: ./pr46620.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46647_2402:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46647.c'
    sources:
      binary: pr46647.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46674_2403:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46674.c'
    sources:
      binary: pr46674.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46675_2404:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46675.c'
    sources:
      binary: ./pr46675.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46685_2405:
  build:
    cflags: ' -O2 -freorder-blocks-and-partition -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46685.c'
    sources:
      binary: pr46685.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -freorder-blocks-and-partition -fpic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46728-12_2406:
  build:
    cflags: ' -O2 -ffast-math -fno-inline -fno-unroll-loops -lm'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46728-12.c'
    sources:
      binary: ./pr46728-12.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math -fno-inline -fno-unroll-loops -lm"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46728-6_2407:
  build:
    cflags: -O2 -ffast-math -lm -fno-ident -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46728-6.c'
    sources:
      binary: pr46728-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math -lm -fno-ident"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46728-9_2408:
  build:
    cflags: ' -O2 -ffast-math -fno-inline -fno-unroll-loops -lm'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46728-9.c'
    sources:
      binary: ./pr46728-9.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math -fno-inline -fno-unroll-loops -lm"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46771_2409:
  build:
    cflags: ' -O -ftree-vectorize -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46771.c'
    sources:
      binary: pr46771.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ftree-vectorize -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46777_2410:
  build:
    cflags: ' -fgcse -O -fno-tree-dominator-opts -funroll-loops -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46777.c'
    sources:
      binary: pr46777.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgcse -O -fno-tree-dominator-opts -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46867_2411:
  build:
    cflags: ' -O -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46867.c'
    sources:
      binary: pr46867.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46875_2412:
  build:
    cflags: ' -Os -fselective-scheduling2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46875.c'
    sources:
      binary: pr46875.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fselective-scheduling2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46878-1_2413:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46878-1.c'
    sources:
      binary: pr46878-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46893_2414:
  build:
    cflags: ' -O -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46893.c'
    sources:
      binary: pr46893.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46909_2415:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46909.c'
    sources:
      binary: pr46909.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47028_2416:
  build:
    cflags: ' -O -foptimize-sibling-calls -fno-forward-propagate -fno-tree-copy-prop -fno-tree-dominator-opts'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47028.c'
    sources:
      binary: ./pr47028.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -foptimize-sibling-calls -fno-forward-propagate -fno-tree-copy-prop -fno-tree-dominator-opts"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47086_2417:
  build:
    cflags: ' -O -fexceptions -fnon-call-exceptions -ftrapv -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47086.c'
    sources:
      binary: pr47086.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fexceptions -fnon-call-exceptions -ftrapv"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47201_2418:
  build:
    cflags: ' -O -fpic -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47201.c'
    sources:
      binary: pr47201.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fpic -g" { target fpic }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47276_2419:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47276.c'
    sources:
      binary: pr47276.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47369-1_2420:
  build:
    cflags: ' -O2 -fPIC -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47369-1.c'
    sources:
      binary: pr47369-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47372-1_2421:
  build:
    cflags: ' -O2 -fPIC -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47372-1.c'
    sources:
      binary: pr47372-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47372-2_2422:
  build:
    cflags: ' -O2 -fPIC -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47372-2.c'
    sources:
      binary: pr47372-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47381-1_2423:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47381-1.c'
    sources:
      binary: pr47381-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47381-2_2424:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47381-2.c'
    sources:
      binary: pr47381-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47383_2425:
  build:
    cflags: ' -O2 -fPIC'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47383.c'
    sources:
      binary: ./pr47383.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47391_2426:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47391.c'
    sources:
      binary: pr47391.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47443_2427:
  build:
    cflags: ' -O -fstack-check=generic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47443.c'
    sources:
      binary: pr47443.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fstack-check=generic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47446-1_2428:
  build:
    cflags: ' -O2 -c'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47446-1.c'
    sources:
      binary: pr47446-1.o
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47446-2_2429:
  build:
    cflags: ' -O2 -fpic -c'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47446-2.c'
    sources:
      binary: pr47446-2.o
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47555_2430:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47555.c'
    sources:
      binary: pr47555.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47610_2431:
  build:
    cflags: ' -O2 -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47610.c'
    sources:
      binary: pr47610.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic" { target fpic }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47684_2432:
  build:
    cflags: ' -O3 -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47684.c'
    sources:
      binary: pr47684.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47727_2433:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47727.c'
    sources:
      binary: pr47727.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47763_2434:
  build:
    cflags: -O2 -funroll-loops -fdump-rtl-web -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47763.c'
    sources:
      binary: pr47763.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-loops -fdump-rtl-web"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47881_2435:
  build:
    cflags: ' -O -fcompare-debug -fno-dce -funroll-loops -fno-web -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47881.c'
    sources:
      binary: pr47881.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fcompare-debug -fno-dce -funroll-loops -fno-web"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47893_2436:
  build:
    cflags: ' -O2 -mtune=atom -fno-omit-frame-pointer -fno-strict-aliasing'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47893.c'
    sources:
      binary: ./pr47893.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47899_2437:
  build:
    cflags: ' -O -funroll-loops -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47899.c'
    sources:
      binary: pr47899.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47917_2438:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47917.c'
    sources:
      binary: pr47917.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47991_2439:
  build:
    cflags: ' -g -Os -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47991.c'
    sources:
      binary: pr47991.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g -Os"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48022-1_2440:
  build:
    cflags: ' -O2 -Wstrict-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48022-1.c'
    sources:
      binary: pr48022-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstrict-overflow"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48022-2_2441:
  build:
    cflags: ' -O2 -Wstrict-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48022-2.c'
    sources:
      binary: pr48022-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstrict-overflow"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48062_2442:
  build:
    cflags: ' -Wshadow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48062.c'
    sources:
      binary: pr48062.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wshadow"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48067_2443:
  build:
    cflags: ' -O2 -ffast-math -fno-tree-forwprop -fno-tree-reassoc -mfma4 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48067.c'
    sources:
      binary: pr48067.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math -fno-tree-forwprop -fno-tree-reassoc"'
      - '"-O2 -ffast-math -fno-tree-forwprop -fno-tree-reassoc -mfma4" { target x86_64-*-* i?86-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48134_2444:
  build:
    cflags: ' -O2 -fstack-check=specific -fno-tree-dse -fno-tree-fre -fno-tree-loop-optimize -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48134.c'
    sources:
      binary: pr48134.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fstack-check=specific -fno-tree-dse -fno-tree-fre -fno-tree-loop-optimize -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48141_2445:
  build:
    cflags: ' -O -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48141.c'
    sources:
      binary: pr48141.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48144_2446:
  build:
    cflags: ' -O -frerun-cse-after-loop -fschedule-insns2 -fselective-scheduling2 -fno-tree-ch -funroll-loops --param=max-sched-extend-regions-iters=2 --param=max-sched-region-blocks=15 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48144.c'
    sources:
      binary: pr48144.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -frerun-cse-after-loop -fschedule-insns2 -fselective-scheduling2 -fno-tree-ch -funroll-loops --param=max-sched-extend-regions-iters=2 --param=max-sched-region-blocks=15"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48156_2447:
  build:
    cflags: ' -O -fcrossjumping --param min-crossjump-insns=1'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48156.c'
    sources:
      binary: ./pr48156.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fcrossjumping --param min-crossjump-insns=1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48159-1_2448:
  build:
    cflags: ' -O3 -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48159-1.c'
    sources:
      binary: pr48159-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48159-2_2449:
  build:
    cflags: ' -O2 -ftree-loop-distribution -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48159-2.c'
    sources:
      binary: pr48159-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-loop-distribution -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48186_2450:
  build:
    cflags: ' -O --param hot-bb-frequency-fraction=0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48186.c'
    sources:
      binary: pr48186.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O --param hot-bb-frequency-fraction=0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48189_2451:
  build:
    cflags: ' -O --param max-predicted-iterations=0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48189.c'
    sources:
      binary: pr48189.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O --param max-predicted-iterations=0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48203_2452:
  build:
    cflags: ' -O2 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48203.c'
    sources:
      binary: pr48203.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48213_2453:
  build:
    cflags: ' -g -O2 -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48213.c'
    sources:
      binary: pr48213.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g -O2"'
      - '"-g -O2 -fpic" { target fpic }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48235_2454:
  build:
    cflags: ' -O -fno-guess-branch-probability -fpeel-loops -freorder-blocks-and-partition -fschedule-insns2 -fsel-sched-pipelining -fselective-scheduling2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48235.c'
    sources:
      binary: pr48235.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-guess-branch-probability -fpeel-loops -freorder-blocks-and-partition -fschedule-insns2 -fsel-sched-pipelining -fselective-scheduling2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48335-1_2455:
  build:
    cflags: ' -O2 -fno-tree-sra -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48335-1.c'
    sources:
      binary: pr48335-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-sra"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48335-2_2456:
  build:
    cflags: ' -O2 -fno-tree-sra -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48335-2.c'
    sources:
      binary: pr48335-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-sra"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48335-3_2457:
  build:
    cflags: ' -O2 -fno-tree-sra -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48335-3.c'
    sources:
      binary: pr48335-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-sra"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48335-4_2458:
  build:
    cflags: ' -O2 -fno-tree-sra -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48335-4.c'
    sources:
      binary: pr48335-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-sra"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48335-5_2459:
  build:
    cflags: ' -O2 -fno-tree-sra -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48335-5.c'
    sources:
      binary: pr48335-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-sra"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48335-6_2460:
  build:
    cflags: ' -O2 -fno-tree-sra -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48335-6.c'
    sources:
      binary: pr48335-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-sra"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48335-7_2461:
  build:
    cflags: ' -O2 -fno-tree-sra -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48335-7.c'
    sources:
      binary: pr48335-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-sra"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48335-8_2462:
  build:
    cflags: ' -O2 -fno-tree-sra -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48335-8.c'
    sources:
      binary: pr48335-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-sra"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48374_2463:
  build:
    cflags: ' -O -fschedule-insns2 -fsel-sched-pipelining -fsel-sched-pipelining-outer-loops -fselective-scheduling2 --param max-sched-extend-regions-iters=2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48374.c'
    sources:
      binary: pr48374.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fschedule-insns2 -fsel-sched-pipelining -fsel-sched-pipelining-outer-loops -fselective-scheduling2 --param max-sched-extend-regions-iters=2" '
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48442_2464:
  build:
    cflags: ' -Os -fselective-scheduling2 --param max-sched-extend-regions-iters=100 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48442.c'
    sources:
      binary: pr48442.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fselective-scheduling2 --param max-sched-extend-regions-iters=100"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48524_2465:
  build:
    cflags: ' -specs=./gcc.dg/pr48524.spec -D_TEST_D -E'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48524.c'
    sources:
      binary: pr48524.i
  group: GRPSERIAL
  info:
    extraopts:
      - '"-specs=${srcdir}/gcc.dg/pr48524.spec -D_TEST_D"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(works))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48552-1_2466:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48552-1.c'
    sources:
      binary: pr48552-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of void expression" "void expr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of void expression" "void expr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid lvalue in asm output 0" "invalid lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of void expression" "void expr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of void expression" "void expr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid lvalue in asm output 0" "invalid lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(dereferencing pointer to incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid lvalue in asm output 0))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing" "deref))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing" "deref))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing" "deref))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing" "deref))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48552-2_2467:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48552-2.c'
    sources:
      binary: pr48552-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of void expression" "void expr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of void expression" "void expr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid lvalue in asm output 0" "invalid lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of void expression" "void expr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of void expression" "void expr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid lvalue in asm output 0" "invalid lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(dereferencing pointer to incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid lvalue in asm output 0))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing" "deref))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing" "deref))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing" "deref))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing" "deref))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48616_2468:
  build:
    cflags: ' -O2 -ftree-vectorize'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48616.c'
    sources:
      binary: ./pr48616.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48685_2469:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48685.c'
    sources:
      binary: pr48685.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48739-1_2470:
  build:
    cflags: ' -O1 -ftree-parallelize-loops=2 -fno-tree-dominator-opts -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48739-1.c'
    sources:
      binary: pr48739-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -ftree-parallelize-loops=2 -fno-tree-dominator-opts"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48739-2_2471:
  build:
    cflags: ' -O1 -ftree-parallelize-loops=2 -fno-tree-dominator-opts -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48739-2.c'
    sources:
      binary: pr48739-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -ftree-parallelize-loops=2 -fno-tree-dominator-opts"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48768_2472:
  build:
    cflags: ' -O -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48768.c'
    sources:
      binary: pr48768.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48774_2473:
  build:
    cflags: ' -O2 -funroll-loops'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48774.c'
    sources:
      binary: ./pr48774.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48784-1_2474:
  build:
    cflags: ' -fstrict-volatile-bitfields'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48784-1.c'
    sources:
      binary: ./pr48784-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-volatile-bitfields"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48784-2_2475:
  build:
    cflags: ' -fno-strict-volatile-bitfields'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48784-2.c'
    sources:
      binary: ./pr48784-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-strict-volatile-bitfields"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48826_2476:
  build:
    cflags: ' -O -g -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48826.c'
    sources:
      binary: pr48826.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -g -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48837_2477:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48837.c'
    sources:
      binary: ./pr48837.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48975_2478:
  build:
    cflags: ' -O3 -ffast-math -fno-tree-slp-vectorize -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48975.c'
    sources:
      binary: pr48975.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -ffast-math -fno-tree-slp-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49000_2479:
  build:
    cflags: ' -O2 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49000.c'
    sources:
      binary: pr49000.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49069_2480:
  build:
    cflags: ' -Os -fno-tree-forwprop -Wno-div-by-zero -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49069.c'
    sources:
      binary: pr49069.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fno-tree-forwprop -Wno-div-by-zero"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49120_2481:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49120.c'
    sources:
      binary: pr49120.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49235_2482:
  build:
    cflags: ' -O -fno-delete-null-pointer-checks -fno-tree-scev-cprop -ftree-vectorize -fno-vect-cost-model -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49235.c'
    sources:
      binary: pr49235.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-delete-null-pointer-checks -fno-tree-scev-cprop -ftree-vectorize -fno-vect-cost-model -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49243_2483:
  build:
    cflags: ' -O2 -Winline -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49243.c'
    sources:
      binary: pr49243.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Winline"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*((inlining failed|function 'wrapper' can never be inlined because it uses setjmp)))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49496_2484:
  build:
    cflags: ' -O3 -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49496.c'
    sources:
      binary: pr49496.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49544_2485:
  build:
    cflags: ' -g -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49544.c'
    sources:
      binary: pr49544.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49551_2486:
  build:
    cflags: -O -fdata-sections -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49551.c'
    sources:
      binary: pr49551.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdata-sections"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49602_2487:
  build:
    cflags: ' -g -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49602.c'
    sources:
      binary: pr49602.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49619_2488:
  build:
    cflags: ' -O -fno-tree-fre -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49619.c'
    sources:
      binary: pr49619.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-fre"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49696_2489:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49696.c'
    sources:
      binary: pr49696.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49705_2490:
  build:
    cflags: ' -O2 -Wstrict-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49705.c'
    sources:
      binary: pr49705.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstrict-overflow"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49799_2491:
  build:
    cflags: ' -O2 -w -c'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49799.c'
    sources:
      binary: pr49799.o
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49860_2492:
  build:
    cflags: ' -O3 -funroll-all-loops -c'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49860.c'
    sources:
      binary: pr49860.o
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -funroll-all-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49899_2493:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49899.c'
    sources:
      binary: pr49899.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:1:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(weak declaration of 'foo' being applied to a already existing, static definition))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49948_2494:
  build:
    cflags: ' -O3 -ftree-parallelize-loops=2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49948.c'
    sources:
      binary: pr49948.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -ftree-parallelize-loops=2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49994-1_2495:
  build:
    cflags: ' -Os -fsched2-use-superblocks -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49994-1.c'
    sources:
      binary: pr49994-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fsched2-use-superblocks -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49994-2_2496:
  build:
    cflags: ' -O -fno-omit-frame-pointer -fschedule-insns2 -fsched2-use-superblocks -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49994-2.c'
    sources:
      binary: pr49994-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-omit-frame-pointer -fschedule-insns2 -fsched2-use-superblocks -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49994-3_2497:
  build:
    cflags: ' -O2 -fsched2-use-superblocks -g -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49994-3.c'
    sources:
      binary: pr49994-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fsched2-use-superblocks -g -w"'
      - '"-O2 -fsched2-use-superblocks -g -mbackchain" { target s390*-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50017_2498:
  build:
    cflags: ' -O3 -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50017.c'
    sources:
      binary: pr50017.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50078_2499:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50078.c'
    sources:
      binary: pr50078.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50132_2500:
  build:
    cflags: ' -Os -fno-asynchronous-unwind-tables -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50132.c'
    sources:
      binary: pr50132.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fno-asynchronous-unwind-tables -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50133_2501:
  build:
    cflags: ' -O -ftree-vectorize -fno-tree-loop-im -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50133.c'
    sources:
      binary: pr50133.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ftree-vectorize -fno-tree-loop-im"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50161_2502:
  build:
    cflags: ' -O2 -fno-tree-ter -funroll-loops'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50161.c'
    sources:
      binary: ./pr50161.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-ter -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50193-1_2503:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50193-1.c'
    sources:
      binary: pr50193-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(left shift count is negative))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50205_2504:
  build:
    cflags: ' -O2 -fno-cprop-registers -fno-dce -fno-forward-propagate -fselective-scheduling2 -funroll-loops -fno-web -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50205.c'
    sources:
      binary: pr50205.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-cprop-registers -fno-dce -fno-forward-propagate -fselective-scheduling2 -funroll-loops -fno-web"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50251_2505:
  build:
    cflags: ' -O2 -mpreferred-stack-boundary=12 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50251.c'
    sources:
      binary: pr50251.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50290_2506:
  build:
    cflags: ' -O2 -fno-tree-loop-optimize -fno-tree-vrp -funroll-loops'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50290.c'
    sources:
      binary: ./pr50290.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-loop-optimize -fno-tree-vrp -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50310-1_2507:
  build:
    cflags: ' -O3'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50310-1.c'
    sources:
      binary: ./pr50310-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
      - '"-O3 -mavx -mno-avx2" { target avx_runtime }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50310-2_2508:
  build:
    cflags: ' -O3'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50310-2.c'
    sources:
      binary: ./pr50310-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
      - '"-O3 -mavx" { target avx_runtime }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50340_2509:
  build:
    cflags: ' -O3 -fselective-scheduling2 -funroll-loops -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50340.c'
    sources:
      binary: pr50340.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fselective-scheduling2 -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50527_2510:
  build:
    cflags: ' -Os --param large-stack-frame=30 -Wno-pointer-to-int-cast'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50527.c'
    sources:
      binary: ./pr50527.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os --param large-stack-frame=30 -Wno-pointer-to-int-cast"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50571_2511:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50571.c'
    sources:
      binary: pr50571.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50604_2512:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50604.c'
    sources:
      binary: pr50604.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50613_2513:
  build:
    cflags: ' -O2 -fno-tree-ccp -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50613.c'
    sources:
      binary: pr50613.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-ccp"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50717-1_2514:
  build:
    cflags: ' -O2 -fdump-tree-widening_mul -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50717-1.c'
    sources:
      binary: pr50717-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50763-2_2515:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50763-2.c'
    sources:
      binary: pr50763-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50763-5_2516:
  build:
    cflags: ' -O2 -ftree-tail-merge -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50763-5.c'
    sources:
      binary: pr50763-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50763_2517:
  build:
    cflags: ' -O2 -ftree-tail-merge -fno-tree-dominator-opts -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50763.c'
    sources:
      binary: pr50763.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fno-tree-dominator-opts"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50764_2518:
  build:
    cflags: ' -O2 -fsched2-use-superblocks -ftree-tail-merge -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50764.c'
    sources:
      binary: pr50764.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fsched2-use-superblocks -ftree-tail-merge"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50765_2519:
  build:
    cflags: ' -O3 -fno-tree-dce -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50765.c'
    sources:
      binary: pr50765.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fno-tree-dce"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50827_2520:
  build:
    cflags: ' -g -O2 -funroll-loops -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50827.c'
    sources:
      binary: pr50827.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g -O2 -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50908-2_2521:
  build:
    cflags: ' -O2 -ftree-tail-merge -fno-short-enums -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50908-2.c'
    sources:
      binary: pr50908-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fno-short-enums"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50908-3_2522:
  build:
    cflags: ' -O2 -ftree-tail-merge -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50908-3.c'
    sources:
      binary: pr50908-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50908_2523:
  build:
    cflags: ' -O2 -ftree-tail-merge -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50908.c'
    sources:
      binary: pr50908.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51012-1_2524:
  build:
    cflags: ' -O2 -fno-early-inlining -fno-ipa-cp -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51012-1.c'
    sources:
      binary: pr51012-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-early-inlining -fno-ipa-cp"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51012-2_2525:
  build:
    cflags: ' -O2 -fno-early-inlining -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51012-2.c'
    sources:
      binary: pr51012-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-early-inlining"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51034_2526:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51034.c'
    sources:
      binary: pr51034.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51039_2527:
  build:
    cflags: ' -O -finline-small-functions -fno-ipa-pure-const -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51039.c'
    sources:
      binary: pr51039.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -finline-small-functions -fno-ipa-pure-const"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51261_2528:
  build:
    cflags: ' -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51261.c'
    sources:
      binary: pr51261.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51321_2529:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51321.c'
    sources:
      binary: pr51321.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51408_2530:
  build:
    cflags: ' -O1'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51408.c'
    sources:
      binary: ./pr51408.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51481_2531:
  build:
    cflags: ' -O -fexceptions -fipa-cp -fipa-cp-clone -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51481.c'
    sources:
      binary: pr51481.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fexceptions -fipa-cp -fipa-cp-clone"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51491-2_2532:
  build:
    cflags: ' -O2 -fdump-tree-ccp1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51491-2.c'
    sources:
      binary: pr51491-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-ccp1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51491_2533:
  build:
    cflags: -O2 -fdump-rtl-expand -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51491.c'
    sources:
      binary: pr51491.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-expand"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51505_2534:
  build:
    cflags: ' -O --param max-cse-insns=1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51505.c'
    sources:
      binary: pr51505.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O --param max-cse-insns=1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51519_2535:
  build:
    cflags: ' -O -fno-guess-branch-probability -findirect-inlining -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51519.c'
    sources:
      binary: pr51519.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-guess-branch-probability -findirect-inlining"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51557_2536:
  build:
    cflags: ' -Os -fno-asynchronous-unwind-tables -g -fsel-sched-pipelining -fselective-scheduling2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51557.c'
    sources:
      binary: pr51557.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fno-asynchronous-unwind-tables -g -fsel-sched-pipelining -fselective-scheduling2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51644_2537:
  build:
    cflags: ' -Wall -fexceptions -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51644.c'
    sources:
      binary: pr51644.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -fexceptions"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51683_2538:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51683.c'
    sources:
      binary: pr51683.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51695_2539:
  build:
    cflags: ' -O2 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51695.c'
    sources:
      binary: pr51695.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51721_2540:
  build:
    cflags: ' -O2 -Warray-bounds -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51721.c'
    sources:
      binary: pr51721.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Warray-bounds"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51762_2541:
  build:
    cflags: ' -g -Os -fomit-frame-pointer -fno-asynchronous-unwind-tables -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51762.c'
    sources:
      binary: pr51762.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g -Os -fomit-frame-pointer -fno-asynchronous-unwind-tables"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51796_2542:
  build:
    cflags: ' -Os -fno-omit-frame-pointer -fno-tree-dominator-opts -fno-tree-fre -fno-tree-pre -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51796.c'
    sources:
      binary: pr51796.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fno-omit-frame-pointer -fno-tree-dominator-opts -fno-tree-fre -fno-tree-pre"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51865_2543:
  build:
    cflags: ' -O2 -fipa-pta -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51865.c'
    sources:
      binary: pr51865.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fipa-pta"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51867_2544:
  build:
    cflags: -O0 -fno-math-errno -fdump-rtl-expand -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51867.c'
    sources:
      binary: pr51867.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0 -fno-math-errno -fdump-rtl-expand"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51879-12_2545:
  build:
    cflags: ' -O2 -ftree-tail-merge -fdump-tree-pre -fno-code-hoisting -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51879-12.c'
    sources:
      binary: pr51879-12.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre -fno-code-hoisting"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51879-16_2546:
  build:
    cflags: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51879-16.c'
    sources:
      binary: pr51879-16.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51879-17_2547:
  build:
    cflags: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51879-17.c'
    sources:
      binary: pr51879-17.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51879-18_2548:
  build:
    cflags: ' -O2 -ftree-tail-merge -fdump-tree-pre -fno-tree-copy-prop -fno-tree-dominator-opts -fno-tree-copyrename -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51879-18.c'
    sources:
      binary: pr51879-18.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre -fno-tree-copy-prop -fno-tree-dominator-opts -fno-tree-copyrename"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51879-2_2549:
  build:
    cflags: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51879-2.c'
    sources:
      binary: pr51879-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51879-3_2550:
  build:
    cflags: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51879-3.c'
    sources:
      binary: pr51879-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51879-4_2551:
  build:
    cflags: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51879-4.c'
    sources:
      binary: pr51879-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51879-6_2552:
  build:
    cflags: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51879-6.c'
    sources:
      binary: pr51879-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51879-7_2553:
  build:
    cflags: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51879-7.c'
    sources:
      binary: pr51879-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51879_2554:
  build:
    cflags: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51879.c'
    sources:
      binary: pr51879.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51957-1_2555:
  build:
    cflags: ' -O2 -g -fprofile-use'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51957-1.c'
    sources:
      binary: pr51957-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g -fprofile-use"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51957-2_2556:
  build:
    cflags: ' -O0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51957-2.c'
    sources:
      binary: pr51957-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51990-2_2557:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51990-2.c'
    sources:
      binary: pr51990-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51990_2558:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51990.c'
    sources:
      binary: pr51990.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52045_2559:
  build:
    cflags: ' -O3 -ftracer -fno-tree-ccp -fno-tree-copy-prop -fno-tree-dce -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52045.c'
    sources:
      binary: pr52045.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -ftracer -fno-tree-ccp -fno-tree-copy-prop -fno-tree-dce"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52046_2560:
  build:
    cflags: ' -O3 -fexceptions -fnon-call-exceptions -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52046.c'
    sources:
      binary: pr52046.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fexceptions -fnon-call-exceptions"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52086_2561:
  build:
    cflags: ' -O2 -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52086.c'
    sources:
      binary: pr52086.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52132_2562:
  build:
    cflags: ' -std=c99 -O2 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52132.c'
    sources:
      binary: pr52132.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -O2 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52134_2563:
  build:
    cflags: ' -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52134.c'
    sources:
      binary: pr52134.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52139_2564:
  build:
    cflags: ' -O -fno-tree-dominator-opts -fno-tree-fre -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52139.c'
    sources:
      binary: pr52139.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-dominator-opts -fno-tree-fre"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52171_2565:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52171.c'
    sources:
      binary: pr52171.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52210_2566:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52210.c'
    sources:
      binary: pr52210.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52267_2567:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52267.c'
    sources:
      binary: pr52267.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52283_2568:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52283.c'
    sources:
      binary: pr52283.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(case label is not an integer constant expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52318_2569:
  build:
    cflags: ' -O3 -ftracer -fno-tree-ccp -fno-tree-copy-prop -fno-tree-dce -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52318.c'
    sources:
      binary: pr52318.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -ftracer -fno-tree-ccp -fno-tree-copy-prop -fno-tree-dce"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52355_2570:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52355.c'
    sources:
      binary: pr52355.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52445_2571:
  build:
    cflags: ' -O2 -ftree-cselim -fdump-tree-cselim -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52445.c'
    sources:
      binary: pr52445.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-cselim -fdump-tree-cselim"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52448_2572:
  build:
    cflags: ' -O2 -ftree-cselim -fdump-tree-cselim-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52448.c'
    sources:
      binary: pr52448.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-cselim -fdump-tree-cselim-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52549_2573:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52549.c'
    sources:
      binary: pr52549.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52578_2574:
  build:
    cflags: ' -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52578.c'
    sources:
      binary: pr52578.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52592_2575:
  build:
    cflags: -std=gnu99 -O2 -ffast-math -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52592.c'
    sources:
      binary: pr52592.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52691_2576:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52691.c'
    sources:
      binary: pr52691.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52734_2577:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52734.c'
    sources:
      binary: ./pr52734.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52769_2578:
  build:
    cflags: ' -O3'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52769.c'
    sources:
      binary: ./pr52769.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52803_2579:
  build:
    cflags: ' -O -fno-move-loop-invariants -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52803.c'
    sources:
      binary: pr52803.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-move-loop-invariants"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52808_2580:
  build:
    cflags: ' -O -ftracer -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52808.c'
    sources:
      binary: pr52808.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ftracer"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52862_2581:
  build:
    cflags: ' -O -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52862.c'
    sources:
      binary: pr52862.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52880_2582:
  build:
    cflags: ' -Woverride-init -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52880.c'
    sources:
      binary: pr52880.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Woverride-init"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52904_2583:
  build:
    cflags: ' -Wstrict-overflow -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52904.c'
    sources:
      binary: pr52904.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wstrict-overflow -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53060_2584:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53060.c'
    sources:
      binary: ./pr53060.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53119_2585:
  build:
    cflags: ' -Wmissing-braces -Wmissing-field-initializers -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53119.c'
    sources:
      binary: pr53119.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-braces -Wmissing-field-initializers"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(missing initializer for))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(missing initializer for))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53153_2586:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53153.c'
    sources:
      binary: pr53153.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53174_2587:
  build:
    cflags: ' -Ofast -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53174.c'
    sources:
      binary: pr53174.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Ofast -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53196-1_2588:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53196-1.c'
    sources:
      binary: pr53196-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53196-2_2589:
  build:
    cflags: ' -std=c99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53196-2.c'
    sources:
      binary: pr53196-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids empty initializer braces" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53265_2590:
  build:
    cflags: ' -O2 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53265.c'
    sources:
      binary: pr53265.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(64 invokes undefined behavior))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(112 invokes undefined behavior))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(8 invokes undefined behavior))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(32 invokes undefined behavior" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(950 invokes undefined behavior))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(3 invokes undefined behavior))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(15 invokes undefined behavior" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: warning:[^
        ]*(2 invokes undefined behavior))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53352_2591:
  build:
    cflags: ' -O1'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53352.c'
    sources:
      binary: ./pr53352.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53358_2592:
  build:
    cflags: ' -O2 -fpic -mtune=pentium4 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53358.c'
    sources:
      binary: pr53358.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53532_2593:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53532.c'
    sources:
      binary: pr53532.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53550_2594:
  build:
    cflags: ' -O2 -fprefetch-loop-arrays -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53550.c'
    sources:
      binary: pr53550.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fprefetch-loop-arrays -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53701_2595:
  build:
    cflags: ' -O3 -fselective-scheduling2 -fsel-sched-pipelining -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53701.c'
    sources:
      binary: pr53701.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fselective-scheduling2 -fsel-sched-pipelining"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53749_2596:
  build:
    cflags: ' -O2 -ftree-vectorize -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53749.c'
    sources:
      binary: pr53749.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53849_2597:
  build:
    cflags: ' -O2 -ftree-parallelize-loops=2 -fno-tree-loop-im -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53849.c'
    sources:
      binary: pr53849.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-parallelize-loops=2 -fno-tree-loop-im"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53881-1_2598:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53881-1.c'
    sources:
      binary: pr53881-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53881-2_2599:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53881-2.c'
    sources:
      binary: pr53881-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53887_2600:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53887.c'
    sources:
      binary: pr53887.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53942_2601:
  build:
    cflags: ' -O2 -mtune=pentium2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53942.c'
    sources:
      binary: pr53942.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53979-1_2602:
  build:
    cflags: ' -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53979-1.c'
    sources:
      binary: pr53979-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53979-2_2603:
  build:
    cflags: ' -O2 -fdump-tree-forwprop-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53979-2.c'
    sources:
      binary: pr53979-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-forwprop-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr54087_2604:
  build:
    cflags: -ansi -pedantic-errors -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr54087.c'
    sources:
      binary: pr54087.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr54113_2605:
  build:
    cflags: ' -Wmissing-prototypes -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr54113.c'
    sources:
      binary: pr54113.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-prototypes"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr54355_2606:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr54355.c'
    sources:
      binary: pr54355.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((label|unknown type|expected)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr54363_2607:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr54363.c'
    sources:
      binary: pr54363.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*((initialization|excess elements)))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr54472_2608:
  build:
    cflags: ' -O -fschedule-insns -fselective-scheduling -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr54472.c'
    sources:
      binary: pr54472.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fschedule-insns -fselective-scheduling"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr54669_2609:
  build:
    cflags: ' -O2 -fexceptions -fnon-call-exceptions -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr54669.c'
    sources:
      binary: pr54669.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fexceptions -fnon-call-exceptions"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr54676_2610:
  build:
    cflags: ' -O -fno-tree-ccp -fno-tree-copy-prop -fno-tree-fre -ftree-vrp -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr54676.c'
    sources:
      binary: pr54676.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-ccp -fno-tree-copy-prop -fno-tree-fre -ftree-vrp"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr54782_2611:
  build:
    cflags: ' -O -ffast-math -ftree-parallelize-loops=2 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr54782.c'
    sources:
      binary: pr54782.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ffast-math -ftree-parallelize-loops=2 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr54838_2612:
  build:
    cflags: ' -O2 -fno-forward-propagate -ftracer -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr54838.c'
    sources:
      binary: pr54838.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-forward-propagate -ftracer"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr54919_2613:
  build:
    cflags: ' -O3 -ffast-math -funroll-loops -fvariable-expansion-in-unroller'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr54919.c'
    sources:
      binary: ./pr54919.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -ffast-math -funroll-loops -fvariable-expansion-in-unroller"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr54921_2614:
  build:
    cflags: ' -Os -fno-omit-frame-pointer -fsched2-use-superblocks -ftree-slp-vectorize'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr54921.c'
    sources:
      binary: ./pr54921.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fno-omit-frame-pointer -fsched2-use-superblocks -ftree-slp-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr54981_2615:
  build:
    cflags: ' -O -ftree-loop-distribute-patterns -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr54981.c'
    sources:
      binary: pr54981.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ftree-loop-distribute-patterns -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55010_2616:
  build:
    cflags: ' -O2 -march=i686 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55010.c'
    sources:
      binary: pr55010.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55019_2617:
  build:
    cflags: ' -O1 -funroll-loops'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55019.c'
    sources:
      binary: ./pr55019.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55023_2618:
  build:
    cflags: ' -O2 -fno-inline'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55023.c'
    sources:
      binary: ./pr55023.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-inline"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55027_2619:
  build:
    cflags: ' -Ofast -fdump-tree-optimized-raw -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55027.c'
    sources:
      binary: pr55027.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Ofast -fdump-tree-optimized-raw"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55094_2620:
  build:
    cflags: ' -fcompare-debug -Os -fomit-frame-pointer -fno-asynchronous-unwind-tables -mpreferred-stack-boundary=2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55094.c'
    sources:
      binary: pr55094.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fcompare-debug -Os"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55110_2621:
  build:
    cflags: ' -O1 -ftree-vectorize -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55110.c'
    sources:
      binary: pr55110.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -ftree-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55122_2622:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55122.c'
    sources:
      binary: pr55122.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55150-1_2623:
  build:
    cflags: ' -Os -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55150-1.c'
    sources:
      binary: pr55150-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55150-2_2624:
  build:
    cflags: ' -Os -g -fPIC -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55150-2.c'
    sources:
      binary: pr55150-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -g -fPIC"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55152-2_2625:
  build:
    cflags: ' -O -ffinite-math-only -fno-signed-zeros -fstrict-overflow -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55152-2.c'
    sources:
      binary: pr55152-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ffinite-math-only -fno-signed-zeros -fstrict-overflow -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55152_2626:
  build:
    cflags: ' -O -ffinite-math-only -fno-signed-zeros -fstrict-overflow -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55152.c'
    sources:
      binary: pr55152.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ffinite-math-only -fno-signed-zeros -fstrict-overflow -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55153_2627:
  build:
    cflags: ' -O -fsched2-use-superblocks -fschedule-insns2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55153.c'
    sources:
      binary: pr55153.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fsched2-use-superblocks -fschedule-insns2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55191_2628:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55191.c'
    sources:
      binary: pr55191.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55236_2629:
  build:
    cflags: ' -O2 -fwrapv'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55236.c'
    sources:
      binary: ./pr55236.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fwrapv"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55430_2630:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55430.c'
    sources:
      binary: ./pr55430.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55570_2631:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55570.c'
    sources:
      binary: pr55570.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared here))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55702_2632:
  build:
    cflags: ' -fsanitize=thread -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55702.c'
    sources:
      binary: pr55702.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fsanitize=thread"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55831_2633:
  build:
    cflags: ' -O -fstrict-overflow -ftree-vectorize -Wno-unused-label -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55831.c'
    sources:
      binary: pr55831.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fstrict-overflow -ftree-vectorize -Wno-unused-label"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55833_2634:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55833.c'
    sources:
      binary: pr55833.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55838_2635:
  build:
    cflags: ' -O2 -funroll-loops -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55838.c'
    sources:
      binary: pr55838.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55940_2636:
  build:
    cflags: ' -Os -mpreferred-stack-boundary=2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55940.c'
    sources:
      binary: ./pr55940.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56023_2637:
  build:
    cflags: ' -O2 -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56023.c'
    sources:
      binary: pr56023.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56035_2638:
  build:
    cflags: ' -O1 -ftree-vectorize -fcse-follow-jumps -fstrict-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56035.c'
    sources:
      binary: pr56035.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -ftree-vectorize -fcse-follow-jumps -fstrict-overflow"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56078_2639:
  build:
    cflags: ' -std=gnu99'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56078.c'
    sources:
      binary: ./pr56078.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56094_2640:
  build:
    cflags: ' -O2 -g -fdump-tree-optimized-lineno -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56094.c'
    sources:
      binary: pr56094.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g -fdump-tree-optimized-lineno"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56098-1_2641:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56098-1.c'
    sources:
      binary: pr56098-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56098-2_2642:
  build:
    cflags: ' -O2 -fhoist-adjacent-loads -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56098-2.c'
    sources:
      binary: pr56098-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fhoist-adjacent-loads -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56117_2643:
  build:
    cflags: ' -O2 -fsched2-use-superblocks -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56117.c'
    sources:
      binary: pr56117.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fsched2-use-superblocks"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56125_2644:
  build:
    cflags: ' -O2 -ffast-math'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56125.c'
    sources:
      binary: ./pr56125.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56144_2645:
  build:
    cflags: ' -O -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56144.c'
    sources:
      binary: pr56144.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56167_2646:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56167.c'
    sources:
      binary: pr56167.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56228_2647:
  build:
    cflags: ' -O2 -c'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56228.c'
    sources:
      binary: pr56228.o
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56275_2648:
  build:
    cflags: ' -O2 -mno-sse -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56275.c'
    sources:
      binary: pr56275.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56341-1_2649:
  build:
    cflags: ' -fstrict-volatile-bitfields'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56341-1.c'
    sources:
      binary: ./pr56341-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-volatile-bitfields"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56341-2_2650:
  build:
    cflags: ' -fno-strict-volatile-bitfields'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56341-2.c'
    sources:
      binary: ./pr56341-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-strict-volatile-bitfields"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56350_2651:
  build:
    cflags: ' -O -ftree-vectorize -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56350.c'
    sources:
      binary: pr56350.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ftree-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56355-1_2652:
  build:
    cflags: ' -O2 -Wstrict-overflow=4 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56355-1.c'
    sources:
      binary: pr56355-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstrict-overflow=4"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming signed overflow))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56396_2653:
  build:
    cflags: ' -O2 -fpic -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56396.c'
    sources:
      binary: pr56396.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56424_2654:
  build:
    cflags: ' -O2 -fexceptions -fnon-call-exceptions -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56424.c'
    sources:
      binary: pr56424.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fexceptions -fnon-call-exceptions"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56436_2655:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56436.c'
    sources:
      binary: pr56436.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56466_2656:
  build:
    cflags: ' -O2 -w -funroll-loops -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56466.c'
    sources:
      binary: pr56466.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -w -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56494_2657:
  build:
    cflags: ' -O2 -ftracer -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56494.c'
    sources:
      binary: pr56494.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftracer -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56510_2658:
  build:
    cflags: ' -O2 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56510.c'
    sources:
      binary: pr56510.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56548_2659:
  build:
    cflags: ' -O3 -march=pentium3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56548.c'
    sources:
      binary: pr56548.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56724-1_2660:
  build:
    cflags: ' -Wtraditional-conversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56724-1.c'
    sources:
      binary: pr56724-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional-conversion"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:type of formal parameter))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(13:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(13:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(17:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(13:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(17:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(13:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(13:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(11:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(10:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(13:passing argument))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56724-2_2661:
  build:
    cflags: ' -Wc++-compat -Wpedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56724-2.c'
    sources:
      binary: pr56724-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat -Wpedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(10:ISO C forbids passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(10:enum conversion when passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(17:pointer targets in passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(17:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(17:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(11:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(17:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(38:passing argument))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56724-3_2662:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56724-3.c'
    sources:
      binary: pr56724-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(15:incompatible type for))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(23:request for implicit conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(15:request for implicit conversion))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56809_2663:
  build:
    cflags: ' -Os -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56809.c'
    sources:
      binary: pr56809.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56824_2664:
  build:
    cflags: ' -Waggregate-return -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56824.c'
    sources:
      binary: pr56824.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Waggregate-return"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56837_2665:
  build:
    cflags: ' -O3 -fdump-tree-optimized -msse2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56837.c'
    sources:
      binary: pr56837.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56847_2666:
  build:
    cflags: ' -O2 -fpie -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56847.c'
    sources:
      binary: pr56847.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpie"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56890-1_2667:
  build:
    cflags: ' -O2 -c'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56890-1.c'
    sources:
      binary: pr56890-1.o
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56890-2_2668:
  build:
    cflags: ' -O -c'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56890-2.c'
    sources:
      binary: pr56890-2.o
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56977_2669:
  build:
    cflags: ' -Og -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56977.c'
    sources:
      binary: pr56977.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Og"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56980_2670:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56980.c'
    sources:
      binary: pr56980.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56989_2671:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56989.c'
    sources:
      binary: pr56989.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10:void value not ignored as it ought to be))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:void value not ignored as it ought to be))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56990_2672:
  build:
    cflags: ' -fsanitize=thread -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56990.c'
    sources:
      binary: pr56990.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fsanitize=thread"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56992_2673:
  build:
    cflags: ' -Og -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56992.c'
    sources:
      binary: pr56992.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Og -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56997-1_2674:
  build:
    cflags: ' -fstrict-volatile-bitfields'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56997-1.c'
    sources:
      binary: ./pr56997-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-volatile-bitfields"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56997-2_2675:
  build:
    cflags: ' -fstrict-volatile-bitfields'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56997-2.c'
    sources:
      binary: ./pr56997-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-volatile-bitfields"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56997-3_2676:
  build:
    cflags: ' -fstrict-volatile-bitfields'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56997-3.c'
    sources:
      binary: ./pr56997-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-volatile-bitfields"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56997-4_2677:
  build:
    cflags: -fno-strict-volatile-bitfields -fdump-rtl-final -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56997-4.c'
    sources:
      binary: pr56997-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-strict-volatile-bitfields -fdump-rtl-final"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57104_2678:
  build:
    cflags: ' -fsanitize=thread -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57104.c'
    sources:
      binary: pr57104.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fsanitize=thread"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57105_2679:
  build:
    cflags: ' -Os -fselective-scheduling2 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57105.c'
    sources:
      binary: pr57105.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fselective-scheduling2 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57134_2680:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57134.c'
    sources:
      binary: pr57134.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -mstrict-align" { target { powerpc*-*-linux* powerpc*-*-elf* } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57149_2681:
  build:
    cflags: ' -Os -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57149.c'
    sources:
      binary: pr57149.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57154_2682:
  build:
    cflags: ' -O2 -fschedule-insns -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57154.c'
    sources:
      binary: pr57154.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fschedule-insns"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57184_2683:
  build:
    cflags: ' -O2 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57184.c'
    sources:
      binary: pr57184.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57233_2684:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57233.c'
    sources:
      binary: ./pr57233.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57286_2685:
  build:
    cflags: ' -O -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57286.c'
    sources:
      binary: pr57286.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57287-2_2686:
  build:
    cflags: ' -O2 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57287-2.c'
    sources:
      binary: pr57287-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57287_2687:
  build:
    cflags: ' -O2 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57287.c'
    sources:
      binary: pr57287.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57300_2688:
  build:
    cflags: ' -O3'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57300.c'
    sources:
      binary: ./pr57300.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57518_2689:
  build:
    cflags: -O2 -fdump-rtl-ira -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57518.c'
    sources:
      binary: pr57518.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-ira"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57662_2690:
  build:
    cflags: '  -O -fno-guess-branch-probability -fpeel-loops -freorder-blocks-and-partition -fschedule-insns2 -fsel-sched-pipelining -fselective-scheduling2 -ftree-pre -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57662.c'
    sources:
      binary: pr57662.s
  group: GRPSERIAL
  info:
    extraopts:
      - '" -O -fno-guess-branch-probability -fpeel-loops -freorder-blocks-and-partition -fschedule-insns2 -fsel-sched-pipelining -fselective-scheduling2 -ftree-pre"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57773_2691:
  build:
    cflags: ' -std=c99 -Wpedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57773.c'
    sources:
      binary: pr57773.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -Wpedantic"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57980_2692:
  build:
    cflags: ' -O -foptimize-sibling-calls -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57980.c'
    sources:
      binary: pr57980.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -foptimize-sibling-calls -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr58010_2693:
  build:
    cflags: ' -O2 -funswitch-loops -ftree-vectorize -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr58010.c'
    sources:
      binary: pr58010.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funswitch-loops -ftree-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr58145-1_2694:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr58145-1.c'
    sources:
      binary: pr58145-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr58145-2_2695:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr58145-2.c'
    sources:
      binary: pr58145-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr58346_2696:
  build:
    cflags: ' -O -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr58346.c'
    sources:
      binary: pr58346.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr58463_2697:
  build:
    cflags: ' -fdump-tree-ealias-details -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr58463.c'
    sources:
      binary: pr58463.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-ealias-details -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr58668_2698:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr58668.c'
    sources:
      binary: pr58668.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr58742-1_2699:
  build:
    cflags: ' -O -fdump-tree-cddce1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr58742-1.c'
    sources:
      binary: pr58742-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr58742-2_2700:
  build:
    cflags: ' -O -fdump-tree-cddce1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr58742-2.c'
    sources:
      binary: pr58742-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr58742-3_2701:
  build:
    cflags: ' -O -fdump-tree-cddce1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr58742-3.c'
    sources:
      binary: pr58742-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr58805_2702:
  build:
    cflags: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr58805.c'
    sources:
      binary: pr58805.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr58893_2703:
  build:
    cflags: ' -include pr58893-0.h -include pr58893-1.h -I./gcc.dg -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr58893.c'
    sources:
      binary: pr58893.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-include pr58893-0.h -include pr58893-1.h -I${srcdir}/gcc.dg"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pr58893-1.h: No such file or directory" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr58981_2704:
  build:
    cflags: ' -O2 -minline-all-stringops'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr58981.c'
    sources:
      binary: ./pr58981.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59011_2705:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59011.c'
    sources:
      binary: pr59011.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59020_2706:
  build:
    cflags: ' -O2 -fmodulo-sched -fno-inline -march=corei7 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59020.c'
    sources:
      binary: pr59020.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched -fno-inline -march=corei7"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59261_2707:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59261.c'
    sources:
      binary: pr59261.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59304_2708:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59304.c'
    sources:
      binary: pr59304.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59350-2_2709:
  build:
    cflags: ' -O -g  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59350-2.c'
    sources:
      binary: pr59350-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -g "'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59350_2710:
  build:
    cflags: ' -O -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59350.c'
    sources:
      binary: pr59350.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59351_2711:
  build:
    cflags: ' -std=c99 -Wpedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59351.c'
    sources:
      binary: pr59351.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -Wpedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids empty initializer braces))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59418_2712:
  build:
    cflags: ' -Os -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59418.c'
    sources:
      binary: pr59418.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -g"'
      - '"-march=armv7-a -mfloat-abi=hard -Os -g" { target { arm*-*-* && { ! arm_thumb1 } } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59471_2713:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59471.c'
    sources:
      binary: pr59471.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59523_2714:
  build:
    cflags: ' -O3 -mavx2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59523.c'
    sources:
      binary: pr59523.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59605-2_2715:
  build:
    cflags: ' -O2 -minline-stringops-dynamically'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59605-2.c'
    sources:
      binary: ./pr59605-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59605_2716:
  build:
    cflags: ' -O2 -minline-stringops-dynamically -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59605.c'
    sources:
      binary: pr59605.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59630_2717:
  build:
    cflags: ' -O -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59630.c'
    sources:
      binary: pr59630.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*())[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59643_2718:
  build:
    cflags: ' -O3 -fdump-tree-pcom-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59643.c'
    sources:
      binary: pr59643.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-tree-pcom-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59670_2719:
  build:
    cflags: ' -O1 -fopenmp-simd -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59670.c'
    sources:
      binary: pr59670.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fopenmp-simd"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59717_2720:
  build:
    cflags: ' -std=gnu11 -Wno-implicit-function-declaration -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59717.c'
    sources:
      binary: pr59717.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11 -Wno-implicit-function-declaration"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:131:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:133:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:135:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:153:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:161:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:165:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:171:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:178:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:182:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:186:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:194:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:204:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:206:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:210:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:212:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:222:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:224:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:226:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:228:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:230:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:232:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:234:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:236:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:243:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:245:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:247:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:249:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:251:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:253:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:255:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:257:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:259:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:266:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:275:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59722_2721:
  build:
    cflags: ' -O2 -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59722.c'
    sources:
      binary: pr59722.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59827_2722:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59827.c'
    sources:
      binary: pr59827.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(type of formal parameter 1 is incomplete))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59846_2723:
  build:
    cflags: ' -Wlogical-op -Wtype-limits -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59846.c'
    sources:
      binary: pr59846.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wlogical-op -Wtype-limits"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(15:comparison is always false due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(15:comparison is always true due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(12:comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(12:comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(12:logical))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(12:logical))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59860_2724:
  build:
    cflags: ' -O -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59860.c'
    sources:
      binary: pr59860.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59871_2725:
  build:
    cflags: ' -Wunused -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59871.c'
    sources:
      binary: pr59871.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wunused"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(right-hand operand of comma expression has no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(left-hand operand of comma expression has no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(right-hand operand of comma expression has no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(right-hand operand of comma expression has no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(left-hand operand of comma expression has no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(right-hand operand of comma expression has no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(right-hand operand of comma expression has no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(right-hand operand of comma expression has no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(right-hand operand of comma expression has no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(right-hand operand of comma expression has no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(left-hand operand of comma expression has no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(left-hand operand of comma expression has no effect))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59920-1_2726:
  build:
    cflags: ' -O0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59920-1.c'
    sources:
      binary: pr59920-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59920-2_2727:
  build:
    cflags: ' -O0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59920-2.c'
    sources:
      binary: pr59920-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59920-3_2728:
  build:
    cflags: ' -O0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59920-3.c'
    sources:
      binary: pr59920-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59924_2729:
  build:
    cflags: ' -O1 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59924.c'
    sources:
      binary: pr59924.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(may be used uninitialized in this function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59940_2730:
  build:
    cflags: ' -Wconversion -Woverflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59940.c'
    sources:
      binary: pr59940.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wconversion -Woverflow"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(3:too few arguments to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(3:too many arguments to function))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(21:negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(8:conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(8:conversion of unsigned constant value to negative integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(8:conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(8:large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(8:overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(13:conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(15:conversion))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59963-1_2731:
  build:
    cflags: ' -std=gnu89 -Wdouble-promotion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59963-1.c'
    sources:
      binary: pr59963-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -Wdouble-promotion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(8:implicit conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(8:implicit conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(12:implicit conversion))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59963-2_2732:
  build:
    cflags: ' -Woverflow -Wconversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59963-2.c'
    sources:
      binary: pr59963-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Woverflow -Wconversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(13:overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(13:overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(9:overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(9:overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(8:large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(8:conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(9:negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(3:negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(4:negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(5:negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(6:negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(7:negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(8:negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(9:negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(9:conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(14:conversion of unsigned constant value to negative integer" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59963-3_2733:
  build:
    cflags: ' -Wconversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59963-3.c'
    sources:
      binary: pr59963-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wconversion"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60013_2734:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60013.c'
    sources:
      binary: pr60013.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60036_2735:
  build:
    cflags: ' -Wconversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60036.c'
    sources:
      binary: pr60036.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wconversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60087_2736:
  build:
    cflags: ' -Wsign-compare -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60087.c'
    sources:
      binary: pr60087.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wsign-compare"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(9:promoted ~unsigned is always non-zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(9:comparison of promoted ~unsigned with constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(10:comparison of promoted ~unsigned with unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(9:comparison between signed and unsigned integer expressions))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60114_2737:
  build:
    cflags: ' -Wconversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60114.c'
    sources:
      binary: pr60114.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wconversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(9:overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(9:overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(16:conversion of unsigned constant value to negative integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(18:conversion of unsigned constant value to negative integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(23:conversion of unsigned constant value to negative integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(21:conversion of unsigned constant value to negative integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(29:conversion of unsigned constant value to negative integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(28:overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(24:overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(27:overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(28:overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(32:conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(19:conversion of unsigned constant value to negative integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(24:conversion of unsigned constant value to negative integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(27:conversion of unsigned constant value to negative integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(17:conversion of unsigned constant value to negative integer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60139_2738:
  build:
    cflags: ' -Wpedantic -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60139.c'
    sources:
      binary: pr60139.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wpedantic -std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(17:initializer element is not computable at load time))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(28:initializer element is not computable at load time))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(18:initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(23:initializer element is not a constant expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60195_2739:
  build:
    cflags: ' -std=c11 -Wpedantic -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60195.c'
    sources:
      binary: pr60195.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -Wpedantic -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(unused variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(set but not used))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60257_2740:
  build:
    cflags: ' -Wc++-compat -Woverride-init -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60257.c'
    sources:
      binary: pr60257.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat -Woverride-init"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(5:enum conversion in initialization is invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(32:initialized field with side-effects overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(31:initialized field overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(26:initialized field with side-effects overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(25:initialized field overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(26:initialized field overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(29:initialized field with side-effects overwritten))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60267_2741:
  build:
    cflags: ' -O2 -save-temps -S'
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/gcc.dg
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60267.c'
    sources:
      binary: pr60267.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -save-temps"'
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/gcc.dg
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60351_2742:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60351.c'
    sources:
      binary: pr60351.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(5:right shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(5:right shift count >= width of type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(5:left shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(5:left shift count >= width of type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60485-1_2743:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60485-1.c'
    sources:
      binary: ./pr60485-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60485-2_2744:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60485-2.c'
    sources:
      binary: ./pr60485-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60598_2745:
  build:
    cflags: ' -O2 -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60598.c'
    sources:
      binary: pr60598.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60647-1_2746:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60647-1.c'
    sources:
      binary: pr60647-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60647-2_2747:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60647-2.c'
    sources:
      binary: pr60647-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(function called through a non-compatible type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60704_2748:
  build:
    cflags: ' -flive-range-shrinkage -march=amdfam10 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60704.c'
    sources:
      binary: pr60704.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-flive-range-shrinkage"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60784_2749:
  build:
    cflags: ' -Wextra -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60784.c'
    sources:
      binary: pr60784.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wextra -std=c99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60844_2750:
  build:
    cflags: ' -O2 -g -mtune=atom -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60844.c'
    sources:
      binary: pr60844.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60866_2751:
  build:
    cflags: ' -O -fselective-scheduling -fno-if-conversion -fschedule-insns -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60866.c'
    sources:
      binary: pr60866.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fselective-scheduling -fno-if-conversion -fschedule-insns" '
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60915_2752:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60915.c'
    sources:
      binary: pr60915.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(attributes should be specified before the declarator in a function definition))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61045_2753:
  build:
    cflags: ' -fstrict-overflow'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61045.c'
    sources:
      binary: ./pr61045.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61053_2754:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61053.c'
    sources:
      binary: pr61053.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61058_2755:
  build:
    cflags: ' -fno-asynchronous-unwind-tables -mtune=atom -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61058.c'
    sources:
      binary: pr61058.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61060_2756:
  build:
    cflags: ' -O0 -ftree-ter -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61060.c'
    sources:
      binary: pr61060.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0 -ftree-ter"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61077_2757:
  build:
    cflags: ' -std=c11 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61077.c'
    sources:
      binary: pr61077.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(qualified return type" "return))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(qualified parameter type\[^\n\]*int" "parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(qualified parameter type\[^\n\]*char" "parameter))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61096-1_2758:
  build:
    cflags: ' -std=gnu99 -fshort-enums -fshort-wchar -Wpedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61096-1.c'
    sources:
      binary: pr61096-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fshort-enums -fshort-wchar -Wpedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(13:char-array initialized from wide string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(23:wide character array initialized from non-wide string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(23:wide character array initialized from incompatible wide string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(14:array of inappropriate type initialized from string constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10:initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10:initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10:initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10:initializer element is not))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:invalid initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(23:extra brace group at end of initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(21:initialization of flexible array member in a nested context))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(20:array index in non-array initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(24:empty scalar initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(16:array index in initializer not of integer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(17:nonconstant array index in initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(31:nonconstant array index in initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(13:array index in non-array initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(16:array index in initializer exceeds array bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(16:array index in initializer exceeds array bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(31:empty index range in initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(31:array index range in initializer exceeds array bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(15:field name not in record or union initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(15:initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(22:excess elements in char array initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(21:non-static initialization of a flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:field name not in record or union initializer))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid use of structure with flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(12:initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(23:excess elements in struct initializer" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61096-2_2759:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61096-2.c'
    sources:
      binary: pr61096-2.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(13:invalid use of non-lvalue array))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61158_2760:
  build:
    cflags: ' -O2 -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61158.c'
    sources:
      binary: pr61158.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61162-2_2761:
  build:
    cflags: ' -Wc++-compat -Wpointer-sign -Wpedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61162-2.c'
    sources:
      binary: pr61162-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat -Wpointer-sign -Wpedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10:incompatible types when returning))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(10:enum conversion in return))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(10:in function returning void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(10:return makes integer from pointer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(10:return makes pointer from integer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(10:pointer targets in return differ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(10:ISO C forbids return between function pointer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61162_2762:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61162.c'
    sources:
      binary: pr61162.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(17:enum conversion in initialization is invalid))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(5:enum conversion in assignment is invalid))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(13:enum conversion in return is invalid))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61220_2763:
  build:
    cflags: ' -O2 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61220.c'
    sources:
      binary: pr61220.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61529_2764:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61529.c'
    sources:
      binary: pr61529.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61561_2765:
  build:
    cflags: '  -w -O2 -c'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61561.c'
    sources:
      binary: pr61561.o
  group: GRPSERIAL
  info:
    extraopts:
      - '" -w -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61583_2766:
  build:
    cflags: ' -O2 -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61583.c'
    sources:
      binary: pr61583.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61692_2767:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61692.c'
    sources:
      binary: pr61692.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(more than 30 operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(more than 30 operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(more than 30 operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(more than 30 operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(more than 30 operands))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61756_2768:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61756.c'
    sources:
      binary: pr61756.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61762_2769:
  build:
    cflags: ' -O -fdump-tree-release_ssa -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61762.c'
    sources:
      binary: pr61762.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-release_ssa"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61773_2770:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61773.c'
    sources:
      binary: pr61773.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61817-1_2771:
  build:
    cflags: ' -std=c11 -ftrack-macro-expansion=0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61817-1.c'
    sources:
      binary: pr61817-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -ftrack-macro-expansion=0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61817-2_2772:
  build:
    cflags: ' -std=c11 -ftrack-macro-expansion=1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61817-2.c'
    sources:
      binary: pr61817-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -ftrack-macro-expansion=1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61852_2773:
  build:
    cflags: ' -Wimplicit-function-declaration -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61852.c'
    sources:
      binary: pr61852.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wimplicit-function-declaration"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(23:implicit declaration of function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61861_2774:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61861.c'
    sources:
      binary: pr61861.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(11:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(11:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(11:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(11:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(11:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(21:passing argument))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61868_2775:
  build:
    cflags: -flto -frandom-seed=0x12345 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61868.c'
    sources:
      binary: pr61868.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-flto -frandom-seed=0x12345"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr62004_2776:
  build:
    cflags: ' -O2 -fno-tree-tail-merge'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr62004.c'
    sources:
      binary: ./pr62004.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-tail-merge"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr62024_2777:
  build:
    cflags: ' -std=gnu11 -Wpedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr62024.c'
    sources:
      binary: pr62024.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11 -Wpedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(is not an integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(is not an integer constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr62030_2778:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr62030.c'
    sources:
      binary: ./pr62030.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr62070_2779:
  build:
    cflags: ' -O3 -fno-tree-vectorize -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr62070.c'
    sources:
      binary: pr62070.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fno-tree-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr62090-2_2780:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr62090-2.c'
    sources:
      binary: pr62090-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr62090_2781:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr62090.c'
    sources:
      binary: pr62090.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr62167-run_2782:
  build:
    cflags: ' -O2 -ftree-tail-merge'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr62167-run.c'
    sources:
      binary: ./pr62167-run.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr62167_2783:
  build:
    cflags: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr62167.c'
    sources:
      binary: pr62167.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr62294_2784:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr62294.c'
    sources:
      binary: pr62294.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of .bar. from incompatible pointer type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63186_2785:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63186.c'
    sources:
      binary: pr63186.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63284_2786:
  build:
    cflags: ' -O2 -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63284.c'
    sources:
      binary: pr63284.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63342_2787:
  build:
    cflags: ' -g -O2 -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63342.c'
    sources:
      binary: pr63342.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63387-2_2788:
  build:
    cflags: ' -O -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63387-2.c'
    sources:
      binary: pr63387-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63387_2789:
  build:
    cflags: ' -O -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63387.c'
    sources:
      binary: pr63387.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63453_2790:
  build:
    cflags: ' -std=gnu11 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63453.c'
    sources:
      binary: pr63453.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(declared but never defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(declared but never defined))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63480_2791:
  build:
    cflags: ' -Wmissing-field-initializers -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63480.c'
    sources:
      binary: pr63480.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-field-initializers"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63543_2792:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63543.c'
    sources:
      binary: pr63543.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(dereferencing pointer to incomplete type .struct S.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(dereferencing pointer to incomplete type .union U.))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63549_2793:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63549.c'
    sources:
      binary: pr63549.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'e' isn't known))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(has an incomplete type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63567-1_2794:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63567-1.c'
    sources:
      binary: pr63567-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63567-2_2795:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63567-2.c'
    sources:
      binary: pr63567-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63567-3_2796:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63567-3.c'
    sources:
      binary: pr63567-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63567-4_2797:
  build:
    cflags: ' -Wpedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63567-4.c'
    sources:
      binary: pr63567-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wpedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63568_2798:
  build:
    cflags: ' -O -fdump-tree-cddce1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63568.c'
    sources:
      binary: pr63568.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63593_2799:
  build:
    cflags: ' -O3 -fno-tree-vectorize -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63593.c'
    sources:
      binary: pr63593.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fno-tree-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63594-1_2800:
  build:
    cflags: ' -O2 -Wno-psabi -mno-mmx -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63594-1.c'
    sources:
      binary: pr63594-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wno-psabi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63594-2_2801:
  build:
    cflags: ' -O2 -Wno-psabi -mno-mmx'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63594-2.c'
    sources:
      binary: ./pr63594-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wno-psabi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63626_2802:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63626.c'
    sources:
      binary: pr63626.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(inline function .foo. declared but never defined" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63637-1_2803:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63637-1.c'
    sources:
      binary: pr63637-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63637-2_2804:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63637-2.c'
    sources:
      binary: pr63637-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63637-3_2805:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63637-3.c'
    sources:
      binary: pr63637-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63637-4_2806:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63637-4.c'
    sources:
      binary: pr63637-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63637-5_2807:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63637-5.c'
    sources:
      binary: pr63637-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63637-6_2808:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63637-6.c'
    sources:
      binary: pr63637-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63665_2809:
  build:
    cflags: ' -O -fno-tree-ccp -fno-tree-fre -fno-tree-copy-prop -fwrapv'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63665.c'
    sources:
      binary: ./pr63665.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-ccp -fno-tree-fre -fno-tree-copy-prop -fwrapv"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63743_2810:
  build:
    cflags: -O1 -fdump-rtl-expand-details -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63743.c'
    sources:
      binary: pr63743.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fdump-rtl-expand-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63748_2811:
  build:
    cflags: ' -O2 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63748.c'
    sources:
      binary: pr63748.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63762_2812:
  build:
    cflags: ' -O2 -c'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63762.c'
    sources:
      binary: pr63762.o
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63770_2813:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63770.c'
    sources:
      binary: pr63770.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63804_2814:
  build:
    cflags: ' -O2 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63804.c'
    sources:
      binary: pr63804.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63835_2815:
  build:
    cflags: ' -Os -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63835.c'
    sources:
      binary: pr63835.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63856_2816:
  build:
    cflags: ' -O2 -Wno-psabi -fPIC -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63856.c'
    sources:
      binary: pr63856.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wno-psabi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63877_2817:
  build:
    cflags: ' -Wmissing-declarations -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63877.c'
    sources:
      binary: pr63877.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-declarations"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63914_2818:
  build:
    cflags: ' -O2 -ffast-math -msse -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63914.c'
    sources:
      binary: pr63914.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64007_2819:
  build:
    cflags: '  -O3 '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64007.c'
    sources:
      binary: ./pr64007.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '" -O3 "'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64015_2820:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64015.c'
    sources:
      binary: pr64015.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 "'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64075_2821:
  build:
    cflags: ' -flto -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64075.c'
    sources:
      binary: pr64075.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-flto"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64087_2822:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64087.c'
    sources:
      binary: pr64087.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64223-1_2823:
  build:
    cflags: ' -Wformat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64223-1.c'
    sources:
      binary: pr64223-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument of type" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64223-2_2824:
  build:
    cflags: ' -Wformat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64223-2.c'
    sources:
      binary: pr64223-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument of type" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64252_2825:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64252.c'
    sources:
      binary: ./pr64252.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64277_2826:
  build:
    cflags: ' -O3 -Wall -Werror -fdump-tree-cunroll-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64277.c'
    sources:
      binary: pr64277.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Wall -Werror -fdump-tree-cunroll-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64295_2827:
  build:
    cflags: ' -O -frounding-math -funsafe-math-optimizations -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64295.c'
    sources:
      binary: pr64295.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -frounding-math -funsafe-math-optimizations"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64309_2828:
  build:
    cflags: ' -fdump-tree-original'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64309.c'
    sources:
      binary: ./pr64309.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64316_2829:
  build:
    cflags: ' -O3 -mavx2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64316.c'
    sources:
      binary: pr64316.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64406_2830:
  build:
    cflags: ' -O -ftree-loop-distribute-patterns -fno-tree-loop-ivcanon -fno-tree-loop-vectorize -ftree-vectorize -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64406.c'
    sources:
      binary: pr64406.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ftree-loop-distribute-patterns -fno-tree-loop-ivcanon -fno-tree-loop-vectorize -ftree-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64417_2831:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64417.c'
    sources:
      binary: pr64417.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of flexible array member))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64423_2832:
  build:
    cflags: ' -Wchar-subscripts -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64423.c'
    sources:
      binary: pr64423.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wchar-subscripts"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(11:array subscript has type .char.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(14:array subscript has type .char.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(16:array subscript has type .char.))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64434_2833:
  build:
    cflags: -O1 -fdump-rtl-expand-details -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64434.c'
    sources:
      binary: pr64434.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fdump-rtl-expand-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64440_2834:
  build:
    cflags: ' -Wall -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64440.c'
    sources:
      binary: pr64440.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64454_2835:
  build:
    cflags: ' -O2 -fdump-tree-vrp1 -fno-ipa-icf -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64454.c'
    sources:
      binary: pr64454.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-vrp1 -fno-ipa-icf"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64465_2836:
  build:
    cflags: ' -O2 -fexceptions -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64465.c'
    sources:
      binary: pr64465.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fexceptions"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64511_2837:
  build:
    cflags: ' -O3 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64511.c'
    sources:
      binary: pr64511.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64536_2838:
  build:
    cflags: ' -O2 -fPIC'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64536.c'
    sources:
      binary: pr64536.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64563_2839:
  build:
    cflags: ' -Os -Wtype-limits -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64563.c'
    sources:
      binary: pr64563.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -Wtype-limits"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64637_2840:
  build:
    cflags: ' -Wunused -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64637.c'
    sources:
      binary: pr64637.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wunused"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(28:statement with no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(statement with no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(26:statement with no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(8:statement with no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(13:statement with no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(8:statement with no effect))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64663_2841:
  build:
    cflags: ' -O2 -g -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64663.c'
    sources:
      binary: pr64663.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64709_2842:
  build:
    cflags: ' -Wmissing-field-initializers -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64709.c'
    sources:
      binary: pr64709.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-field-initializers"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64715-1_2843:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64715-1.c'
    sources:
      binary: pr64715-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64715-2_2844:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64715-2.c'
    sources:
      binary: pr64715-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64766_2845:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64766.c'
    sources:
      binary: pr64766.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is initialized like a variable|invalid initializer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64778_2846:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64778.c'
    sources:
      binary: pr64778.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression before|too many arguments))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64807_2847:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64807.c'
    sources:
      binary: ./pr64807.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64817-1_2848:
  build:
    cflags: ' -O3 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64817-1.c'
    sources:
      binary: pr64817-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64817-2_2849:
  build:
    cflags: ' -O3 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64817-2.c'
    sources:
      binary: pr64817-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64817-3_2850:
  build:
    cflags: ' -O3 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64817-3.c'
    sources:
      binary: pr64817-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64856_2851:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64856.c'
    sources:
      binary: pr64856.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64935-1_2852:
  build:
    cflags: ' -std=gnu89 -Wno-shift-count-overflow -O2 -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64935-1.c'
    sources:
      binary: pr64935-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -Wno-shift-count-overflow -O2 -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64935-2_2853:
  build:
    cflags: ' -O -fschedule-insns --param=max-sched-ready-insns=0 -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64935-2.c'
    sources:
      binary: pr64935-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fschedule-insns --param=max-sched-ready-insns=0 -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65050_2854:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65050.c'
    sources:
      binary: pr65050.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type .A {aka int\\\[\\\]}.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type .int\\\[\\\].))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type .A {aka int\\\[\\\]}.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type .int\\\[\\\].))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type .A {aka int\\\[\\\]}.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type .struct T.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type .struct U.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type .TT {aka struct T}.))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65063_2855:
  build:
    cflags: ' -O3 -fno-tree-loop-ivcanon -fno-tree-vectorize'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65063.c'
    sources:
      binary: ./pr65063.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fno-tree-loop-ivcanon -fno-tree-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65066_2856:
  build:
    cflags: ' -Wformat -Wformat-signedness -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65066.c'
    sources:
      binary: pr65066.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wformat -Wformat-signedness"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument of type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65228_2857:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65228.c'
    sources:
      binary: pr65228.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65321_2858:
  build:
    cflags: ' -O3 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65321.c'
    sources:
      binary: pr65321.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65345-1_2859:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65345-1.c'
    sources:
      binary: pr65345-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variably modified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65345-2_2860:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65345-2.c'
    sources:
      binary: ./pr65345-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65345-3_2861:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65345-3.c'
    sources:
      binary: pr65345-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variably modified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65358_2862:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65358.c'
    sources:
      binary: ./pr65358.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65408_2863:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65408.c'
    sources:
      binary: ./pr65408.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65521_2864:
  build:
    cflags: ' -O2 -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65521.c'
    sources:
      binary: pr65521.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65533_2865:
  build:
    cflags: ' -Ofast -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65533.c'
    sources:
      binary: pr65533.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Ofast -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65658_2866:
  build:
    cflags: ' -Wuninitialized -O2 -Wno-implicit -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65658.c'
    sources:
      binary: pr65658.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2 -Wno-implicit"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65779_2867:
  build:
    cflags: ' -O2 -fcompare-debug -c'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65779.c'
    sources:
      binary: pr65779.o
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65780-1_2868:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65780-1.c'
    sources:
      binary: pr65780-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65780-2_2869:
  build:
    cflags: ' -O2 -fpie'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65780-2.c'
    sources:
      binary: pr65780-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpie"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65802_2870:
  build:
    cflags: ' -O0 -fexceptions -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65802.c'
    sources:
      binary: pr65802.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0 -fexceptions"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65901_2871:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65901.c'
    sources:
      binary: pr65901.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(second argument to .va_arg. is of incomplete type .void.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(second argument to .va_arg. is of incomplete type .struct S.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(second argument to .va_arg. is of incomplete type .enum E.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(second argument to .va_arg. is of incomplete type .union U.))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65980_2872:
  build:
    cflags: ' -O3 -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65980.c'
    sources:
      binary: pr65980.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66066-1_2873:
  build:
    cflags: ' -Wno-div-by-zero -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr66066-1.c'
    sources:
      binary: pr66066-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wno-div-by-zero"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66066-2_2874:
  build:
    cflags: ' -Wno-div-by-zero -Wpedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr66066-2.c'
    sources:
      binary: pr66066-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wno-div-by-zero -Wpedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66066-3_2875:
  build:
    cflags: ' -Wno-div-by-zero -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr66066-3.c'
    sources:
      binary: pr66066-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wno-div-by-zero -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66187-1_2876:
  build:
    cflags: ' -O2 -fno-wrapv'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr66187-1.c'
    sources:
      binary: ./pr66187-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-wrapv"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66187-2_2877:
  build:
    cflags: ' -O2 -fwrapv'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr66187-2.c'
    sources:
      binary: ./pr66187-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fwrapv"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66299-1_2878:
  build:
    cflags: ' -fdump-tree-original'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr66299-1.c'
    sources:
      binary: ./pr66299-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66299-2_2879:
  build:
    cflags: ' -fdump-tree-optimized -O'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr66299-2.c'
    sources:
      binary: ./pr66299-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-optimized -O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66299-3_2880:
  build:
    cflags: ' -fdump-tree-original'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr66299-3.c'
    sources:
      binary: ./pr66299-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66444_2881:
  build:
    cflags: ' -O2 -fipa-ra'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr66444.c'
    sources:
      binary: ./pr66444.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fipa-ra"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66688_2882:
  build:
    cflags: ' -O2 -fno-reorder-blocks -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr66688.c'
    sources:
      binary: pr66688.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-reorder-blocks -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66869_2883:
  build:
    cflags: ' -Wunused-function -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr66869.c'
    sources:
      binary: pr66869.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wunused-function"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*('test' declared 'static' but never defined))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67028_2884:
  build:
    cflags: ' -O3'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67028.c'
    sources:
      binary: ./pr67028.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67029_2885:
  build:
    cflags: ' -O2 -fschedule-insns -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67029.c'
    sources:
      binary: pr67029.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fschedule-insns"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67043_2886:
  build:
    cflags: ' -O3 -fcompare-debug -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67043.c'
    sources:
      binary: pr67043.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fcompare-debug -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67077_2887:
  build:
    cflags: ' -Wall -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67077.c'
    sources:
      binary: pr67077.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67088_2888:
  build:
    cflags: ' -Wpedantic -std=c90 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67088.c'
    sources:
      binary: pr67088.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wpedantic -std=c90"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10:has invalid type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:width not an integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:width not an integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:negative width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:zero width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:width of))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(7:width not an integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(12:type of bit-field))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(24:is narrower))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67089-1_2889:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67089-1.c'
    sources:
      binary: ./pr67089-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67089-2_2890:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67089-2.c'
    sources:
      binary: ./pr67089-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67089-3_2891:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67089-3.c'
    sources:
      binary: ./pr67089-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67089-4_2892:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67089-4.c'
    sources:
      binary: ./pr67089-4.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67089-5_2893:
  build:
    cflags: ' -O2 -ftree-loop-if-convert'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67089-5.c'
    sources:
      binary: ./pr67089-5.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-loop-if-convert"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67089-6_2894:
  build:
    cflags: ' -O2 -ftree-loop-if-convert -fdump-tree-widening_mul -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67089-6.c'
    sources:
      binary: pr67089-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-loop-if-convert -fdump-tree-widening_mul"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67089-7_2895:
  build:
    cflags: ' -O2 -ftree-loop-if-convert -fdump-tree-widening_mul -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67089-7.c'
    sources:
      binary: pr67089-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-loop-if-convert -fdump-tree-widening_mul"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67107_2896:
  build:
    cflags: ' -frounding-math -funsafe-math-optimizations -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67107.c'
    sources:
      binary: pr67107.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-frounding-math -funsafe-math-optimizations"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67271_2897:
  build:
    cflags: ' -O -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67271.c'
    sources:
      binary: pr67271.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67312_2898:
  build:
    cflags: ' -O0 -ftree-coalesce-vars -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67312.c'
    sources:
      binary: pr67312.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0 -ftree-coalesce-vars"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67338_2899:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67338.c'
    sources:
      binary: pr67338.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67410_2900:
  build:
    cflags: ' -std=gnu11'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67410.c'
    sources:
      binary: ./pr67410.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67432_2901:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67432.c'
    sources:
      binary: pr67432.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty enum is invalid))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty enum is invalid))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty enum is invalid))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67465_2902:
  build:
    cflags: ' -O3 -std=gnu99'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67465.c'
    sources:
      binary: ./pr67465.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67512_2903:
  build:
    cflags: ' -O -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67512.c'
    sources:
      binary: pr67512.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(is used uninitialized))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67563_2904:
  build:
    cflags: ' -O2 -fexceptions -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67563.c'
    sources:
      binary: pr67563.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fexceptions"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67580_2905:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67580.c'
    sources:
      binary: pr67580.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name .S.; use .struct. keyword to refer to the type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name .U.; use .union. keyword to refer to the type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name .E.; use .enum. keyword to refer to the type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name .T.; use .struct. keyword to refer to the type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name .V.; use .union. keyword to refer to the type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name .F.; use .enum. keyword to refer to the type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67730-1_2906:
  build:
    cflags: ' -Wc++-compat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67730-1.c'
    sources:
      binary: pr67730-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(request for implicit conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(request for implicit conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(request for implicit conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(request for implicit conversion))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67730-2_2907:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67730-2.c'
    sources:
      binary: pr67730-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization makes integer from pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment makes integer from pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(return makes integer from pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(return makes integer from pointer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67730_2908:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67730.c'
    sources:
      binary: pr67730.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(10:.return. with a value))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67784-1_2909:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67784-1.c'
    sources:
      binary: pr67784-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67784-2_2910:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67784-2.c'
    sources:
      binary: pr67784-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration of non-variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration of non-variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration of non-variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration of non-variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration of non-variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67784-3_2911:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67784-3.c'
    sources:
      binary: pr67784-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67784-4_2912:
  build:
    cflags: ' -Wno-switch-unreachable -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67784-4.c'
    sources:
      binary: pr67784-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wno-switch-unreachable"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67784-5_2913:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67784-5.c'
    sources:
      binary: pr67784-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67786_2914:
  build:
    cflags: ' -O3'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67786.c'
    sources:
      binary: ./pr67786.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67787_2915:
  build:
    cflags: ' -O3'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67787.c'
    sources:
      binary: ./pr67787.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67830_2916:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67830.c'
    sources:
      binary: ./pr67830.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67854_2917:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67854.c'
    sources:
      binary: pr67854.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(is promoted to .int. when passed through))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67964_2918:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67964.c'
    sources:
      binary: pr67964.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68024_2919:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68024.c'
    sources:
      binary: pr68024.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(defined as variadic function without prototype))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68088_1_2920:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68088_1.c'
    sources:
      binary: pr68088_1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68090_2921:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68090.c'
    sources:
      binary: pr68090.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(compound literal has variable size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(compound literal has variable size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(compound literal has variable size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(compound literal has variable size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(compound literal has variable size))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68112_2922:
  build:
    cflags: ' -O2 -Waggressive-loop-optimizations -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68112.c'
    sources:
      binary: pr68112.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Waggressive-loop-optimizations"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68129_1_2923:
  build:
    cflags: ' -O -fno-split-wide-types -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68129_1.c'
    sources:
      binary: pr68129_1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-split-wide-types"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68134_2924:
  build:
    cflags: ' -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68134.c'
    sources:
      binary: pr68134.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68162-1_2925:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68162-1.c'
    sources:
      binary: pr68162-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68217_2926:
  build:
    cflags: ' -O2 -fdisable-tree-evrp -fdump-tree-vrp1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68217.c'
    sources:
      binary: pr68217.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdisable-tree-evrp -fdump-tree-vrp1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68286_2927:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68286.c'
    sources:
      binary: pr68286.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68306-2_2928:
  build:
    cflags: ' -O3 -mno-sse -mno-mmx -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68306-2.c'
    sources:
      binary: pr68306-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68306-3_2929:
  build:
    cflags: ' -O3 -mno-sse -mno-mmx -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68306-3.c'
    sources:
      binary: pr68306-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68306_2930:
  build:
    cflags: ' -O3 -mno-sse -mno-mmx -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68306.c'
    sources:
      binary: pr68306.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68317_2931:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68317.c'
    sources:
      binary: pr68317.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68320_2932:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68320.c'
    sources:
      binary: pr68320.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration of non-variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration of non-variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration of non-variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration of non-variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration of non-variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration of non-variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration of non-variable))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit declaration))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68327_2933:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68327.c'
    sources:
      binary: pr68327.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68375_2934:
  build:
    cflags: ' -O2 -fdump-tree-optimized-graph -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68375.c'
    sources:
      binary: pr68375.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized-graph"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68412-2_2935:
  build:
    cflags: ' -Wall -Wextra -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68412-2.c'
    sources:
      binary: pr68412-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wextra"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(self-comparison always evaluates to true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(self-comparison always evaluates to false))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68412_2936:
  build:
    cflags: ' -Wall -Wextra -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68412.c'
    sources:
      binary: pr68412.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wextra"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(left shift of negative value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(left shift count))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(requires))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(left shift count))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(right shift count))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(right shift count))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68435_2937:
  build:
    cflags: -fdump-rtl-ce1 -O2 -w --param max-rtl-if-conversion-unpredictable-cost=100 -march=i686 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68435.c'
    sources:
      binary: pr68435.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-rtl-ce1 -O2 -w --param max-rtl-if-conversion-unpredictable-cost=100"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68474_2938:
  build:
    cflags: ' -O -funsafe-math-optimizations -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68474.c'
    sources:
      binary: pr68474.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -funsafe-math-optimizations"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68513_2939:
  build:
    cflags: ' -funsafe-math-optimizations -fno-math-errno -O -Wno-div-by-zero -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68513.c'
    sources:
      binary: pr68513.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-funsafe-math-optimizations -fno-math-errno -O -Wno-div-by-zero"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68533_2940:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68533.c'
    sources:
      binary: pr68533.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('void' as only parameter may not be qualified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('void' must be the only parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parameter 'x' has just a forward declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('void' must be the only parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('void' must be the only parameter))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(declared inside parameter list will not be visible outside of this definition or declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(anonymous struct declared inside parameter list will not be visible outside of this definition or declaration))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68595_2941:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68595.c'
    sources:
      binary: pr68595.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68668_2942:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68668.c'
    sources:
      binary: pr68668.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68670-1_2943:
  build:
    cflags: ' -O2 -ftracer'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68670-1.c'
    sources:
      binary: ./pr68670-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftracer"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68670-2_2944:
  build:
    cflags: ' -O2 -ftracer'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68670-2.c'
    sources:
      binary: ./pr68670-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftracer"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68671_2945:
  build:
    cflags: '  -O2 -fno-tree-dce'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68671.c'
    sources:
      binary: ./pr68671.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '" -O2 -fno-tree-dce"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68730_2946:
  build:
    cflags: ' -O3 -fno-if-conversion -march=x86-64 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68730.c'
    sources:
      binary: pr68730.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fno-if-conversion"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68766_2947:
  build:
    cflags: ' -O2 -ftree-vectorize -fdbg-cnt=vect_loop:1 -mavx2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68766.c'
    sources:
      binary: pr68766.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-vectorize -fdbg-cnt=vect_loop:1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68785_2948:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68785.c'
    sources:
      binary: pr68785.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68835-1_2949:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68835-1.c'
    sources:
      binary: pr68835-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68835-2_2950:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68835-2.c'
    sources:
      binary: ./pr68835-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68841_2951:
  build:
    cflags: ' -Og -fif-conversion -flive-range-shrinkage -fpeel-loops -frerun-cse-after-loop'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68841.c'
    sources:
      binary: ./pr68841.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Og -fif-conversion -flive-range-shrinkage -fpeel-loops -frerun-cse-after-loop"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68907_2952:
  build:
    cflags: ' -std=c11 -Wpedantic -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68907.c'
    sources:
      binary: pr68907.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -Wpedantic -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69015_2953:
  build:
    cflags: ' -O2 -fno-if-conversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69015.c'
    sources:
      binary: pr69015.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-if-conversion"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69032_2954:
  build:
    cflags: ' -O2 -fsched-pressure -fsel-sched-pipelining -fselective-scheduling -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69032.c'
    sources:
      binary: pr69032.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fsched-pressure -fsel-sched-pipelining -fselective-scheduling"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69047_2955:
  build:
    cflags: ' -O -fdump-tree-cddce1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69047.c'
    sources:
      binary: pr69047.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69070_2956:
  build:
    cflags: ' -O2 -fsignaling-nans -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69070.c'
    sources:
      binary: pr69070.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fsignaling-nans"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69071_2957:
  build:
    cflags: ' -O2 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69071.c'
    sources:
      binary: pr69071.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69097-1_2958:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69097-1.c'
    sources:
      binary: pr69097-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69097-2_2959:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69097-2.c'
    sources:
      binary: pr69097-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69156_2960:
  build:
    cflags: ' -O1 -fno-tree-ccp -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69156.c'
    sources:
      binary: pr69156.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fno-tree-ccp"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization from incompatible pointer type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69162_2961:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69162.c'
    sources:
      binary: pr69162.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69167_2962:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69167.c'
    sources:
      binary: pr69167.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69169_2963:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69169.c'
    sources:
      binary: pr69169.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69172_2964:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69172.c'
    sources:
      binary: pr69172.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69181-2_2965:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69181-2.c'
    sources:
      binary: pr69181-2.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69195_2966:
  build:
    cflags: ' -O3 -fno-dce -fno-forward-propagate'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69195.c'
    sources:
      binary: ./pr69195.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fno-dce -fno-forward-propagate"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69238_2967:
  build:
    cflags: ' -O2 -fno-dce -fno-forward-propagate -fno-rerun-cse-after-loop -funroll-loops'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69238.c'
    sources:
      binary: ./pr69238.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-dce -fno-forward-propagate -fno-rerun-cse-after-loop -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69247_2968:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69247.c'
    sources:
      binary: pr69247.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69307_2969:
  build:
    cflags: ' -O2 -fselective-scheduling2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69307.c'
    sources:
      binary: ./pr69307.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fselective-scheduling2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69328_2970:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69328.c'
    sources:
      binary: pr69328.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69391-1_2971:
  build:
    cflags: ' -ansi -pedantic-errors -ftrack-macro-expansion=0'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69391-1.c'
    sources:
      binary: ./pr69391-1.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69391-2_2972:
  build:
    cflags: ' -ansi -pedantic-errors -ftrack-macro-expansion=1'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69391-2.c'
    sources:
      binary: ./pr69391-2.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69421_2973:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69421.c'
    sources:
      binary: pr69421.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69442_2974:
  build:
    cflags: ' -Og'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69442.c'
    sources:
      binary: ./pr69442.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Og"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69483_2975:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69483.c'
    sources:
      binary: pr69483.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'b' isn't known))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69522_2976:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69522.c'
    sources:
      binary: pr69522.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69535_2977:
  build:
    cflags: ' -O -fno-tree-bit-ccp -fno-tree-reassoc'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69535.c'
    sources:
      binary: ./pr69535.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-bit-ccp -fno-tree-reassoc"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69543_2978:
  build:
    cflags: ' -O2 -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69543.c'
    sources:
      binary: pr69543.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69554-1_2979:
  build:
    cflags: ' -fdiagnostics-show-caret -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69554-1.c'
    sources:
      binary: pr69554-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69592_2980:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69592.c'
    sources:
      binary: pr69592.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69619_2981:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69619.c'
    sources:
      binary: pr69619.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69627_2982:
  build:
    cflags: ' -fdiagnostics-show-caret -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69627.c'
    sources:
      binary: pr69627.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary /))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary /))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69634_2983:
  build:
    cflags: ' -O2 -fno-dce -fschedule-insns -fno-tree-vrp -fcompare-debug -Wno-psabi -mno-sse -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69634.c'
    sources:
      binary: pr69634.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-dce -fschedule-insns -fno-tree-vrp -fcompare-debug -Wno-psabi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69644_2984:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69644.c'
    sources:
      binary: pr69644.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69650_2985:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69650.c'
    sources:
      binary: pr69650.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(linemarker ignored due to incorrect nesting))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69733_2986:
  build:
    cflags: ' -W -fdiagnostics-show-caret -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69733.c'
    sources:
      binary: pr69733.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-W -fdiagnostics-show-caret"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers ignored))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69796_2987:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69796.c'
    sources:
      binary: pr69796.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 's' isn't known))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expression statement has incomplete type|expected))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69801_2988:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69801.c'
    sources:
      binary: pr69801.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69802_2989:
  build:
    cflags: ' -O2 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69802.c'
    sources:
      binary: pr69802.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(is used uninitialized))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69819_2990:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69819.c'
    sources:
      binary: pr69819.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.foo. redeclared as different kind of symbol))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69824_2991:
  build:
    cflags: ' -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69824.c'
    sources:
      binary: pr69824.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69885_2992:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69885.c'
    sources:
      binary: pr69885.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69896_2993:
  build:
    cflags: ' -w -O -fcaller-saves -fno-dse -frename-registers -fno-tree-ter -mno-sse'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69896.c'
    sources:
      binary: ./pr69896.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w -O -fcaller-saves -fno-dse -frename-registers -fno-tree-ter"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69900_2994:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69900.c'
    sources:
      binary: pr69900.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69915_2995:
  build:
    cflags: ' -O -ftracer -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69915.c'
    sources:
      binary: pr69915.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ftracer"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69956_2996:
  build:
    cflags: ' -O2 -ftree-vectorize -march=skylake-avx512 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69956.c'
    sources:
      binary: pr69956.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69973_2997:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69973.c'
    sources:
      binary: pr69973.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69974_2998:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69974.c'
    sources:
      binary: pr69974.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'a' isn't known))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70017_2999:
  build:
    cflags: ' -fstack-check=generic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70017.c'
    sources:
      binary: pr70017.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstack-check=generic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(frame size too large for reliable stack checking" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70022_3000:
  build:
    cflags: ' -w -Wno-psabi -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70022.c'
    sources:
      binary: pr70022.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w -Wno-psabi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70026_3001:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70026.c'
    sources:
      binary: pr70026.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70050_3002:
  build:
    cflags: ' -w -Wno-psabi -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70050.c'
    sources:
      binary: pr70050.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w -Wno-psabi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70110_3003:
  build:
    cflags: ' -O3 -msse2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70110.c'
    sources:
      binary: pr70110.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70152_3004:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70152.c'
    sources:
      binary: pr70152.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70161-2_3005:
  build:
    cflags: ' -O2 -fdump-ipa-all-graph -fipa-pta -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70161-2.c'
    sources:
      binary: pr70161-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-ipa-all-graph -fipa-pta"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70161_3006:
  build:
    cflags: ' -O2 -fdump-ipa-all-graph -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70161.c'
    sources:
      binary: pr70161.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-ipa-all-graph"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70169_3007:
  build:
    cflags: ' -O2 -fno-strict-aliasing -fno-tree-dce -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70169.c'
    sources:
      binary: pr70169.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-strict-aliasing -fno-tree-dce"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70174_3008:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70174.c'
    sources:
      binary: pr70174.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment makes integer from pointer without a cast))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70177_3009:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70177.c'
    sources:
      binary: pr70177.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70219_3010:
  build:
    cflags: ' -O1 -w -Wno-psabi -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70219.c'
    sources:
      binary: pr70219.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -w -Wno-psabi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70252_3011:
  build:
    cflags: ' -O3 -march=skylake-avx512 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70252.c'
    sources:
      binary: pr70252.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70269_3012:
  build:
    cflags: ' -O2 -fipa-pta -fdump-ipa-pta-graph -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70269.c'
    sources:
      binary: pr70269.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fipa-pta -fdump-ipa-pta-graph"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70281_3013:
  build:
    cflags: ' -Wall -fdiagnostics-show-caret -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70281.c'
    sources:
      binary: pr70281.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -fdiagnostics-show-caret"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(cast))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70292_3014:
  build:
    cflags: ' -O1 -fno-inline -fno-dce -fschedule-insns -fselective-scheduling -fno-tree-dce -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70292.c'
    sources:
      binary: pr70292.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fno-inline -fno-dce -fschedule-insns -fselective-scheduling -fno-tree-dce"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70317_3015:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70317.c'
    sources:
      binary: pr70317.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70326_3016:
  build:
    cflags: ' -Og -fno-dce -fno-guess-branch-probability -fschedule-insns -fno-tree-coalesce-vars -fno-tree-dce -w -Wno-psabi -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70326.c'
    sources:
      binary: pr70326.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Og -fno-dce -fno-guess-branch-probability -fschedule-insns -fno-tree-coalesce-vars -fno-tree-dce -w -Wno-psabi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70405_3017:
  build:
    cflags: ' -O2 -fcompare-debug -mavx512f -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70405.c'
    sources:
      binary: pr70405.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70442_3018:
  build:
    cflags: ' -O2 -msse2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70442.c'
    sources:
      binary: pr70442.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70700_3019:
  build:
    cflags: ' -O3 -fdump-tree-ealias-graph -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70700.c'
    sources:
      binary: pr70700.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-tree-ealias-graph"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70725_3020:
  build:
    cflags: ' -O3 -march=skylake-avx512 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70725.c'
    sources:
      binary: pr70725.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70747_3021:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70747.c'
    sources:
      binary: pr70747.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison between pointer and integer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70771_3022:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70771.c'
    sources:
      binary: pr70771.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70775_3023:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70775.c'
    sources:
      binary: pr70775.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70807_3024:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70807.c'
    sources:
      binary: pr70807.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70843_3025:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70843.c'
    sources:
      binary: pr70843.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70852_3026:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70852.c'
    sources:
      binary: pr70852.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70859-2_3027:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70859-2.c'
    sources:
      binary: pr70859-2.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(39:must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(39:must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(39:must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(39:must be a constant integer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70859_3028:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70859.c'
    sources:
      binary: pr70859.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(39:must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(28:non-floating-point argument in call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(25:non-floating-point argument in call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(30:non-floating-point argument in call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(25:non-floating-point argument in call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(28:non-floating-point argument in call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(27:non-floating-point argument in call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:non-floating-point arguments in call to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:non-floating-point arguments in call to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:non-floating-point arguments in call to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:non-floating-point arguments in call to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:non-floating-point arguments in call to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:non-floating-point arguments in call to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(36:non-const integer argument 3 in call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(45:non-floating-point argument in call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(39:non-integer argument 3 in call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(34:argument 2 in call to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(37:argument 3 in call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(34:argument 2 in call to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(37:argument 3 in call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(34:argument 2 in call to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(37:argument 3 in call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:too few))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:too many))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:too few))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:too many))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:too few))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:too many))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:too few))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:too many))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:too few))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:too many))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:too few))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:too many))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70920-1_3029:
  build:
    cflags: ' -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70920-1.c'
    sources:
      binary: pr70920-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70920-2_3030:
  build:
    cflags: ' -O2 -fdump-tree-forwprop-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70920-2.c'
    sources:
      binary: pr70920-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-forwprop-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70920-3_3031:
  build:
    cflags: ' -fdump-tree-gimple -Wno-int-to-pointer-cast -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70920-3.c'
    sources:
      binary: pr70920-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple -Wno-int-to-pointer-cast"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70920-4_3032:
  build:
    cflags: ' -O2 -fdump-tree-forwprop-details -Wno-int-to-pointer-cast -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70920-4.c'
    sources:
      binary: pr70920-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-forwprop-details -Wno-int-to-pointer-cast"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71006_3033:
  build:
    cflags: ' -O1 -ftree-vectorize -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71006.c'
    sources:
      binary: pr71006.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -ftree-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71071_3034:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71071.c'
    sources:
      binary: pr71071.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71077_3035:
  build:
    cflags: ' -O3 -mavx2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71077.c'
    sources:
      binary: pr71077.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71084_3036:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71084.c'
    sources:
      binary: pr71084.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71104-1_3037:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71104-1.c'
    sources:
      binary: pr71104-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71104-2_3038:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71104-2.c'
    sources:
      binary: pr71104-2.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71148_3039:
  build:
    cflags: ' -O3 -funroll-loops -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71148.c'
    sources:
      binary: pr71148.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71279_3040:
  build:
    cflags: ' -O3 -march=knl -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71279.c'
    sources:
      binary: pr71279.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71280_3041:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71280.c'
    sources:
      binary: pr71280.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71289_3042:
  build:
    cflags: ' -O -fdump-tree-optimized-raw -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71289.c'
    sources:
      binary: pr71289.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized-raw"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71362_3043:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71362.c'
    sources:
      binary: pr71362.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(21:size of unnamed array is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(20:size of unnamed array is negative))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71478_3044:
  build:
    cflags: ' -O3 -Wno-psabi -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71478.c'
    sources:
      binary: pr71478.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Wno-psabi -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71514_3045:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71514.c'
    sources:
      binary: pr71514.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must not be a pointer to a function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a pointer to a constant size type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71518_3046:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71518.c'
    sources:
      binary: pr71518.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71558_3047:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71558.c'
    sources:
      binary: pr71558.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71581_3048:
  build:
    cflags: ' -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71581.c'
    sources:
      binary: pr71581.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(is used uninitialized in this function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(is used uninitialized in this function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(is used uninitialized in this function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71585-2_3049:
  build:
    cflags: -O2 -fstack-protector-all -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71585-2.c'
    sources:
      binary: pr71585-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fstack-protector-all"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71585-3_3050:
  build:
    cflags: -O2 -fstack-protector-all -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71585-3.c'
    sources:
      binary: pr71585-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fstack-protector-all"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71585_3051:
  build:
    cflags: -O2 -fstack-protector-all -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71585.c'
    sources:
      binary: pr71585.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fstack-protector-all"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71619_3052:
  build:
    cflags: ' -O --param=max-predicted-iterations=0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71619.c'
    sources:
      binary: pr71619.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O --param=max-predicted-iterations=0"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71632_3053:
  build:
    cflags: ' -O2 -ftree-loop-if-convert -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71632.c'
    sources:
      binary: pr71632.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-loop-if-convert"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71636-1_3054:
  build:
    cflags: ' -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71636-1.c'
    sources:
      binary: pr71636-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71636-2_3055:
  build:
    cflags: ' -O2 -fdump-tree-forwprop-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71636-2.c'
    sources:
      binary: pr71636-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-forwprop-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71685_3056:
  build:
    cflags: ' -std=gnu11 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71685.c'
    sources:
      binary: pr71685.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71969-1_3057:
  build:
    cflags: ' -std=gnu99 -fno-gnu89-inline -O2 -fdump-tree-einline-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71969-1.c'
    sources:
      binary: pr71969-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fno-gnu89-inline -O2 -fdump-tree-einline-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71969-2_3058:
  build:
    cflags: ' -std=gnu99 -fno-gnu89-inline -O2 -fdump-tree-einline-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71969-2.c'
    sources:
      binary: pr71969-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fno-gnu89-inline -O2 -fdump-tree-einline-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71969-3_3059:
  build:
    cflags: ' -std=gnu99 -fgnu89-inline -O2 -fdump-tree-einline-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71969-3.c'
    sources:
      binary: pr71969-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fgnu89-inline -O2 -fdump-tree-einline-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr72816_3060:
  build:
    cflags: ' -std=gnu11 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr72816.c'
    sources:
      binary: pr72816.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr76783_3061:
  build:
    cflags: ' -Og -w -Wno-psabi'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr76783.c'
    sources:
      binary: ./pr76783.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Og -w -Wno-psabi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77323_3062:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77323.c'
    sources:
      binary: pr77323.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not supported))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not supported))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77407_3063:
  build:
    cflags: ' -O -fstrict-overflow -fdump-tree-gimple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77407.c'
    sources:
      binary: pr77407.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fstrict-overflow -fdump-tree-gimple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77450_3064:
  build:
    cflags: ' -std=gnu90 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77450.c'
    sources:
      binary: pr77450.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu90"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77454_3065:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77454.c'
    sources:
      binary: pr77454.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77520_3066:
  build:
    cflags: ' -Wformat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77520.c'
    sources:
      binary: pr77520.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(unknown conversion type character .\\\\x80. in format))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77521_3067:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77521.c'
    sources:
      binary: pr77521.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid punctuation .\\\\x0a. in constraint))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77621_3068:
  build:
    cflags: ' -O3 -mtune=atom -msse2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77621.c'
    sources:
      binary: pr77621.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77664_3069:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77664.c'
    sources:
      binary: ./pr77664.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77673_3070:
  build:
    cflags: ' -O2 -fPIC -fdump-tree-bswap -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77673.c'
    sources:
      binary: pr77673.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC -fdump-tree-bswap"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77834_3071:
  build:
    cflags: ' -O -ftree-pre -Wno-psabi -mstringop-strategy=libcall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77834.c'
    sources:
      binary: pr77834.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -ftree-pre -Wno-psabi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77860_3072:
  build:
    cflags: ' -O2 -fno-tree-vrp -fno-tree-forwprop -Wno-psabi -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77860.c'
    sources:
      binary: pr77860.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-vrp -fno-tree-forwprop -Wno-psabi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77862_3073:
  build:
    cflags: ' -O2 -fPIC -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77862.c'
    sources:
      binary: pr77862.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77975_3074:
  build:
    cflags: ' -O2 -fdump-tree-ivcanon-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77975.c'
    sources:
      binary: pr77975.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-ivcanon-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78138_3075:
  build:
    cflags: ' -O2 -Wformat-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78138.c'
    sources:
      binary: pr78138.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wformat-overflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(.strcpy. writing 6 bytes into a region of size 5))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(.memcpy.: writing between 7 and 32 bytes into a region of size 5))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78148_3076:
  build:
    cflags: ' -O2 -fcompare-debug -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78148.c'
    sources:
      binary: pr78148.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78185_3077:
  build:
    cflags: ' -O'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78185.c'
    sources:
      binary: ./pr78185.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78241_3078:
  build:
    cflags: ' -Og -funroll-loops'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78241.c'
    sources:
      binary: ./pr78241.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Og -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78333_3079:
  build:
    cflags: ' -finstrument-functions'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78333.c'
    sources:
      binary: pr78333.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-finstrument-functions"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78384_3080:
  build:
    cflags: ' -O3 -w -fsplit-loops -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78384.c'
    sources:
      binary: pr78384.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -w -fsplit-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78408-1_3081:
  build:
    cflags: ' -O2 -fdump-tree-fab1-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78408-1.c'
    sources:
      binary: pr78408-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-fab1-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78408-2_3082:
  build:
    cflags: ' -O2 -fdump-tree-fab1-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78408-2.c'
    sources:
      binary: pr78408-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-fab1-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78445_3083:
  build:
    cflags: ' -O2 -ftree-loop-if-convert -ftree-vectorize -mavx2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78445.c'
    sources:
      binary: pr78445.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-loop-if-convert -ftree-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78526_3084:
  build:
    cflags: ' -O -fno-tree-ccp -fno-tree-sra -g -w -mavx512bw -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78526.c'
    sources:
      binary: pr78526.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-ccp -fno-tree-sra -g -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78540_3085:
  build:
    cflags: ' -O2 -Wno-psabi -march=core2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78540.c'
    sources:
      binary: pr78540.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wno-psabi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78547_3086:
  build:
    cflags: ' -Os -g -freorder-blocks-algorithm=simple -Wno-psabi -mstringop-strategy=libcall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78547.c'
    sources:
      binary: pr78547.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -g -freorder-blocks-algorithm=simple -Wno-psabi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78575_3087:
  build:
    cflags: ' -O2 -g -Wno-psabi -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78575.c'
    sources:
      binary: pr78575.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g -Wno-psabi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78582_3088:
  build:
    cflags: ' -fprofile-generate -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78582.c'
    sources:
      binary: pr78582.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fprofile-generate"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78644-1_3089:
  build:
    cflags: ' -Og -fipa-cp -w -Wno-psabi -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78644-1.c'
    sources:
      binary: pr78644-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Og -fipa-cp -w -Wno-psabi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78644-2_3090:
  build:
    cflags: ' -Og -finline-functions-called-once -w -Wno-psabi -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78644-2.c'
    sources:
      binary: pr78644-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Og -finline-functions-called-once -w -Wno-psabi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78721_3091:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78721.c'
    sources:
      binary: ./pr78721.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78725-2_3092:
  build:
    cflags: ' -O3 -fsplit-loops'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78725-2.c'
    sources:
      binary: ./pr78725-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fsplit-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78725_3093:
  build:
    cflags: ' -O3 -fsplit-loops'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78725.c'
    sources:
      binary: ./pr78725.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fsplit-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78768_3094:
  build:
    cflags: ' -O2 -Walloca-larger-than=10 -Wformat -Wformat-overflow -flto'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78768.c'
    sources:
      binary: pr78768.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Walloca-larger-than=10 -Wformat -Wformat-overflow -flto"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(argument to .alloca. is too large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(directive writing 32 bytes into a region of size 12" "-Wformat-overflow))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78775_3095:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78775.c'
    sources:
      binary: pr78775.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78957_3096:
  build:
    cflags: ' -fno-sso-struct=none -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78957.c'
    sources:
      binary: pr78957.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-sso-struct=none"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78965_3097:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78965.c'
    sources:
      binary: ./pr78965.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78973-2_3098:
  build:
    cflags: ' -O2 -Walloc-size-larger-than=4 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78973-2.c'
    sources:
      binary: pr78973-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Walloc-size-larger-than=4"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[\[0-9\]+, \[0-9\]+\\\] exceeds maximum object size 4" "ilp32))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78973_3099:
  build:
    cflags: ' -O2 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78973.c'
    sources:
      binary: pr78973.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(exceeds maximum object size" "pr79073))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79080_3100:
  build:
    cflags: ' -O1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79080.c'
    sources:
      binary: pr79080.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79255_3101:
  build:
    cflags: ' -O2 -g -fno-toplevel-reorder -Wno-attributes -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79255.c'
    sources:
      binary: pr79255.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g -fno-toplevel-reorder -Wno-attributes"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79405_3102:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79405.c'
    sources:
      binary: pr79405.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79494_3103:
  build:
    cflags: ' -O2 -fsplit-stack -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79494.c'
    sources:
      binary: pr79494.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fsplit-stack -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79499_3104:
  build:
    cflags: ' -O2 -fsplit-stack -fno-omit-frame-pointer -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79499.c'
    sources:
      binary: pr79499.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fsplit-stack -fno-omit-frame-pointer"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79570_3105:
  build:
    cflags: ' -O2 -fselective-scheduling2 -fvar-tracking-assignments -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79570.c'
    sources:
      binary: pr79570.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fselective-scheduling2 -fvar-tracking-assignments"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(changes selective scheduling" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79574-2_3106:
  build:
    cflags: ' -Os --param gcse-cost-distance-ratio=2147483647 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79574-2.c'
    sources:
      binary: pr79574-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os --param gcse-cost-distance-ratio=2147483647"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79574_3107:
  build:
    cflags: ' -Os --param gcse-cost-distance-ratio=2147483647 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79574.c'
    sources:
      binary: pr79574.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os --param gcse-cost-distance-ratio=2147483647"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79677_3108:
  build:
    cflags: ' -Wformat -Werror=format-security -Wformat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79677.c'
    sources:
      binary: pr79677.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wformat -Werror=format-security -Wformat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(format not a string literal and no format arguments))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79730_3109:
  build:
    cflags: ' -std=gnu11 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79730.c'
    sources:
      binary: pr79730.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79788-1_3110:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79788-1.c'
    sources:
      binary: pr79788-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(integer constant is too large for its type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79788-2_3111:
  build:
    cflags: ' -ftrapv -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79788-2.c'
    sources:
      binary: pr79788-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ftrapv"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(integer constant is too large for its type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79972_3112:
  build:
    cflags: ' -Walloca -Wvla-larger-than=10000 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79972.c'
    sources:
      binary: pr79972.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Walloca -Wvla-larger-than=10000"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(unbounded use of variable-length array))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80020_3113:
  build:
    cflags: ' -O2 -Wall -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr80020.c'
    sources:
      binary: pr80020.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80100_3114:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr80100.c'
    sources:
      binary: pr80100.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80112_3115:
  build:
    cflags: ' -Os -fmodulo-sched -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr80112.c'
    sources:
      binary: pr80112.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fmodulo-sched"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80163_3116:
  build:
    cflags: ' -O0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr80163.c'
    sources:
      binary: pr80163.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not computable at load time))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80170_3117:
  build:
    cflags: ' -fgimple -O2 -ftree-slp-vectorize'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr80170.c'
    sources:
      binary: ./pr80170.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fgimple -O2 -ftree-slp-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80218_3118:
  build:
    cflags: -O2 -fdump-rtl-ira-details-blocks -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr80218.c'
    sources:
      binary: pr80218.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-ira-details-blocks"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80286_3119:
  build:
    cflags: ' -O2 -Wno-psabi'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr80286.c'
    sources:
      binary: ./pr80286.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wno-psabi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80492_3120:
  build:
    cflags: ' -w -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr80492.c'
    sources:
      binary: pr80492.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w -O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80500_3121:
  build:
    cflags: ' -O2 -funroll-loops -ftree-loop-if-convert -fvariable-expansion-in-unroller -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr80500.c'
    sources:
      binary: pr80500.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-loops -ftree-loop-if-convert -fvariable-expansion-in-unroller"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80747_3122:
  build:
    cflags: ' -fprofile-use -freorder-blocks-and-partition -O1 -foptimize-sibling-calls -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr80747.c'
    sources:
      binary: pr80747.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fprofile-use -freorder-blocks-and-partition -O1 -foptimize-sibling-calls"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80903_3123:
  build:
    cflags: ' -O3 -funroll-loops -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr80903.c'
    sources:
      binary: pr80903.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr81192_3124:
  build:
    cflags: ' -Os -fdump-tree-pre-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr81192.c'
    sources:
      binary: pr81192.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fdump-tree-pre-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr81455_3125:
  build:
    cflags: ' -O -funswitch-loops -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr81455.c'
    sources:
      binary: pr81455.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -funswitch-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr81588_3126:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr81588.c'
    sources:
      binary: ./pr81588.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr81621_3127:
  build:
    cflags: ' -Og -fno-split-wide-types -freorder-blocks-and-partition -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr81621.c'
    sources:
      binary: pr81621.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Og -fno-split-wide-types -freorder-blocks-and-partition"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr81650_3128:
  build:
    cflags: ' -Walloc-size-larger-than=9223372036854775807 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr81650.c'
    sources:
      binary: pr81650.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Walloc-size-larger-than=9223372036854775807"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr81988_3129:
  build:
    cflags: ' -O3 -fpie -c'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr81988.c'
    sources:
      binary: pr81988.o
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fpie"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr82112_3130:
  build:
    cflags: ' -std=gnu90 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr82112.c'
    sources:
      binary: pr82112.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu90"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(argument 1 of .__atomic_load. must be a non-void pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(argument 2 of .__atomic_load. must be a pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(argument 1 of .__atomic_store. must be a non-void pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(argument 2 of .__atomic_store. must be a pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(argument 1 of .__atomic_exchange. must be a non-void pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(argument 2 of .__atomic_exchange. must be a pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(argument 3 of .__atomic_exchange. must be a pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(argument 1 of .__atomic_compare_exchange. must be a non-void pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(argument 2 of .__atomic_compare_exchange. must be a pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(argument 3 of .__atomic_compare_exchange. must be a pointer type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr82274-1_3131:
  build:
    cflags: ' -ftrapv'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr82274-1.c'
    sources:
      binary: ./pr82274-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ftrapv"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr82274-2_3132:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr82274-2.c'
    sources:
      binary: ./pr82274-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr82703_3133:
  build:
    cflags: ' -O2 -fno-tree-sra -ftree-vectorize'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr82703.c'
    sources:
      binary: ./pr82703.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-sra -ftree-vectorize"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr82765_3134:
  build:
    cflags: ' -Os -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr82765.c'
    sources:
      binary: pr82765.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr82975_3135:
  build:
    cflags: ' -fno-sched-pressure -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr82975.c'
    sources:
      binary: pr82975.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-sched-pressure -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr83198_3136:
  build:
    cflags: ' -Wall -Wno-format -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr83198.c'
    sources:
      binary: pr83198.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wno-format"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr83424_3137:
  build:
    cflags: ' -O -fno-tree-ccp -fno-tree-coalesce-vars'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr83424.c'
    sources:
      binary: ./pr83424.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-ccp -fno-tree-coalesce-vars"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr83512_3138:
  build:
    cflags: ' -O2 -freorder-blocks-algorithm=simple -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr83512.c'
    sources:
      binary: pr83512.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -freorder-blocks-algorithm=simple"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr83521_3139:
  build:
    cflags: ' -O1 -fno-tree-forwprop -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr83521.c'
    sources:
      binary: pr83521.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fno-tree-forwprop"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr83552_3140:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr83552.c'
    sources:
      binary: pr83552.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr83609_3141:
  build:
    cflags: ' -O2 -fno-tree-forwprop -fno-tree-ccp -fno-tree-fre -fno-tree-pre -fno-code-hoisting'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr83609.c'
    sources:
      binary: ./pr83609.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-forwprop -fno-tree-ccp -fno-tree-fre -fno-tree-pre -fno-code-hoisting"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr83623_3142:
  build:
    cflags: ' -O2 -mmovbe -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr83623.c'
    sources:
      binary: pr83623.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr8715_3143:
  build:
    cflags: ' -Wsign-compare -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr8715.c'
    sources:
      binary: pr8715.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wsign-compare -std=c99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(promoted ~unsigned is always non-zero))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr8788-1_3144:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr8788-1.c'
    sources:
      binary: pr8788-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(impossible constraint))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(asm operand 1" "asm operand 1))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr8835-1_3145:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr8835-1.c'
    sources:
      binary: pr8835-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr8927-1_3146:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr8927-1.c'
    sources:
      binary: pr8927-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr9365-1_3147:
  build:
    cflags: ' -O2 -fomit-frame-pointer -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr9365-1.c'
    sources:
      binary: pr9365-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fomit-frame-pointer"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr9814-1_3148:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr9814-1.c'
    sources:
      binary: ./pr9814-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-diag-1_3149:
  build:
    cflags: ' -Wuninitialized -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-diag-1.c'
    sources:
      binary: pragma-diag-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(uninitialized))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(uninitialized))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-diag-2_3150:
  build:
    cflags: ' -std=c89 -pedantic -Wno-long-long -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-diag-2.c'
    sources:
      binary: pragma-diag-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -pedantic -Wno-long-long"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(long long))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-diag-3_3151:
  build:
    cflags: ' -Wswitch-enum -Wsign-compare -fstrict-overflow -Wstrict-overflow -Werror -Wno-error=switch-enum -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-diag-3.c'
    sources:
      binary: pragma-diag-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wswitch-enum -Wsign-compare -fstrict-overflow -Wstrict-overflow -Werror -Wno-error=switch-enum"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(comparison))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(comparison))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(switch))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-diag-4_3152:
  build:
    cflags: ' -Wsign-compare -Werror=sign-compare -Werror=switch-enum -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-diag-4.c'
    sources:
      binary: pragma-diag-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wsign-compare -Werror=sign-compare -Werror=switch-enum"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(comparison))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(comparison))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(switch))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-diag-5_3153:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-diag-5.c'
    sources:
      binary: pragma-diag-5.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:2:)[^
        ]*([0-9]+: warning:[^
        ]*(missing" "missing))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(24:missing" "wrong column))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(24:expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(32:unknown))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-diag-6_3154:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-diag-6.c'
    sources:
      binary: pragma-diag-6.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:2:)[^
        ]*([0-9]+: warning:[^
        ]*(is valid for C../ObjC.. but not for C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(not an option that controls warnings))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(not an option that controls warnings))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-message_3155:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-message.c'
    sources:
      binary: pragma-message.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(17:missing terminating" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(17:missing terminating" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(18:missing terminating" "))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(expected a string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(expected a string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(expected a string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(expected a string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(expected a string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(expected a string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(expected a string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(expected a string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(expected a string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(expected a string" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(expected a string" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(expected a string" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(malformed '#pragma message" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(junk at end of '#pragma message'" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(junk at end of '#pragma message'" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-pack-3_3156:
  build:
    cflags: ' -std=gnu99'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-pack-3.c'
    sources:
      binary: ./pragma-pack-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-pack-4_3157:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-pack-4.c'
    sources:
      binary: pragma-pack-4.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-pack-5_3158:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-pack-5.c'
    sources:
      binary: pragma-pack-5.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-pop_options-1_3159:
  build:
    cflags: '  -ansi -pedantic-errors -c'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-pop_options-1.c'
    sources:
      binary: pragma-pop_options-1.o
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-re-1_3160:
  build:
    cflags: -ansi -pedantic-errors -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-re-1.c'
    sources:
      binary: pragma-re-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-re-2_3161:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-re-2.c'
    sources:
      binary: pragma-re-2.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:2:)[^
        ]*([0-9]+: warning:[^
        ]*(malformed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(malformed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(malformed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(junk))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-re-3_3162:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-re-3.c'
    sources:
      binary: pragma-re-3.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-re-4_3163:
  build:
    cflags: -ansi -pedantic-errors -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-re-4.c'
    sources:
      binary: pragma-re-4.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_precedence-1_3164:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/precedence-1.c'
    sources:
      binary: precedence-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-10_3166:
  build:
    cflags: ' -O2 -fdump-tree-profile_estimate -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-10.c'
    sources:
      binary: predict-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-profile_estimate"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-11_3167:
  build:
    cflags: ' -O2 -fdump-tree-profile_estimate -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-11.c'
    sources:
      binary: predict-11.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-profile_estimate"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-12_3168:
  build:
    cflags: ' -O2 -fdump-tree-profile_estimate -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-12.c'
    sources:
      binary: predict-12.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-profile_estimate"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-13_3169:
  build:
    cflags: ' -O2 -fdump-tree-profile_estimate -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-13.c'
    sources:
      binary: predict-13.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-profile_estimate"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-14_3170:
  build:
    cflags: ' -O2 -fdump-tree-profile_estimate -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-14.c'
    sources:
      binary: predict-14.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-profile_estimate"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-1_3165:
  build:
    cflags: ' -O2 -fdump-tree-profile_estimate -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-1.c'
    sources:
      binary: predict-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-profile_estimate"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-2_3171:
  build:
    cflags: ' -O2 -fdump-tree-profile_estimate -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-2.c'
    sources:
      binary: predict-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-profile_estimate"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-3_3172:
  build:
    cflags: ' -O2 -fdump-tree-profile_estimate -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-3.c'
    sources:
      binary: predict-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-profile_estimate"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-4_3173:
  build:
    cflags: ' -O2 -fdump-tree-profile_estimate -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-4.c'
    sources:
      binary: predict-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-profile_estimate"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-5_3174:
  build:
    cflags: ' -O2 -fdump-tree-profile_estimate -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-5.c'
    sources:
      binary: predict-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-profile_estimate"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-6_3175:
  build:
    cflags: ' -O2 -fdump-tree-profile_estimate -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-6.c'
    sources:
      binary: predict-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-profile_estimate"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-7_3176:
  build:
    cflags: ' -O2 -fdump-tree-profile_estimate -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-7.c'
    sources:
      binary: predict-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-profile_estimate"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-8_3177:
  build:
    cflags: -O2 -fdump-rtl-expand -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-8.c'
    sources:
      binary: predict-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-expand"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-9_3178:
  build:
    cflags: ' -O2 -fdisable-tree-evrp -fdump-tree-profile_estimate -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-9.c'
    sources:
      binary: predict-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdisable-tree-evrp -fdump-tree-profile_estimate"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_prefetch-loop-arrays-1_3179:
  build:
    cflags: ' -O2 -fprefetch-loop-arrays -march=i686 -msse -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/prefetch-loop-arrays-1.c'
    sources:
      binary: prefetch-loop-arrays-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fprefetch-loop-arrays -w"'
      - '"-O2 -fprefetch-loop-arrays -march=i686 -msse -w" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_profile-generate-2_3180:
  build:
    cflags: ' -O -fprofile-generate -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/profile-generate-2.c'
    sources:
      binary: profile-generate-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fprofile-generate"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_profile-update-warning_3181:
  build:
    cflags: ' -fprofile-update=atomic -fprofile-generate -march=i386 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/profile-update-warning.c'
    sources:
      binary: profile-update-warning.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fprofile-update=atomic -fprofile-generate -march=i386"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(target does not support atomic profile update, single mode is selected))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_proto-1_3182:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/proto-1.c'
    sources:
      binary: proto-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array of voids))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pthread-init-1_3183:
  build:
    cflags: ' -Wextra -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pthread-init-1.c'
    sources:
      binary: pthread-init-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wextra -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pthread-init-2_3184:
  build:
    cflags: ' -Wextra -Wall -ansi -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pthread-init-2.c'
    sources:
      binary: pthread-init-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wextra -Wall -ansi"'
      - '"-Wextra -Wall -ansi -D_POSIX_C_SOURCE=199506L" { target { *-*-hpux* } }'
      - '"-Wextra -Wall -ansi -D_XOPEN_SOURCE=500" { target { powerpc-ibm-aix* } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pure-1_3185:
  build:
    cflags: ' -O1 -fdump-ipa-pure-const -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pure-1.c'
    sources:
      binary: pure-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fdump-ipa-pure-const"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pure-2_3186:
  build:
    cflags: ' -O2 -Wsuggest-attribute=pure -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pure-2.c'
    sources:
      binary: pure-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wsuggest-attribute=pure"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(pure" "detect pure candidate" { target *-*-* } "10))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(pure" "detect pure candidate" { target *-*-* } "17))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(pure\[^\n\]* normally" "detect pure candidate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(pure\[^\n\]* normally" "detect pure candidate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(pure" "detect pure candidate" { target *-*-* } "55))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_qual-component-1_3187:
  build:
    cflags: ' -pedantic -Wdiscarded-array-qualifiers -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/qual-component-1.c'
    sources:
      binary: qual-component-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -Wdiscarded-array-qualifiers"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|initialization discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|assignment discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:150:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|initialization discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|assignment discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|initialization discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|assignment discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|initialization discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:180:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|assignment discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|initialization discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|assignment discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|initialization discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:205:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|assignment discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|initialization discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:218:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|assignment discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:225:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|initialization discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:230:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|assignment discards))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_qual-return-1_3188:
  build:
    cflags: ' -std=gnu99 -Wreturn-type -Wignored-qualifiers -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/qual-return-1.c'
    sources:
      binary: qual-return-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wreturn-type -Wignored-qualifiers"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers" "int decl))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers" "int ptr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers" "int defn))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers" "void decl))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers" "void ptr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(qualified" "void defn))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers" "void decl))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers" "void ptr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(qualified" "void defn))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers" "restrict decl))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers" "restrict ptr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers" "restrict defn))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_qual-return-2_3189:
  build:
    cflags: ' -pedantic -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/qual-return-2.c'
    sources:
      binary: qual-return-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -std=gnu99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(qualified" "volatile defn))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_qual-return-3_3190:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/qual-return-3.c'
    sources:
      binary: qual-return-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types" "different qualifiers))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(qualified|volatile" "different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(not compatible" "different qualifiers))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_qual-return-4_3191:
  build:
    cflags: ' -pedantic -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/qual-return-4.c'
    sources:
      binary: qual-return-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_qual-return-5_3192:
  build:
    cflags: ' -std=c11 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/qual-return-5.c'
    sources:
      binary: qual-return-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(restrict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(restrict))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_qual-return-6_3193:
  build:
    cflags: ' -std=c11 -Wignored-qualifiers -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/qual-return-6.c'
    sources:
      binary: qual-return-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -Wignored-qualifiers"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers ignored))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_range-test-1_3194:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/range-test-1.c'
    sources:
      binary: ./range-test-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_readonly-loc_3195:
  build:
    cflags: ' -O -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/readonly-loc.c'
    sources:
      binary: readonly-loc.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only location" "*(arr)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only location" "*(arr + 4u)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only location" "arr2\[0\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only location" "arr2\[1\]))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_real-const-1_3196:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/real-const-1.c'
    sources:
      binary: real-const-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-10_3198:
  build:
    cflags: ' -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-10.c'
    sources:
      binary: redecl-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(has both))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(has both))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(has both))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(has both))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(array 'x' assumed to have one element))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(array 'z' assumed to have one element))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-11_3199:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-11.c'
    sources:
      binary: redecl-11.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types for 'f'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-12_3200:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-12.c'
    sources:
      binary: redecl-12.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types for 'a'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-13_3201:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-13.c'
    sources:
      binary: redecl-13.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types for 'a'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-14_3202:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-14.c'
    sources:
      binary: redecl-14.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid application of 'sizeof' to incomplete type 'IA {aka int\\\[\\\]}'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-15_3203:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-15.c'
    sources:
      binary: redecl-15.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(conflicting types for 'g'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-16_3204:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-16.c'
    sources:
      binary: redecl-16.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-17_3205:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-17.c'
    sources:
      binary: redecl-17.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-1_3197:
  build:
    cflags: ' -std=c89 -pedantic -Wall -Wno-unused -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-1.c'
    sources:
      binary: redecl-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -pedantic -Wall -Wno-unused"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible implicit declaration" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(follows non-static))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(follows non-static))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(follows non-static))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit declaration of function" "implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit declaration of function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit" "implicit))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-2_3206:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-2.c'
    sources:
      binary: redecl-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redeclaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redeclaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(follows declaration with no linkage))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redeclaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redeclaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(follows declaration with no linkage))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(follows extern declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(follows extern declaration))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-3_3207:
  build:
    cflags: ' -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-3.c'
    sources:
      binary: redecl-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:201:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:203:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:211:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:214:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:222:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:224:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:232:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:240:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:245:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:253:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:266:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:282:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:324:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:358:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:361:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:363:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:371:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:376:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:410:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:413:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:418:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:421:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:423:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:431:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:434:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:442:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:444:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:452:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:460:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:465:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:473:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:486:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:502:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:544:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:578:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:581:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:586:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:589:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:591:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:599:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:602:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:610:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:612:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:620:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:628:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:633:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:641:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:654:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:670:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:712:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:746:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:749:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:751:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:759:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:764:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:798:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:801:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:806:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:809:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:811:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:819:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:822:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:830:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:832:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:840:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:848:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:853:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:861:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:874:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:890:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:932:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:966:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:969:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:974:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:977:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:979:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:987:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:990:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:998:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1000:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1008:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1016:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1021:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1029:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1042:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1058:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1134:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1137:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1139:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1147:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1152:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-4_3208:
  build:
    cflags: ' -std=c89 -Wformat -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-4.c'
    sources:
      binary: redecl-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -Wformat -g"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(8:format))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-5_3209:
  build:
    cflags: ' -std=c89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-5.c'
    sources:
      binary: redecl-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-6_3210:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-6.c'
    sources:
      binary: redecl-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-7_3211:
  build:
    cflags: ' -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-7.c'
    sources:
      binary: redecl-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(completed incompatibly))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-8_3212:
  build:
    cflags: ' -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-8.c'
    sources:
      binary: redecl-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-g"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(completed incompatibly))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-9_3213:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-9.c'
    sources:
      binary: redecl-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_reg-vol-struct-1_3214:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/reg-vol-struct-1.c'
    sources:
      binary: reg-vol-struct-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(object with volatile field" "explicit reg name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(address of register" "explicit address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(address of register" "implicit address))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_register-var-1_3215:
  build:
    cflags: ' -ansi -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/register-var-1.c'
    sources:
      binary: register-var-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(address of register variable))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_register-var-2_3216:
  build:
    cflags: ' -ansi -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/register-var-2.c'
    sources:
      binary: register-var-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(address of register variable))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_register-var-3_3217:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/register-var-3.c'
    sources:
      binary: register-var-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(register name not specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(register name not specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(register name not specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(register name not specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(register name not specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(register name not specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(register name not specified))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_return-type-1_3218:
  build:
    cflags: ' -O -Wreturn-type -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/return-type-1.c'
    sources:
      binary: return-type-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wreturn-type"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(control reaches end of non-void function" "warning for falling off end of non-void function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_return-type-2_3219:
  build:
    cflags: ' -O2 -Wreturn-type -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/return-type-2.c'
    sources:
      binary: return-type-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wreturn-type"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_return-type-3_3220:
  build:
    cflags: ' -O -foptimize-sibling-calls -Wreturn-type -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/return-type-3.c'
    sources:
      binary: return-type-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -foptimize-sibling-calls -Wreturn-type"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(control reaches end of non-void function" "warning for falling off end of non-void function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_section1_3221:
  build:
    cflags: -ansi -pedantic-errors -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/section1.c'
    sources:
      binary: section1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sequence-pt-1_3222:
  build:
    cflags: ' -Wsequence-point -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sequence-pt-1.c'
    sources:
      binary: sequence-pt-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wsequence-point"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sequence-pt-2_3223:
  build:
    cflags: ' -Wsequence-point -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sequence-pt-2.c'
    sources:
      binary: sequence-pt-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wsequence-point"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sequence-pt-3_3224:
  build:
    cflags: ' -Wsequence-point -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sequence-pt-3.c'
    sources:
      binary: sequence-pt-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wsequence-point"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sequence-pt-pr17880_3225:
  build:
    cflags: ' -Wsequence-point -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sequence-pt-pr17880.c'
    sources:
      binary: sequence-pt-pr17880.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wsequence-point"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_setjmp-1_3226:
  build:
    cflags: ' -O -Wclobbered -Wextra -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/setjmp-1.c'
    sources:
      binary: setjmp-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wclobbered -Wextra -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_setjmp-2_3227:
  build:
    cflags: ' -O -fomit-frame-pointer -march=i386'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/setjmp-2.c'
    sources:
      binary: ./setjmp-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fomit-frame-pointer"'
      - '"-O -fomit-frame-pointer -march=i386" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_setjmp-3_3228:
  build:
    cflags: ' -O'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/setjmp-3.c'
    sources:
      binary: ./setjmp-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_setjmp-4_3229:
  build:
    cflags: ' -O'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/setjmp-4.c'
    sources:
      binary: ./setjmp-4.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_setjmp-5_3230:
  build:
    cflags: ' -O2 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/setjmp-5.c'
    sources:
      binary: setjmp-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_setjmp-6_3231:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/setjmp-6.c'
    sources:
      binary: setjmp-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_short-compare-1_3232:
  build:
    cflags: ' -O -mtune=i686'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/short-compare-1.c'
    sources:
      binary: ./short-compare-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
      - '"-O -mtune=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_short-compare-2_3233:
  build:
    cflags: ' -O -mtune=i686'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/short-compare-2.c'
    sources:
      binary: ./short-compare-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
      - '"-O -mtune=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_shrink-wrap-alloca_3234:
  build:
    cflags: ' -O2 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/shrink-wrap-alloca.c'
    sources:
      binary: shrink-wrap-alloca.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_shrink-wrap-loop_3235:
  build:
    cflags: -O2 -fdump-rtl-pro_and_epilogue -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/shrink-wrap-loop.c'
    sources:
      binary: shrink-wrap-loop.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-pro_and_epilogue" '
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_shrink-wrap-pretend_3236:
  build:
    cflags: ' -O2 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/shrink-wrap-pretend.c'
    sources:
      binary: shrink-wrap-pretend.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_shrink-wrap-sibcall_3237:
  build:
    cflags: ' -O2 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/shrink-wrap-sibcall.c'
    sources:
      binary: shrink-wrap-sibcall.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sibcall-10_3239:
  build:
    cflags: ' -O2 -foptimize-sibling-calls'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sibcall-10.c'
    sources:
      binary: ./sibcall-10.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -foptimize-sibling-calls"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sibcall-11_3240:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sibcall-11.c'
    sources:
      binary: sibcall-11.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sibcall-1_3238:
  build:
    cflags: ' -O2 -foptimize-sibling-calls'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sibcall-1.c'
    sources:
      binary: ./sibcall-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -foptimize-sibling-calls"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sibcall-2_3241:
  build:
    cflags: ' -O2 -foptimize-sibling-calls'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sibcall-2.c'
    sources:
      binary: ./sibcall-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -foptimize-sibling-calls"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sibcall-3_3242:
  build:
    cflags: ' -O2 -foptimize-sibling-calls'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sibcall-3.c'
    sources:
      binary: ./sibcall-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -foptimize-sibling-calls"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sibcall-4_3243:
  build:
    cflags: ' -O2 -foptimize-sibling-calls'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sibcall-4.c'
    sources:
      binary: ./sibcall-4.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -foptimize-sibling-calls"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sibcall-6_3244:
  build:
    cflags: ' -O2 -foptimize-sibling-calls -fno-ipa-cp'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sibcall-6.c'
    sources:
      binary: ./sibcall-6.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -foptimize-sibling-calls -fno-ipa-cp"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sibcall-7_3245:
  build:
    cflags: ' -O2 -fno-optimize-sibling-calls'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sibcall-7.c'
    sources:
      binary: ./sibcall-7.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-optimize-sibling-calls"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sibcall-8_3246:
  build:
    cflags: ' -O2 -foptimize-sibling-calls'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sibcall-8.c'
    sources:
      binary: ./sibcall-8.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -foptimize-sibling-calls"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sibcall-9_3247:
  build:
    cflags: ' -O2 -foptimize-sibling-calls'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sibcall-9.c'
    sources:
      binary: ./sibcall-9.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -foptimize-sibling-calls"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_signbit-sa_3248:
  build:
    cflags: ' -std=c99 -O2 -Wstrict-aliasing -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/signbit-sa.c'
    sources:
      binary: signbit-sa.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -O2 -Wstrict-aliasing"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_simd-1_3249:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/simd-1.c'
    sources:
      binary: simd-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(can't convert a vector of type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary +))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary -))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary *))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary /))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_simd-1b_3250:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/simd-1b.c'
    sources:
      binary: simd-1b.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_simd-2_3251:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/simd-2.c'
    sources:
      binary: simd-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_simd-3_3252:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/simd-3.c'
    sources:
      binary: simd-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-maltivec" { target { powerpc*-*-* && powerpc_altivec_ok } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_simd-4_3253:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/simd-4.c'
    sources:
      binary: simd-4.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_simd-5_3254:
  build:
    cflags: ' -O2 -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/simd-5.c'
    sources:
      binary: simd-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when initializing" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_simd-6_3255:
  build:
    cflags: ' -O2 -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/simd-6.c'
    sources:
      binary: simd-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when initializing" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_simd-7_3256:
  build:
    cflags: ' -w -Wno-psabi -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/simd-7.c'
    sources:
      binary: simd-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w -Wno-psabi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_simd-8_3257:
  build:
    cflags: ' -w -Wno-psabi -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/simd-8.c'
    sources:
      binary: simd-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w -Wno-psabi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_single-precision-constant_3258:
  build:
    cflags: ' -fsingle-precision-constant'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/single-precision-constant.c'
    sources:
      binary: ./single-precision-constant.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fsingle-precision-constant"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sizeof-1_3259:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sizeof-1.c'
    sources:
      binary: sizeof-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sizeof-2_3260:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sizeof-2.c'
    sources:
      binary: sizeof-2.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression before))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_slp-1_3261:
  build:
    cflags: ' -O2 -ftree-vectorize -fno-vect-cost-model -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/slp-1.c'
    sources:
      binary: slp-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-vectorize -fno-vect-cost-model"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_smod-1_3262:
  build:
    cflags: ' -std=c99 -mtune=i486'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/smod-1.c'
    sources:
      binary: ./smod-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
      - '"-std=c99 -mtune=i486" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sms-10_3264:
  build:
    cflags: -O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -fdump-rtl-sms -ffat-lto-objects
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sms-10.c'
    sources:
      binary: ./sms-10.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -fdump-rtl-sms"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sms-11_3265:
  build:
    cflags: ' -O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -fdump-rtl-sms'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sms-11.c'
    sources:
      binary: ./sms-11.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -fdump-rtl-sms"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sms-1_3263:
  build:
    cflags: -O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -fdump-rtl-sms -ffat-lto-objects
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sms-1.c'
    sources:
      binary: ./sms-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -fdump-rtl-sms"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sms-2_3266:
  build:
    cflags: -O2 -fmodulo-sched -fdump-rtl-sms -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sms-2.c'
    sources:
      binary: sms-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched -fdump-rtl-sms"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sms-3_3267:
  build:
    cflags: -O2 -fmodulo-sched -funroll-loops -fdump-rtl-sms --param sms-min-sc=1 -fmodulo-sched-allow-regmoves -ffat-lto-objects
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sms-3.c'
    sources:
      binary: ./sms-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched -funroll-loops -fdump-rtl-sms --param sms-min-sc=1 -fmodulo-sched-allow-regmoves"'
      - '"-O2 -fmodulo-sched -funroll-loops -fdump-rtl-sms --param sms-min-sc=1 -fmodulo-sched-allow-regmoves -fno-sched-pressure" { target powerpc*-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sms-4_3268:
  build:
    cflags: -O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -fdump-rtl-sms -ffat-lto-objects
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sms-4.c'
    sources:
      binary: ./sms-4.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -fdump-rtl-sms"'
      - '"-O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -fdump-rtl-sms --param sms-min-sc=1" { target powerpc*-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sms-5_3269:
  build:
    cflags: -O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -funroll-loops -fdump-rtl-sms --param sms-min-sc=1 -ffat-lto-objects
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sms-5.c'
    sources:
      binary: ./sms-5.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -funroll-loops -fdump-rtl-sms --param sms-min-sc=1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sms-6_3270:
  build:
    cflags: -O2 -fmodulo-sched -fdump-rtl-sms --param sms-min-sc=1 -ffat-lto-objects
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sms-6.c'
    sources:
      binary: ./sms-6.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched -fdump-rtl-sms --param sms-min-sc=1"'
      - '"-O2 -fmodulo-sched -fdump-rtl-sms --param sms-min-sc=1 -fmodulo-sched-allow-regmoves -fno-sched-pressure" { target powerpc*-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sms-7_3271:
  build:
    cflags: -O3 -fmodulo-sched -fstrict-aliasing -fdump-rtl-sms -fmodulo-sched-allow-regmoves --param sms-min-sc=1 -ffat-lto-objects
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sms-7.c'
    sources:
      binary: ./sms-7.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fmodulo-sched -fstrict-aliasing -fdump-rtl-sms -fmodulo-sched-allow-regmoves --param sms-min-sc=1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sms-8_3272:
  build:
    cflags: -O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -fdump-rtl-sms --param sms-min-sc=1 -ffat-lto-objects
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sms-8.c'
    sources:
      binary: ./sms-8.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -fdump-rtl-sms --param sms-min-sc=1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sms-9_3273:
  build:
    cflags: ' -O2 -fmodulo-sched -fmodulo-sched-allow-regmoves'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sms-9.c'
    sources:
      binary: ./sms-9.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched -fmodulo-sched-allow-regmoves"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spec-options_3274:
  build:
    cflags: ' -B./gcc.dg --specs=foo.specs -tfoo'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spec-options.c'
    sources:
      binary: ./spec-options.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-B${srcdir}/gcc.dg --specs=foo.specs -tfoo"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-fields-2_3275:
  build:
    cflags: ' -fdiagnostics-show-caret -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-fields-2.c'
    sources:
      binary: spellcheck-fields-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(did you mean .color.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(did you mean .color.?))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-fields-3_3276:
  build:
    cflags: ' -fdiagnostics-show-caret -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-fields-3.c'
    sources:
      binary: spellcheck-fields-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret -std=c99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.struct foo. has no member named .foa.; did you mean .foo.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.struct foo. has no member named .this_does_not_match.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.union u. has no member named .colour.; did you mean .color.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.struct foo. has no member named .foa.; did you mean .foo.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.struct foo. has no member named .this_does_not_match.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.union u. has no member named .colour.; did you mean .color.?))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-fields_3277:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-fields.c'
    sources:
      binary: spellcheck-fields.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('struct foo' has no member named 'm_bar'; did you mean 'bar'?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('struct foo' has no member named 'm_bar'; did you mean 'bar'?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('struct s' has no member named 'ac'; did you mean 'ab'?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('struct foo' has no member named 'foa'; did you mean 'foo'?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(has no member named" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('union u' has no member named 'colour'; did you mean 'color'?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('struct <anonymous>' has no member named 'colour'; did you mean 'color'?))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-identifiers-2_3278:
  build:
    cflags: ' -Wimplicit-function-declaration -fdiagnostics-show-caret -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-identifiers-2.c'
    sources:
      binary: spellcheck-identifiers-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wimplicit-function-declaration -fdiagnostics-show-caret"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(10: implicit declaration of function .ssacnf.; did you mean .sscafn.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(10: implicit declaration of function .sacnf.; did you mean .scanf.?))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-identifiers-3_3279:
  build:
    cflags: ' -Wimplicit-function-declaration -fdiagnostics-show-caret -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-identifiers-3.c'
    sources:
      binary: spellcheck-identifiers-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wimplicit-function-declaration -fdiagnostics-show-caret"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(3: implicit declaration of function .fn1badc.; did you mean .fn1abcd.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(3: implicit declaration of function .fn2fehg.; did you mean .fn2efhg.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(3: implicit declaration of function .fn3jilk.; did you mean .fn3ijkl.?))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-identifiers_3280:
  build:
    cflags: ' -Wimplicit-function-declaration -fdiagnostics-show-caret -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-identifiers.c'
    sources:
      binary: spellcheck-identifiers.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wimplicit-function-declaration -fdiagnostics-show-caret"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10: .parma. undeclared .first use in this function.; did you mean .param.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10: .__LINE_. undeclared .first use in this function.; did you mean .__LINE__.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(11: .MAX_ITEM. undeclared here .not in a function.; did you mean .MAX_ITEMS.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10: .FOO_FURST. undeclared .first use in this function.; did you mean .FOO_FIRST.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10: .FOO_SECCOND. undeclared .first use in this function.; did you mean .FOO_SECOND.))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(3: implicit declaration of function .gtk_widget_showall.; did you mean .gtk_widget_show_all.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(3: implicit declaration of function .gtk_widget_showall_.; did you mean .gtk_widget_show_all.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(3: implicit declaration of function .GtkWidgetShowAll.; did you mean .gtk_widget_show_all.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(10: implicit declaration of function .MACRAME.; did you mean .MACRO.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(10: implicit declaration of function .IDENTIFIER_PTR.; did you mean .IDENTIFIER_POINTER.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: warning:[^
        ]*(3: implicit declaration of function .snprint.; did you mean .snprintf..))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-10_3282:
  build:
    cflags: ' -fno-if-convert -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-10.c'
    sources:
      binary: spellcheck-options-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-if-convert"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option .-fno-if-convert.; did you mean .-fno-if-conversion.?"  "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-11_3283:
  build:
    cflags: ' -ftls-model=global-dinamic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-11.c'
    sources:
      binary: spellcheck-options-11.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ftls-model=global-dinamic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown TLS model 'global-dinamic'"  "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-12_3284:
  build:
    cflags: ' -fno-stack-protector-explicit -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-12.c'
    sources:
      binary: spellcheck-options-12.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-stack-protector-explicit"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option .-fno-stack-protector-explicit.; did you mean .-fstack-protector-explicit.." "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-13_3285:
  build:
    cflags: ' -fsanitize -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-13.c'
    sources:
      binary: spellcheck-options-13.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fsanitize"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option .-fsanitize..$" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-14_3286:
  build:
    cflags: ' -fsanitize=addres,nul,this-is-not-a-sanitizer-option -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-14.c'
    sources:
      binary: spellcheck-options-14.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fsanitize=addres,nul,this-is-not-a-sanitizer-option"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized argument to -fsanitize= option: .addres.; did you mean .address." "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized argument to -fsanitize= option: .nul.; did you mean .null." "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized argument to -fsanitize= option: .this-is-not-a-sanitizer-option." "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-15_3287:
  build:
    cflags: ' -fsanitize=al -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-15.c'
    sources:
      binary: spellcheck-options-15.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fsanitize=al"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized argument to -fsanitize= option: .al." "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-16_3288:
  build:
    cflags: ' -fsanitize-recover=threed -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-16.c'
    sources:
      binary: spellcheck-options-16.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fsanitize-recover=threed"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized argument to -fsanitize-recover= option: .threed." "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-17_3289:
  build:
    cflags: ' -fno-sanitize=threed -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-17.c'
    sources:
      binary: spellcheck-options-17.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-sanitize=threed"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized argument to -fno-sanitize= option: .threed.; did you mean .thread." "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-1_3281:
  build:
    cflags: ' -Wcoercion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-1.c'
    sources:
      binary: spellcheck-options-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wcoercion"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option '-Wcoercion'; did you mean '-Wconversion'?"  "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-2_3290:
  build:
    cflags: ' -Wthis-should-not-get-a-hint -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-2.c'
    sources:
      binary: spellcheck-options-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wthis-should-not-get-a-hint"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option '-Wthis-should-not-get-a-hint'"  "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-3_3291:
  build:
    cflags: ' -sanitize=address -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-3.c'
    sources:
      binary: spellcheck-options-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-sanitize=address"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option '-sanitize=address'; did you mean '-fsanitize=address'?"  "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-4_3292:
  build:
    cflags: ' -sanitize-recover=integer-divide-by-0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-4.c'
    sources:
      binary: spellcheck-options-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-sanitize-recover=integer-divide-by-0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option '-sanitize-recover=integer-divide-by-0'; did you mean '-fsanitize-recover=integer-divide-by-zero'?"  "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-5_3293:
  build:
    cflags: ' -no-sanitize=all -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-5.c'
    sources:
      binary: spellcheck-options-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-no-sanitize=all"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option '-no-sanitize=all'; did you mean '-fno-sanitize=all'?"  "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-6_3294:
  build:
    cflags: ' -fwarn-no-abi-tag -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-6.c'
    sources:
      binary: spellcheck-options-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fwarn-no-abi-tag"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option '-fwarn-no-abi-tag'; did you mean '--warn-no-abi-tag'?"  "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-7_3295:
  build:
    cflags: ' -tls-model=global-dynamic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-7.c'
    sources:
      binary: spellcheck-options-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-tls-model=global-dynamic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option '-tls-model=global-dynamic'; did you mean '-ftls-model=global-dynamic'?"  "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-8_3296:
  build:
    cflags: ' --Wno-narrowing -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-8.c'
    sources:
      binary: spellcheck-options-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"--Wno-narrowing"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option '--Wno-narrowing'; did you mean '-Wno-narrowing'?"  "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-9_3297:
  build:
    cflags: ' -fmo-unroll-loops -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-9.c'
    sources:
      binary: spellcheck-options-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fmo-unroll-loops"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option '-fmo-unroll-loops'; did you mean '-fno-unroll-loops'?"  "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-params-2_3298:
  build:
    cflags: ' --param does-not-resemble-anything=42 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-params-2.c'
    sources:
      binary: spellcheck-params-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"--param does-not-resemble-anything=42"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid --param name .does-not-resemble-anything."  "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-params_3299:
  build:
    cflags: ' --param max-early-inliner-iteration=3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-params.c'
    sources:
      binary: spellcheck-params.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"--param max-early-inliner-iteration=3"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid --param name .max-early-inliner-iteration.; did you mean .max-early-inliner-iterations.?"  "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-typenames_3300:
  build:
    cflags: ' -fdiagnostics-show-caret -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-typenames.c'
    sources:
      binary: spellcheck-typenames.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(14: unknown type name .singed.; did you mean .signed.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(14: unknown type name .car.; did you mean .char.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(25: before .e.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(1: unknown type name .some_thing_t.; did you mean .something_t.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of .test_6. isn't known))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 'int64'; did you mean 'int64_t'?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(1: unknown type name .foo_t.; use .struct. keyword to refer to the type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(1: unknown type name .bar_t.; use .union. keyword to refer to the type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(1: unknown type name .baz.; use .enum. keyword to refer to the type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8: before .char.))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spill-1_3301:
  build:
    cflags: ' -O2 -fno-omit-frame-pointer -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spill-1.c'
    sources:
      binary: spill-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-omit-frame-pointer"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_split-1_3302:
  build:
    cflags: ' -fsplit-stack'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/split-1.c'
    sources:
      binary: ./split-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fsplit-stack"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_split-2_3303:
  build:
    cflags: ' -pthread -fsplit-stack'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/split-2.c'
    sources:
      binary: ./split-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pthread -fsplit-stack"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_split-3_3304:
  build:
    cflags: ' -fsplit-stack'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/split-3.c'
    sources:
      binary: ./split-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fsplit-stack"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_split-4_3305:
  build:
    cflags: ' -fsplit-stack'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/split-4.c'
    sources:
      binary: ./split-4.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fsplit-stack"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_split-5_3306:
  build:
    cflags: ' -pthread -fsplit-stack'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/split-5.c'
    sources:
      binary: ./split-5.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pthread -fsplit-stack"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_split-6_3307:
  build:
    cflags: ' -fsplit-stack'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/split-6.c'
    sources:
      binary: ./split-6.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fsplit-stack"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_split-7_3308:
  build:
    cflags: ' -fsplit-stack -O2 -mno-accumulate-outgoing-args'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/split-7.c'
    sources:
      binary: ./split-7.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fsplit-stack -O2"'
      - '"-fsplit-stack -O2 -mno-accumulate-outgoing-args" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sso-10_3310:
  build:
    cflags: ' -fsso-struct=native'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sso-10.c'
    sources:
      binary: ./sso-10.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fsso-struct=native"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sso-1_3309:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sso-1.c'
    sources:
      binary: sso-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(element is not constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sso-2_3311:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sso-2.c'
    sources:
      binary: sso-2.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be one of .big-endian. or .little-endian.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((incompatible types|no match)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(address of scalar with reverse storage order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(address of scalar with reverse storage order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(address of scalar with reverse storage order))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(address of array with reverse scalar storage order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(address of array with reverse scalar storage order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(address of array with reverse scalar storage order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(address of array with reverse scalar storage order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(address of array with reverse scalar storage order))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sso-3_3312:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sso-3.c'
    sources:
      binary: sso-3.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be one of .big-endian. or .little-endian.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((incompatible types|no match)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(address of scalar with reverse storage order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(address of scalar with reverse storage order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(address of scalar with reverse storage order))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(address of array with reverse scalar storage order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(address of array with reverse scalar storage order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(address of array with reverse scalar storage order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(address of array with reverse scalar storage order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(address of array with reverse scalar storage order))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sso-4_3313:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sso-4.c'
    sources:
      binary: sso-4.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be one of .big-endian. or .little-endian.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((incompatible types|no match)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((incompatible types|no match)))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sso-5_3314:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sso-5.c'
    sources:
      binary: sso-5.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((incompatible types|no match)))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sso-6_3315:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sso-6.c'
    sources:
      binary: ./sso-6.exe
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(missing .big-endian.little-endian.default.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(expected .big-endian.little-endian.default.))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sso-7_3316:
  build:
    cflags: ' -fsso-struct=big-endian'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sso-7.c'
    sources:
      binary: ./sso-7.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fsso-struct=big-endian"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sso-8_3317:
  build:
    cflags: ' -fsso-struct=little-endian'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sso-8.c'
    sources:
      binary: ./sso-8.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fsso-struct=little-endian"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sso-9_3318:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sso-9.c'
    sources:
      binary: sso-9.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(type|reverse storage order))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stack-layout-1_3319:
  build:
    cflags: -O2 -fno-strict-aliasing -fdump-rtl-expand -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stack-layout-1.c'
    sources:
      binary: stack-layout-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-strict-aliasing -fdump-rtl-expand"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stack-layout-2_3320:
  build:
    cflags: -O2 -fdump-rtl-expand -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stack-layout-2.c'
    sources:
      binary: stack-layout-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-expand"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stack-layout-dynamic-1_3321:
  build:
    cflags: -O0 -fomit-frame-pointer -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stack-layout-dynamic-1.c'
    sources:
      binary: stack-layout-dynamic-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0 -fomit-frame-pointer"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stack-usage-1_3322:
  build:
    cflags: ' -fstack-usage -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stack-usage-1.c'
    sources:
      binary: stack-usage-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstack-usage"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stack-usage-2_3323:
  build:
    cflags: ' -Wstack-usage=512 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stack-usage-2.c'
    sources:
      binary: stack-usage-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wstack-usage=512"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(stack usage is \[0-9\]* bytes))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(stack usage (might be)|(is) \[0-9\]* bytes))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(stack usage might be unbounded))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stdint-width-1_3324:
  build:
    cflags: ' -std=c11 -ffreestanding -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stdint-width-1.c'
    sources:
      binary: stdint-width-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -ffreestanding"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stmt-expr-1_3325:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stmt-expr-1.c'
    sources:
      binary: stmt-expr-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stmt-expr-2_3326:
  build:
    cflags: ' -std=gnu99 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stmt-expr-2.c'
    sources:
      binary: stmt-expr-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids braced-groups within expressions))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stmt-expr-3_3327:
  build:
    cflags: ' -std=gnu99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stmt-expr-3.c'
    sources:
      binary: stmt-expr-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids braced-groups within expressions))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stmt-expr-4_3328:
  build:
    cflags: ' -O2 -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stmt-expr-4.c'
    sources:
      binary: stmt-expr-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stmt-expr-label-1_3329:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stmt-expr-label-1.c'
    sources:
      binary: stmt-expr-label-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:140:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:158:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:161:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:170:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:171:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:174:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:185:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:186:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:187:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:195:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:197:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:199:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:201:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:202:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:203:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:204:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:211:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:212:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:214:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:215:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:216:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:218:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:220:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:225:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:226:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:229:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:230:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:239:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:240:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:241:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:242:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:243:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:244:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:245:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:246:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:247:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:248:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:257:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:258:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:267:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:268:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:269:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:270:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:271:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:272:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:273:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:274:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:275:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:276:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:281:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:282:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:285:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:286:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:295:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:296:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:297:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:298:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:299:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:300:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:301:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:302:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:303:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:304:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:309:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:310:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:323:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:324:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:325:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:326:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:327:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:328:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:329:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:330:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:331:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:332:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:337:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:338:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:341:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:342:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:351:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:352:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:353:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:354:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:355:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:356:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:357:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:358:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:359:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:360:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:363:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:364:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:365:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:366:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:367:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:368:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:369:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:370:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:371:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:372:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:379:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:380:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:381:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:382:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:383:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:384:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:385:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:386:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:387:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:388:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:391:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:392:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:393:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:394:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:395:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:396:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:397:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:398:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:399:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:400:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stmt-expr-label-2_3330:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stmt-expr-label-2.c'
    sources:
      binary: stmt-expr-label-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(switch jumps into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(switch jumps into statement expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stmt-expr-label-3_3331:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stmt-expr-label-3.c'
    sources:
      binary: stmt-expr-label-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_store-motion-fgcse-sm_3332:
  build:
    cflags: -O2 -ftree-pre -fno-tree-loop-im -fgcse-sm -fdump-rtl-store_motion -ffat-lto-objects
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/store-motion-fgcse-sm.c'
    sources:
      binary: ./store-motion-fgcse-sm.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-pre -fno-tree-loop-im -fgcse-sm -fdump-rtl-store_motion"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_store_merging_1_3333:
  build:
    cflags: ' -O2 -fdump-tree-store-merging -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/store_merging_1.c'
    sources:
      binary: store_merging_1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-store-merging"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_store_merging_2_3334:
  build:
    cflags: ' -O2 -fdump-tree-store-merging'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/store_merging_2.c'
    sources:
      binary: ./store_merging_2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-store-merging"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_store_merging_3_3335:
  build:
    cflags: ' -O2 -fdump-tree-store-merging-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/store_merging_3.c'
    sources:
      binary: store_merging_3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-store-merging-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_store_merging_4_3336:
  build:
    cflags: ' -O2 -fdump-tree-store-merging -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/store_merging_4.c'
    sources:
      binary: store_merging_4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-store-merging"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_store_merging_5_3337:
  build:
    cflags: ' -O2 -fdump-tree-store-merging -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/store_merging_5.c'
    sources:
      binary: store_merging_5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-store-merging"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_store_merging_6_3338:
  build:
    cflags: ' -O2 -fdump-tree-store-merging'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/store_merging_6.c'
    sources:
      binary: ./store_merging_6.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-store-merging"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_store_merging_7_3339:
  build:
    cflags: ' -O2 -fdump-tree-store-merging -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/store_merging_7.c'
    sources:
      binary: store_merging_7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-store-merging"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_store_merging_8_3340:
  build:
    cflags: ' -O2 -fdump-tree-store-merging -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/store_merging_8.c'
    sources:
      binary: store_merging_8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-store-merging"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strcmp-1_3341:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strcmp-1.c'
    sources:
      binary: ./strcmp-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strict-overflow-1_3342:
  build:
    cflags: ' -fstrict-overflow -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strict-overflow-1.c'
    sources:
      binary: strict-overflow-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strict-overflow-2_3343:
  build:
    cflags: ' -fstrict-overflow -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strict-overflow-2.c'
    sources:
      binary: strict-overflow-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strict-overflow-3_3344:
  build:
    cflags: ' -fstrict-overflow -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strict-overflow-3.c'
    sources:
      binary: strict-overflow-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strict-overflow-4_3345:
  build:
    cflags: ' -fstrict-overflow -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strict-overflow-4.c'
    sources:
      binary: strict-overflow-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strict-overflow-5_3346:
  build:
    cflags: ' -fstrict-overflow -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strict-overflow-5.c'
    sources:
      binary: strict-overflow-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strict-overflow-6_3347:
  build:
    cflags: ' -fstrict-overflow -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strict-overflow-6.c'
    sources:
      binary: strict-overflow-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_string-opt-1_3348:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/string-opt-1.c'
    sources:
      binary: string-opt-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-10_3350:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-10.c'
    sources:
      binary: ./strlenopt-10.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-11_3351:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-11.c'
    sources:
      binary: ./strlenopt-11.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-12_3352:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-12.c'
    sources:
      binary: ./strlenopt-12.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-12g_3353:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-12g.c'
    sources:
      binary: ./strlenopt-12g.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-13_3354:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-13.c'
    sources:
      binary: ./strlenopt-13.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-14g_3355:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-14g.c'
    sources:
      binary: ./strlenopt-14g.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-14gf_3356:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-14gf.c'
    sources:
      binary: ./strlenopt-14gf.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-15_3357:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-15.c'
    sources:
      binary: ./strlenopt-15.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-16g_3358:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-16g.c'
    sources:
      binary: ./strlenopt-16g.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-17g_3359:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-17g.c'
    sources:
      binary: ./strlenopt-17g.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-18g_3360:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-18g.c'
    sources:
      binary: ./strlenopt-18g.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-19_3361:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-19.c'
    sources:
      binary: ./strlenopt-19.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-1_3349:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-1.c'
    sources:
      binary: ./strlenopt-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-1f_3362:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-1f.c'
    sources:
      binary: ./strlenopt-1f.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-20_3364:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-20.c'
    sources:
      binary: ./strlenopt-20.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-21_3365:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-21.c'
    sources:
      binary: ./strlenopt-21.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-22_3366:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-22.c'
    sources:
      binary: ./strlenopt-22.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-22g_3367:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-22g.c'
    sources:
      binary: ./strlenopt-22g.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-23_3368:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-23.c'
    sources:
      binary: ./strlenopt-23.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-24_3369:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-24.c'
    sources:
      binary: ./strlenopt-24.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-25_3370:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-25.c'
    sources:
      binary: ./strlenopt-25.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-26_3371:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-26.c'
    sources:
      binary: ./strlenopt-26.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-27_3372:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-27.c'
    sources:
      binary: ./strlenopt-27.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-28_3373:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-28.c'
    sources:
      binary: ./strlenopt-28.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-29_3374:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-29.c'
    sources:
      binary: ./strlenopt-29.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-2_3363:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-2.c'
    sources:
      binary: ./strlenopt-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-2f_3375:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-2f.c'
    sources:
      binary: ./strlenopt-2f.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-30_3377:
  build:
    cflags: ' -O2 -fdump-tree-strlen -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-30.c'
    sources:
      binary: strlenopt-30.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-31_3378:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-31.c'
    sources:
      binary: ./strlenopt-31.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-31g_3379:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-31g.c'
    sources:
      binary: ./strlenopt-31g.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-3_3376:
  build:
    cflags: ' -O2 -fdump-tree-strlen -fdump-tree-optimized'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-3.c'
    sources:
      binary: ./strlenopt-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-4_3380:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-4.c'
    sources:
      binary: ./strlenopt-4.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-4g_3381:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-4g.c'
    sources:
      binary: ./strlenopt-4g.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-4gf_3382:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-4gf.c'
    sources:
      binary: ./strlenopt-4gf.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-5_3383:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-5.c'
    sources:
      binary: ./strlenopt-5.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-6_3384:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-6.c'
    sources:
      binary: ./strlenopt-6.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-7_3385:
  build:
    cflags: ' -O2 -fdump-tree-strlen -fdump-tree-optimized'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-7.c'
    sources:
      binary: ./strlenopt-7.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-8_3386:
  build:
    cflags: ' -O2 -fdump-tree-strlen'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-8.c'
    sources:
      binary: ./strlenopt-8.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-9_3387:
  build:
    cflags: ' -O2 -fno-code-hoisting -fdump-tree-strlen -fdump-tree-optimized'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-9.c'
    sources:
      binary: ./strlenopt-9.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-code-hoisting -fdump-tree-strlen -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strncmp-1_3388:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strncmp-1.c'
    sources:
      binary: ./strncmp-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strncmp-2_3389:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strncmp-2.c'
    sources:
      binary: ./strncmp-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strncpy-fix-1_3390:
  build:
    cflags: ' -O2 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strncpy-fix-1.c'
    sources:
      binary: strncpy-fix-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-alias-1_3391:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-alias-1.c'
    sources:
      binary: struct-alias-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-by-value-1_3392:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-by-value-1.c'
    sources:
      binary: ./struct-by-value-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-by-value-2_3393:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-by-value-2.c'
    sources:
      binary: struct-by-value-2.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-empty-1_3394:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-empty-1.c'
    sources:
      binary: struct-empty-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-empty-2_3395:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-empty-2.c'
    sources:
      binary: struct-empty-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(struct has no members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(union has no members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(struct has no named members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(union has no named members))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-empty-3_3396:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-empty-3.c'
    sources:
      binary: struct-empty-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(struct has no members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(union has no members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(struct has no named members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(union has no named members))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-in-proto-1_3397:
  build:
    cflags: ' -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-in-proto-1.c'
    sources:
      binary: struct-in-proto-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete type" "not here))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-incompl-1_3398:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-incompl-1.c'
    sources:
      binary: struct-incompl-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-parse-1_3399:
  build:
    cflags: ' -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-parse-1.c'
    sources:
      binary: struct-parse-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(field 'c' has incomplete type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-parse-2_3400:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-parse-2.c'
    sources:
      binary: struct-parse-2.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(has incomplete type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-ret-2_3401:
  build:
    cflags: ' -O3 -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-ret-2.c'
    sources:
      binary: struct-ret-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -w"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-ret-3_3402:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-ret-3.c'
    sources:
      binary: ./struct-ret-3.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-ret-libc_3403:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-ret-libc.c'
    sources:
      binary: ./struct-ret-libc.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-semi-1_3404:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-semi-1.c'
    sources:
      binary: struct-semi-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(no semicolon at end of struct or union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(no semicolon at end of struct or union))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-semi-2_3405:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-semi-2.c'
    sources:
      binary: struct-semi-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(extra semicolon in struct or union specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(struct has no members" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(extra semicolon in struct or union specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(extra semicolon in struct or union specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(no semicolon at end of struct or union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(no semicolon at end of struct or union))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-semi-3_3406:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-semi-3.c'
    sources:
      binary: struct-semi-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(extra semicolon in struct or union specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(struct has no members" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(extra semicolon in struct or union specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(extra semicolon in struct or union specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no semicolon at end of struct or union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no semicolon at end of struct or union))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-semi-4_3407:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-semi-4.c'
    sources:
      binary: struct-semi-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(no semicolon))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_superblock_3408:
  build:
    cflags: -O2 -fno-asynchronous-unwind-tables -fsched2-use-superblocks -fdump-rtl-sched2 -fdump-rtl-bbro -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/superblock.c'
    sources:
      binary: superblock.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-asynchronous-unwind-tables -fsched2-use-superblocks -fdump-rtl-sched2 -fdump-rtl-bbro"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-10_3410:
  build:
    cflags: ' -O2 -fdump-tree-cfg -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-10.c'
    sources:
      binary: switch-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-cfg"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-1_3409:
  build:
    cflags: ' -fpic -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-1.c'
    sources:
      binary: switch-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fpic -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-2_3411:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-2.c'
    sources:
      binary: switch-2.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse error|syntax error|expected))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-3_3412:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-3.c'
    sources:
      binary: switch-3.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not within a switch statement))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-4_3413:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-4.c'
    sources:
      binary: switch-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-5_3414:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-5.c'
    sources:
      binary: switch-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(switch quantity not an integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(switch quantity not an integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers are not permitted as case values))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(case label does not reduce to an integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(multiple default labels in one switch))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate case value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(case label not within a switch statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('default' label not within a switch statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(break statement not within loop or switch))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(continue statement not within a loop))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(case label does not reduce to an integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate \\(or overlapping\\) case value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate case value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate \\(or overlapping\\) case value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(continue statement not within a loop))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(empty range specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(empty range specified))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-6_3415:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-6.c'
    sources:
      binary: switch-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(range expressions in switch statements are non-standard))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-7_3416:
  build:
    cflags: ' -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-7.c'
    sources:
      binary: switch-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(range expressions in switch statements are non-standard))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-8_3417:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-8.c'
    sources:
      binary: switch-8.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-9_3418:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-9.c'
    sources:
      binary: switch-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(empty range))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-A_3419:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-A.c'
    sources:
      binary: switch-A.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression before))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-warn-1_3420:
  build:
    cflags: ' -O0'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-warn-1.c'
    sources:
      binary: ./switch-warn-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(case label value is less than minimum value for type|statement will never be executed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(case label value exceeds maximum value for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(lower value in case label range less than minimum value for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(upper value in case label range exceeds maximum value for type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-warn-2_3421:
  build:
    cflags: ' -O0'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-warn-2.c'
    sources:
      binary: ./switch-warn-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-warn-3_3422:
  build:
    cflags: ' -Wswitch-enum -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-warn-3.c'
    sources:
      binary: switch-warn-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wswitch-enum"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sync-1_3423:
  build:
    cflags: ' -Werror -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sync-1.c'
    sources:
      binary: sync-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Werror"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sync-2_3424:
  build:
    cflags: ' -march=i486'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sync-2.c'
    sources:
      binary: ./sync-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
      - '"-march=i486" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
      - '"-mcpu=v9" { target sparc*-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sync-3_3425:
  build:
    cflags: ' -march=i486'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sync-3.c'
    sources:
      binary: ./sync-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
      - '"-march=i486" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
      - '"-mcpu=v9" { target sparc*-*-* }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sync-fetch-bool_3426:
  build:
    cflags: ' -pedantic-errors -std=c11 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sync-fetch-bool.c'
    sources:
      binary: sync-fetch-bool.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors -std=c11"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__sync_fetch_and_add.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__sync_fetch_and_sub.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__sync_fetch_and_and.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__sync_fetch_and_xor.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__sync_fetch_and_or.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__sync_fetch_and_nand.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__sync_add_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__sync_sub_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__sync_and_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__sync_xor_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__sync_or_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__sync_nand_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__sync_fetch_and_add.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__sync_fetch_and_sub.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__sync_fetch_and_and.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__sync_fetch_and_xor.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__sync_fetch_and_or.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__sync_fetch_and_nand.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__sync_add_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__sync_sub_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__sync_and_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__sync_xor_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__sync_or_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__sync_nand_and_fetch.))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sync-fetch_3427:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sync-fetch.c'
    sources:
      binary: sync-fetch.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.b. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.b. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.b. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.b. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.b. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.b. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.a. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.a. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.a. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.a. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.a. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.a. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.m. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.m. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.m. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.m. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.m. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.m. undeclared))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_system-binary-constants-1_3428:
  build:
    cflags: ' -std=iso9899:1999 -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/system-binary-constants-1.c'
    sources:
      binary: system-binary-constants-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(binary constants are a GCC extension))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_tail-merge-store_3429:
  build:
    cflags: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/tail-merge-store.c'
    sources:
      binary: tail-merge-store.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_titype-1_3430:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/titype-1.c'
    sources:
      binary: ./titype-1.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_trampoline-1_3431:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/trampoline-1.c'
    sources:
      binary: ./trampoline-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_transparent-union-1_3432:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/transparent-union-1.c'
    sources:
      binary: transparent-union-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'f0' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'f1' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'f2' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'f3' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'f4' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'f5' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'f6' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'f7' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'f8' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'f9' from incompatible pointer type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_transparent-union-2_3433:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/transparent-union-2.c'
    sources:
      binary: transparent-union-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_transparent-union-3_3434:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/transparent-union-3.c'
    sources:
      binary: transparent-union-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(declaration does not declare anything" "not anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(union cannot be made transparent" "cannot))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(declaration does not declare anything" "not anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(union cannot be made transparent" "cannot))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(declaration does not declare anything" "not anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(union cannot be made transparent" "cannot))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(declaration does not declare anything" "no anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(union cannot be made transparent" "cannot))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(union cannot be made transparent" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(union cannot be made transparent" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_transparent-union-4_3435:
  build:
    cflags: ' -pedantic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/transparent-union-4.c'
    sources:
      binary: transparent-union-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C prohibits argument conversion to union type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_transparent-union-5_3436:
  build:
    cflags: ' -O'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/transparent-union-5.c'
    sources:
      binary: ./transparent-union-5.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_trunc-1_3437:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/trunc-1.c'
    sources:
      binary: trunc-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_two-types-10_3439:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/two-types-10.c'
    sources:
      binary: two-types-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redeclared))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_two-types-1_3438:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/two-types-1.c'
    sources:
      binary: two-types-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_two-types-2_3440:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/two-types-2.c'
    sources:
      binary: two-types-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more " "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_two-types-3_3441:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/two-types-3.c'
    sources:
      binary: two-types-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected ';', identifier or " "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_two-types-4_3442:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/two-types-4.c'
    sources:
      binary: two-types-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected ';', identifier or " "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_two-types-5_3443:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/two-types-5.c'
    sources:
      binary: two-types-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected ';', identifier or " "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected ';', identifier or " "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_two-types-6_3444:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/two-types-6.c'
    sources:
      binary: two-types-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected ';', identifier or " "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_two-types-7_3445:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/two-types-7.c'
    sources:
      binary: two-types-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected ';', identifier or " "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected identifier " "))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(no semicolon" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_two-types-8_3446:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/two-types-8.c'
    sources:
      binary: two-types-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected ';', identifier or " "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_two-types-9_3447:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/two-types-9.c'
    sources:
      binary: two-types-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected ';', identifier or " "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_typedef-init_3448:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/typedef-init.c'
    sources:
      binary: typedef-init.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialized" "A))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialized" "B))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_typedef-redecl2_3450:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/typedef-redecl2.c'
    sources:
      binary: typedef-redecl2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_typedef-redecl_3449:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/typedef-redecl.c'
    sources:
      binary: typedef-redecl.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_typename-vla-1_3451:
  build:
    cflags: ' -O2 -Wuninitialized'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/typename-vla-1.c'
    sources:
      binary: ./typename-vla-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_typeof-1_3452:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/typeof-1.c'
    sources:
      binary: typeof-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_typeof-2_3453:
  build:
    cflags: ' -std=c11 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/typeof-2.c'
    sources:
      binary: typeof-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c11"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_typespec-1_3454:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/typespec-1.c'
    sources:
      binary: typespec-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:126:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:131:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:133:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:134:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:135:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:136:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:140:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:150:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:152:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:153:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:154:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:158:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:160:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:161:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:170:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:174:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:177:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:178:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:179:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:180:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:182:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:185:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:186:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:187:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:194:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:197:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:199:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:201:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:203:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:204:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:207:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:209:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:211:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:214:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:215:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:216:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:218:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:221:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:223:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:224:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:225:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:226:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:227:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:228:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:229:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:230:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:231:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:233:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:234:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:237:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:238:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:239:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:240:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:242:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:243:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:244:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:247:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:248:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:249:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:250:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:251:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:252:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:253:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:254:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:255:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:256:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:257:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:258:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:259:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:260:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:263:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:264:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:265:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:266:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:267:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:268:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:269:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:270:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:273:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:274:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:275:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:276:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:277:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:278:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:279:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:280:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:281:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:282:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:283:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:284:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:285:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:286:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:287:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:288:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:289:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:290:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:291:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:292:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:293:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:294:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:295:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:296:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:297:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:298:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:299:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:300:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:302:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:303:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:304:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:305:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:306:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:307:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:308:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:309:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:311:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:313:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:314:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:315:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:316:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:317:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:318:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:319:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:320:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:323:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:324:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:325:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:326:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:327:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:328:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:329:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:330:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:331:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:332:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:333:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:334:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:335:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:336:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:337:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:338:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:339:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:340:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:342:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:343:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:344:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:345:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:346:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:347:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:348:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:349:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:351:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:353:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:354:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:355:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:356:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:357:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:358:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:359:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:360:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:363:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:364:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:365:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:366:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:367:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:368:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:369:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:370:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:371:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:372:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:373:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:374:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:375:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:376:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:377:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:378:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:379:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:380:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:381:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:382:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:383:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:384:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:385:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:386:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:387:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:388:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:389:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:390:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:391:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:392:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:393:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:394:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:395:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:396:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:397:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:398:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:399:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:400:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:401:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:402:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:403:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:404:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:405:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:406:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:407:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:408:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:409:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:410:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:411:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:412:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:413:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:414:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:415:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:416:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:417:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:418:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:419:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:420:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:421:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:422:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:423:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:424:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:425:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:426:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:427:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:428:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:429:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:430:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:431:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:432:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:433:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:434:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:437:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:438:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:439:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:440:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:441:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:443:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:444:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:445:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:446:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:447:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:448:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:449:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:450:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:451:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:453:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:454:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:455:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:456:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:457:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:458:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:459:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:460:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:461:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:462:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:463:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:464:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:465:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:466:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:467:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:468:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:469:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:470:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:471:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:473:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:474:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:475:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:476:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:477:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:478:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:479:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:480:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:481:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:482:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:483:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:484:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:485:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:486:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:487:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:488:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:489:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:490:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:491:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:493:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:494:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:495:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:496:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:497:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:498:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:499:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:500:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:501:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:502:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:503:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:504:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:507:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:508:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:509:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:510:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:511:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:513:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:514:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:515:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:516:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:517:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:518:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:519:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:520:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:521:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:523:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:524:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:525:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:526:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:527:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:528:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:529:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:530:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:531:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:532:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:533:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:534:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:537:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:538:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:539:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:540:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:542:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:543:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:544:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:545:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:546:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:547:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:548:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:549:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:550:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:552:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:553:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:554:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:555:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:556:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:557:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:558:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:559:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:560:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:561:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:563:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:564:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:565:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:566:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:567:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:568:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:569:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:570:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:572:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:573:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:574:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:575:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:576:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:577:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:578:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:579:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:580:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:581:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:583:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:584:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:585:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:586:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:587:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:588:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:589:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:590:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:592:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:593:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:594:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:595:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:596:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:597:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:598:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:599:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:600:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:601:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:602:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:603:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:604:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:605:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:606:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:607:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:608:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:609:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:610:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:611:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:612:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:613:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:614:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:615:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:616:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:617:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:618:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:619:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:620:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:621:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:623:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:624:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:625:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:626:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:627:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:628:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:629:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:630:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:631:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:633:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:634:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:635:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:636:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:637:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:638:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:639:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:640:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:642:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:643:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:644:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:645:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:646:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:647:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:648:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:649:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:650:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:651:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:652:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:653:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:654:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:655:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:656:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:657:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:658:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:659:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:660:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:661:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:662:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:663:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:664:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:665:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:666:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:667:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:668:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:669:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:670:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:671:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:673:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:674:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:675:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:676:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:677:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:678:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:679:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:680:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:681:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:683:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:684:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:685:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:686:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:687:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:688:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:689:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:690:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:692:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:693:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:694:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:695:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:696:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:697:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:698:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:699:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:700:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:701:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:702:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:703:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:704:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:705:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:706:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:707:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:708:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:709:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:710:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:711:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:712:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:713:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:714:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:715:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:716:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:717:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:718:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:719:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:720:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:721:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:722:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:723:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:724:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:725:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:726:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:727:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:728:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:729:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:730:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:731:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:732:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:733:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:734:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:735:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:736:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:737:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:738:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:739:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:740:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:741:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:742:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:743:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:744:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:745:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:746:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:747:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:748:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:749:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:750:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:751:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:752:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:753:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:754:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:755:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:756:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:757:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:758:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:759:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:760:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:761:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:762:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:763:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:764:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:765:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:766:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:767:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:768:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:769:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:770:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:771:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:772:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:773:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:774:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:775:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:776:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:777:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:778:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:779:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:780:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:781:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:782:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:783:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:784:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:785:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:786:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:787:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:788:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:789:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:790:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:791:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:792:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:793:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:794:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:795:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:796:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:797:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:798:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:799:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:800:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:801:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:802:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:803:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:804:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:805:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:806:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:807:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:808:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:809:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:810:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:811:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:812:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:813:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:814:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:815:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:816:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:817:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:818:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:819:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:820:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:821:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:822:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:823:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:824:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:825:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:826:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:827:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:828:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:829:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:830:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:831:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:832:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:833:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:834:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:835:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:836:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:837:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:838:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:839:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:840:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:841:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:842:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:843:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:844:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:845:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:846:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:847:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:848:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:849:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:850:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:851:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:852:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:853:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:854:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:855:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:856:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:857:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:858:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:859:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:860:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:861:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:862:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:863:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:864:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:865:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:866:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:867:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:868:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:869:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:870:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:871:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:872:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:873:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:874:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:875:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:876:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:877:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:878:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:879:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:880:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:881:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:882:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:883:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:884:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:885:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:886:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:887:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:888:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:889:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:890:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:891:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:892:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:893:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:894:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:895:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:896:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:897:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:898:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:899:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:900:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:901:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:902:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:903:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:904:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:905:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:906:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:907:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:908:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:909:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:910:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:911:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:912:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:913:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:914:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:915:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:916:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:917:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:918:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:919:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:920:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:921:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:922:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:923:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:924:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:925:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:926:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:927:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:928:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:929:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:930:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:931:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:932:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:933:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:934:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:935:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:936:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:937:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int _Bool))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-10_3456:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-10.c'
    sources:
      binary: ucnid-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(pop, \\\\U000000f3.*push, \\\\U000000f3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(unknown action '\\\\U000000e7'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-11_3457:
  build:
    cflags: ' -std=c99 -fdata-sections -g'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-11.c'
    sources:
      binary: ./ucnid-11.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -fdata-sections -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-12_3458:
  build:
    cflags: ' -std=c99 -ffunction-sections -g'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-12.c'
    sources:
      binary: ./ucnid-12.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -ffunction-sections -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-13_3459:
  build:
    cflags: ' -std=gnu99 -Wpacked -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-13.c'
    sources:
      binary: ucnid-13.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wpacked"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undefined named operand '\\\\U000000c3'))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*('\\\\U000000c0' attribute directive ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*('\\\\U000000c1' is deprecated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*('\\\\U000000c2'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-14_3460:
  build:
    cflags: ' -std=c99 -g'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-14.c'
    sources:
      binary: ./ucnid-14.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-1_3455:
  build:
    cflags: ' -std=c99 -g'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-1.c'
    sources:
      binary: ./ucnid-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-2_3461:
  build:
    cflags: ' -std=c99 -g'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-2.c'
    sources:
      binary: ./ucnid-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-3_3462:
  build:
    cflags: ' -std=c99 -g'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-3.c'
    sources:
      binary: ./ucnid-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-4_3463:
  build:
    cflags: ' -std=c99 -g'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-4.c'
    sources:
      binary: ./ucnid-4.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-5_3464:
  build:
    cflags: ' -std=c99 -fdollars-in-identifiers -g'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-5.c'
    sources:
      binary: ./ucnid-5.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -fdollars-in-identifiers -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-6_3465:
  build:
    cflags: ' -std=c99 -save-temps -g'
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/gcc.dg
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-6.c'
    sources:
      binary: ./ucnid-6.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -save-temps -g"'
  run:
    cwd: /home/adamj/mnt/projects/pcvs/compilers/gcc/gcc.dg
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-7_3466:
  build:
    cflags: ' -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-7.c'
    sources:
      binary: ucnid-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('\\\\U000000e9' undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('\\\\U00001e00' undeclared))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-8_3467:
  build:
    cflags: ' -std=gnu99 -Wvla -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-8.c'
    sources:
      binary: ucnid-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wvla"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown machine mode '\\\\U000000e9'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(zero width for bit-field '\\\\U000000e9'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for parameter '\\\\U000000e9'))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(variable length array '\\\\U000000e9'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(braces around scalar initializer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unaligned-1_3468:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unaligned-1.c'
    sources:
      binary: ./unaligned-1.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-1-O0_3469:
  build:
    cflags: ' -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-1-O0.c'
    sources:
      binary: uninit-1-O0.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-10-O0_3471:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-10-O0.c'
    sources:
      binary: uninit-10-O0.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-10_3472:
  build:
    cflags: ' -O2 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-10.c'
    sources:
      binary: uninit-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-11-O0_3473:
  build:
    cflags: ' -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-11-O0.c'
    sources:
      binary: uninit-11-O0.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(is used" "unconditional))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(may be used" "conditional))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-11_3474:
  build:
    cflags: ' -O -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-11.c'
    sources:
      binary: uninit-11.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(is used" "unconditional))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(may be used" "conditional))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-12-O0_3475:
  build:
    cflags: ' -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-12-O0.c'
    sources:
      binary: uninit-12-O0.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-12_3476:
  build:
    cflags: ' -O -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-12.c'
    sources:
      binary: uninit-12.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-13-O0_3477:
  build:
    cflags: ' -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-13-O0.c'
    sources:
      binary: uninit-13-O0.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(is used" "unconditional))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-13_3478:
  build:
    cflags: ' -O -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-13.c'
    sources:
      binary: uninit-13.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(is used" "unconditional))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-14-O0_3479:
  build:
    cflags: ' -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-14-O0.c'
    sources:
      binary: uninit-14-O0.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-14_3480:
  build:
    cflags: ' -O -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-14.c'
    sources:
      binary: uninit-14.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-15-O0_3481:
  build:
    cflags: ' -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-15-O0.c'
    sources:
      binary: uninit-15-O0.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(is used uninitialized))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-15_3482:
  build:
    cflags: ' -O1 -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-15.c'
    sources:
      binary: uninit-15.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(used uninitialized in this function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*('j' is used uninitialized" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-16_3483:
  build:
    cflags: ' -O2 -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-16.c'
    sources:
      binary: uninit-16.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(may be used uninitialized))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-17-O0_3484:
  build:
    cflags: ' -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-17-O0.c'
    sources:
      binary: uninit-17-O0.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-17_3485:
  build:
    cflags: ' -O -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-17.c'
    sources:
      binary: uninit-17.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(may be used" "unconditional))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-18_3486:
  build:
    cflags: ' -O -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-18.c'
    sources:
      binary: uninit-18.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-19_3487:
  build:
    cflags: ' -O -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-19.c'
    sources:
      binary: uninit-19.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(may be used uninitialized" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(may be used uninitialized" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-1_3470:
  build:
    cflags: ' -O -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-1.c'
    sources:
      binary: uninit-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-2-O0_3488:
  build:
    cflags: ' -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-2-O0.c'
    sources:
      binary: uninit-2-O0.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-20_3490:
  build:
    cflags: ' -O2 -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-20.c'
    sources:
      binary: uninit-20.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-21_3491:
  build:
    cflags: ' -O2 -fno-short-enums -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-21.c'
    sources:
      binary: uninit-21.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-short-enums -Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-22_3492:
  build:
    cflags: ' -O3 -Wuninitialized --param vect-max-version-for-alias-checks=20 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-22.c'
    sources:
      binary: uninit-22.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Wuninitialized --param vect-max-version-for-alias-checks=20"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-23_3493:
  build:
    cflags: ' -O2 -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-23.c'
    sources:
      binary: uninit-23.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(may be used uninitialized))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-24_3494:
  build:
    cflags: ' -O -Wmaybe-uninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-24.c'
    sources:
      binary: uninit-24.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wmaybe-uninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-2_3489:
  build:
    cflags: ' -O -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-2.c'
    sources:
      binary: uninit-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-3-O0_3495:
  build:
    cflags: ' -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-3-O0.c'
    sources:
      binary: uninit-3-O0.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-3_3496:
  build:
    cflags: ' -O -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-3.c'
    sources:
      binary: uninit-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-4-O0_3497:
  build:
    cflags: ' -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-4-O0.c'
    sources:
      binary: uninit-4-O0.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-4_3498:
  build:
    cflags: ' -O -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-4.c'
    sources:
      binary: uninit-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-5-O0_3499:
  build:
    cflags: ' -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-5-O0.c'
    sources:
      binary: uninit-5-O0.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-5_3500:
  build:
    cflags: ' -O -Wuninitialized -fno-tree-dce -fno-tree-vrp -fno-tree-dominator-opts -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-5.c'
    sources:
      binary: uninit-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized -fno-tree-dce -fno-tree-vrp -fno-tree-dominator-opts"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-6-O0_3501:
  build:
    cflags: ' -Wuninitialized -ftrack-macro-expansion=2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-6-O0.c'
    sources:
      binary: uninit-6-O0.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -ftrack-macro-expansion=2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-6_3502:
  build:
    cflags: ' -O -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-6.c'
    sources:
      binary: uninit-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-8-O0_3503:
  build:
    cflags: ' -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-8-O0.c'
    sources:
      binary: uninit-8-O0.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-8_3504:
  build:
    cflags: ' -O -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-8.c'
    sources:
      binary: uninit-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-9-O0_3505:
  build:
    cflags: ' -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-9-O0.c'
    sources:
      binary: uninit-9-O0.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-9_3506:
  build:
    cflags: ' -O -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-9.c'
    sources:
      binary: uninit-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-A-O0_3507:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-A-O0.c'
    sources:
      binary: uninit-A-O0.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-A_3508:
  build:
    cflags: ' -O2 -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-A.c'
    sources:
      binary: uninit-A.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-B-2_3509:
  build:
    cflags: ' -O2 -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-B-2.c'
    sources:
      binary: uninit-B-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-B-O0-2_3510:
  build:
    cflags: ' -O0 -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-B-O0-2.c'
    sources:
      binary: uninit-B-O0-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0 -Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-B-O0_3511:
  build:
    cflags: ' -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-B-O0.c'
    sources:
      binary: uninit-B-O0.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*('i' is used uninitialized in this function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-B_3512:
  build:
    cflags: ' -O2 -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-B.c'
    sources:
      binary: uninit-B.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(is used uninitialized" "uninit i warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-C-O0_3513:
  build:
    cflags: ' -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-C-O0.c'
    sources:
      binary: uninit-C-O0.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-C_3514:
  build:
    cflags: ' -O -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-C.c'
    sources:
      binary: uninit-C.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-H-O0_3515:
  build:
    cflags: ' -Wall -Werror -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-H-O0.c'
    sources:
      binary: uninit-H-O0.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Werror"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-H_3516:
  build:
    cflags: ' -O -Wall -Werror -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-H.c'
    sources:
      binary: uninit-H.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wall -Werror"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-I-O0_3517:
  build:
    cflags: ' -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-I-O0.c'
    sources:
      binary: uninit-I-O0.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*('setbuf\.mode' is used uninitialized in this function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-I_3518:
  build:
    cflags: ' -O2 -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-I.c'
    sources:
      binary: uninit-I.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*('setbuf\.mode' is used" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pr19430-2_3519:
  build:
    cflags: ' -O -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pr19430-2.c'
    sources:
      binary: uninit-pr19430-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(i. may be used uninitialized))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pr19430-O0_3520:
  build:
    cflags: ' -O0 -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pr19430-O0.c'
    sources:
      binary: uninit-pr19430-O0.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0 -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*('j' may be used uninitialized in this function" "uninitialized))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*('rc' is used uninitialized in this function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*('i' is used uninitialized in this function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*('x' is used uninitialized in this function))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pr19430_3521:
  build:
    cflags: ' -O -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pr19430.c'
    sources:
      binary: uninit-pr19430.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*('j' may be used uninitialized in this function" "uninitialized))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*('rc' is used uninitialized in this function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*('i' is used uninitialized in this function" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*('x' is used uninitialized in this function" "uninitialized))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pr20644-O0_3522:
  build:
    cflags: ' -O0 -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pr20644-O0.c'
    sources:
      binary: uninit-pr20644-O0.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0 -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "uninitialized))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pr20644_3523:
  build:
    cflags: ' -O -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pr20644.c'
    sources:
      binary: uninit-pr20644.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "uninitialized))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pr40943_3524:
  build:
    cflags: ' -O2 -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pr40943.c'
    sources:
      binary: uninit-pr40943.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(is used uninitialized))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pr61409_3525:
  build:
    cflags: ' -O2 -Wuninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pr61409.c'
    sources:
      binary: uninit-pr61409.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pr65686_3526:
  build:
    cflags: ' -O2 -Wall -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pr65686.c'
    sources:
      binary: uninit-pr65686.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pr78295_3527:
  build:
    cflags: ' -O2 -Wall -Wno-psabi -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pr78295.c'
    sources:
      binary: uninit-pr78295.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall -Wno-psabi"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pr78548_3528:
  build:
    cflags: ' -Wall -w -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pr78548.c'
    sources:
      binary: uninit-pr78548.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -w -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pr81782_3529:
  build:
    cflags: ' -Wmaybe-uninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pr81782.c'
    sources:
      binary: uninit-pr81782.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wmaybe-uninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-2_a_3530:
  build:
    cflags: ' -Wuninitialized -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-2_a.c'
    sources:
      binary: uninit-pred-2_a.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-2_b_3531:
  build:
    cflags: ' -Wuninitialized -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-2_b.c'
    sources:
      binary: uninit-pred-2_b.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "real uninitialized var warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-2_c_3532:
  build:
    cflags: ' -Wuninitialized -O2 -fno-tree-tail-merge -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-2_c.c'
    sources:
      binary: uninit-pred-2_c.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2 -fno-tree-tail-merge"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "real uninitialized var warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-3_a_3533:
  build:
    cflags: ' -Wuninitialized -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-3_a.c'
    sources:
      binary: uninit-pred-3_a.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-3_b_3534:
  build:
    cflags: ' -Wuninitialized -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-3_b.c'
    sources:
      binary: uninit-pred-3_b.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "real warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-3_c_3535:
  build:
    cflags: ' -Wuninitialized -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-3_c.c'
    sources:
      binary: uninit-pred-3_c.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-3_d_3536:
  build:
    cflags: ' -Wuninitialized -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-3_d.c'
    sources:
      binary: uninit-pred-3_d.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-3_e_3537:
  build:
    cflags: ' -Wuninitialized -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-3_e.c'
    sources:
      binary: uninit-pred-3_e.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "real warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-4_a_3538:
  build:
    cflags: ' -Wuninitialized -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-4_a.c'
    sources:
      binary: uninit-pred-4_a.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-4_b_3539:
  build:
    cflags: ' -Wuninitialized -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-4_b.c'
    sources:
      binary: uninit-pred-4_b.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "real warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-5_a_3540:
  build:
    cflags: ' -Wuninitialized -Wno-attributes -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-5_a.c'
    sources:
      binary: uninit-pred-5_a.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -Wno-attributes -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-5_b_3541:
  build:
    cflags: ' -Wuninitialized -Wno-attributes -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-5_b.c'
    sources:
      binary: uninit-pred-5_b.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -Wno-attributes -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "real warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-6_a_3542:
  build:
    cflags: ' -Wuninitialized -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-6_a.c'
    sources:
      binary: uninit-pred-6_a.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-6_b_3543:
  build:
    cflags: ' -Wuninitialized -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-6_b.c'
    sources:
      binary: uninit-pred-6_b.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-6_c_3544:
  build:
    cflags: ' -Wuninitialized -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-6_c.c'
    sources:
      binary: uninit-pred-6_c.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-6_d_3545:
  build:
    cflags: ' -Wuninitialized -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-6_d.c'
    sources:
      binary: uninit-pred-6_d.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-6_e_3546:
  build:
    cflags: ' -Wuninitialized -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-6_e.c'
    sources:
      binary: uninit-pred-6_e.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-7_a_3547:
  build:
    cflags: ' -Wuninitialized -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-7_a.c'
    sources:
      binary: uninit-pred-7_a.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-7_b_3548:
  build:
    cflags: ' -Wuninitialized -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-7_b.c'
    sources:
      binary: uninit-pred-7_b.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-7_c_3549:
  build:
    cflags: ' -Wuninitialized -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-7_c.c'
    sources:
      binary: uninit-pred-7_c.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-7_d_3550:
  build:
    cflags: ' -Wuninitialized -O2 -mbranch-cost=0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-7_d.c'
    sources:
      binary: uninit-pred-7_d.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2 -mbranch-cost=0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-8_a_3551:
  build:
    cflags: ' -Wuninitialized -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-8_a.c'
    sources:
      binary: uninit-pred-8_a.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-8_b_3552:
  build:
    cflags: ' -Wuninitialized -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-8_b.c'
    sources:
      binary: uninit-pred-8_b.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-8_c_3553:
  build:
    cflags: ' -Wuninitialized -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-8_c.c'
    sources:
      binary: uninit-pred-8_c.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-8_d_3554:
  build:
    cflags: ' -Wuninitialized -O2 -mbranch-cost=0 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-8_d.c'
    sources:
      binary: uninit-pred-8_d.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2 -mbranch-cost=0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-9_a_3555:
  build:
    cflags: ' -Wuninitialized -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-9_a.c'
    sources:
      binary: uninit-pred-9_a.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-9_b_3556:
  build:
    cflags: ' -Wuninitialized -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-9_b.c'
    sources:
      binary: uninit-pred-9_b.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "real warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-suppress_2_3558:
  build:
    cflags: ' -fno-tree-ccp -fno-tree-vrp -O2 -Wuninitialized -Werror=uninitialized -Wno-error=maybe-uninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-suppress_2.c'
    sources:
      binary: uninit-suppress_2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-tree-ccp -fno-tree-vrp -O2 -Wuninitialized -Werror=uninitialized -Wno-error=maybe-uninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "should not be promoted to error))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-suppress_3557:
  build:
    cflags: ' -fno-tree-ccp -fno-tree-vrp -O2 -Wuninitialized -Wno-maybe-uninitialized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-suppress.c'
    sources:
      binary: uninit-suppress.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-tree-ccp -fno-tree-vrp -O2 -Wuninitialized -Wno-maybe-uninitialized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_union-1_3559:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/union-1.c'
    sources:
      binary: union-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_union-2_3560:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/union-2.c'
    sources:
      binary: ./union-2.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_union-3_3561:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/union-3.c'
    sources:
      binary: union-3.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array of voids))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_union-4_3562:
  build:
    cflags: -O -fdump-rtl-cse1 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/union-4.c'
    sources:
      binary: union-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-rtl-cse1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_union-5_3563:
  build:
    cflags: ' -O -fgcse -fno-split-wide-types'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/union-5.c'
    sources:
      binary: ./union-5.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fgcse -fno-split-wide-types"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_union-cast-1_3564:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/union-cast-1.c'
    sources:
      binary: union-cast-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_union-cast-2_3565:
  build:
    cflags: ' -std=c89 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/union-cast-2.c'
    sources:
      binary: union-cast-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((forbids subscripting)|(forbids casts to union type)))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_union-cast-3_3566:
  build:
    cflags: ' -std=c99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/union-cast-3.c'
    sources:
      binary: union-cast-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(forbids casts to union type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_union-cast-4_3567:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/union-cast-4.c'
    sources:
      binary: union-cast-4.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array of voids))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(type not present))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unordered-1_3568:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unordered-1.c'
    sources:
      binary: unordered-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unordered-2_3569:
  build:
    cflags: '  -ansi -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unordered-2.c'
    sources:
      binary: unordered-2.exe
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unordered-3_3570:
  build:
    cflags: ' -fno-finite-math-only'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unordered-3.c'
    sources:
      binary: unordered-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-finite-math-only"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unroll-1_3571:
  build:
    cflags: ' -mtune=k6 -O2 -funroll-loops'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unroll-1.c'
    sources:
      binary: ./unroll-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-loops"'
      - '"-mtune=k6 -O2 -funroll-loops" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unroll-2_3572:
  build:
    cflags: ' -O2 -fdump-tree-cunrolli-details=stderr -fno-peel-loops -fno-tree-vrp  -fdisable-tree-cunroll -fenable-tree-cunrolli -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unroll-2.c'
    sources:
      binary: unroll-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-cunrolli-details=stderr -fno-peel-loops -fno-tree-vrp  -fdisable-tree-cunroll -fenable-tree-cunrolli"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unroll-3_3573:
  build:
    cflags: ' -O2 -fdump-tree-cunrolli-details -fno-peel-loops -fno-tree-vrp -fdisable-tree-cunrolli=foo -fenable-tree-cunrolli=foo -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unroll-3.c'
    sources:
      binary: unroll-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-cunrolli-details -fno-peel-loops -fno-tree-vrp -fdisable-tree-cunrolli=foo -fenable-tree-cunrolli=foo"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unroll-4_3574:
  build:
    cflags: ' -O2 -fdump-tree-cunrolli-details -fno-peel-loops -fno-tree-vrp -fdisable-tree-cunroll -fenable-tree-cunrolli=foo -fdisable-tree-cunrolli=foo2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unroll-4.c'
    sources:
      binary: unroll-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-cunrolli-details -fno-peel-loops -fno-tree-vrp -fdisable-tree-cunroll -fenable-tree-cunrolli=foo -fdisable-tree-cunrolli=foo2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unroll-5_3575:
  build:
    cflags: ' -O2 -fdump-tree-cunrolli-details -fno-peel-loops -fno-tree-vrp -fdisable-tree-cunroll -fenable-tree-cunrolli=foo2 -fdisable-tree-cunrolli=foo -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unroll-5.c'
    sources:
      binary: unroll-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-cunrolli-details -fno-peel-loops -fno-tree-vrp -fdisable-tree-cunroll -fenable-tree-cunrolli=foo2 -fdisable-tree-cunrolli=foo"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unroll-6_3576:
  build:
    cflags: -O3 -fdump-rtl-loop2_unroll -funroll-loops -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unroll-6.c'
    sources:
      binary: unroll-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-rtl-loop2_unroll -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unroll-7_3577:
  build:
    cflags: -O2 -fdump-rtl-loop2_unroll -funroll-loops -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unroll-7.c'
    sources:
      binary: unroll-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-loop2_unroll -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unroll-8_3578:
  build:
    cflags: -O2 -fdump-rtl-loop2_unroll -funroll-loops -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unroll-8.c'
    sources:
      binary: unroll-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-loop2_unroll -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unsigned-long-compare_3579:
  build:
    cflags: ' '
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unsigned-long-compare.c'
    sources:
      binary: ./unsigned-long-compare.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-1_3580:
  build:
    cflags: ' -O -Wall -W -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-1.c'
    sources:
      binary: unused-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -Wall -W"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(unused parameter" "unused parameter warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-2_3581:
  build:
    cflags: ' -O2 -finline-functions -Wunused -Wreturn-type -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-2.c'
    sources:
      binary: unused-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -finline-functions -Wunused -Wreturn-type"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(defined but not used" "unused label warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-3_3582:
  build:
    cflags: ' -Wunused -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-3.c'
    sources:
      binary: unused-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wunused"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(unused variable" "unused variable warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-4_3583:
  build:
    cflags: ' -Wunused -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-4.c'
    sources:
      binary: unused-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wunused -O3"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(defined but not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(defined but not used))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-5_3584:
  build:
    cflags: -Wunused -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-5.c'
    sources:
      binary: unused-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wunused"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-6-WallWextra_3585:
  build:
    cflags: ' -O3 -Wextra -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-6-WallWextra.c'
    sources:
      binary: unused-6-WallWextra.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Wextra -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(unused parameter" "unused parameter warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-6-no_3586:
  build:
    cflags: ' -O3 -Wextra -Wno-unused-parameter -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-6-no.c'
    sources:
      binary: unused-6-no.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Wextra -Wno-unused-parameter -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-6_3587:
  build:
    cflags: ' -O3 -Wunused-parameter -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-6.c'
    sources:
      binary: unused-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Wunused-parameter"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(unused parameter" "unused parameter warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-7_3588:
  build:
    cflags: ' -Wunused -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-7.c'
    sources:
      binary: unused-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wunused"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(defined but not used))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-8a_3589:
  build:
    cflags: ' -Wall -Wextra -Wno-unused -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-8a.c'
    sources:
      binary: unused-8a.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wextra -Wno-unused"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-8b_3590:
  build:
    cflags: ' -Wall -Wno-unused -Wextra -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-8b.c'
    sources:
      binary: unused-8b.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wno-unused -Wextra"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-variable-1_3591:
  build:
    cflags: ' -Wunused-variable -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-variable-1.c'
    sources:
      binary: unused-variable-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wunused-variable"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(defined but not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(defined but not used))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-variable-2_3592:
  build:
    cflags: ' -Wunused-variable -Wno-unused-const-variable -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-variable-2.c'
    sources:
      binary: unused-variable-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wunused-variable -Wno-unused-const-variable"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(defined but not used))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-variable-3_3593:
  build:
    cflags: ' -Wunused-variable -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-variable-3.c'
    sources:
      binary: unused-variable-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wunused-variable"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(defined but not used))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unwind-1_3594:
  build:
    cflags: ' -fleading-underscore -funwind-tables -c'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unwind-1.c'
    sources:
      binary: unwind-1.o
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fleading-underscore -funwind-tables"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf-badconcat2_3596:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf-badconcat2.c'
    sources:
      binary: utf-badconcat2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-standard concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-standard concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-standard concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-standard concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-standard concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-standard concatenation))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf-badconcat_3595:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf-badconcat.c'
    sources:
      binary: utf-badconcat.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-standard concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-standard concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-standard concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-standard concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-standard concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-standard concatenation))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf-cvt_3597:
  build:
    cflags: ' -std=gnu99 -Wall -Wconversion -Wsign-conversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf-cvt.c'
    sources:
      binary: utf-cvt.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wall -Wconversion -Wsign-conversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(alter its value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(alter its value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(alter its value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(change the sign))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(change the sign))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(alter its value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(alter its value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(alter its value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(alter its value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(alter its value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(alter its value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(change the sign" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(change the sign" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(change the sign" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(change the sign" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf-dflt2_3599:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf-dflt2.c'
    sources:
      binary: utf-dflt2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared" "undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected ',' or ';'" "expected))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf-dflt_3598:
  build:
    cflags: ' -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf-dflt.c'
    sources:
      binary: utf-dflt.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared" "undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected ',' or ';'" "expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared" "undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected ',' or ';'" "expected))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf-inc-init_3600:
  build:
    cflags: ' -std=gnu99'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf-inc-init.c'
    sources:
      binary: ./utf-inc-init.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf-type_3601:
  build:
    cflags: ' -std=gnu99 -Wall -Werror'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf-type.c'
    sources:
      binary: ./utf-type.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wall -Werror"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf16-1_3602:
  build:
    cflags: ' -std=gnu99 -Wall -Werror'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf16-1.c'
    sources:
      binary: ./utf16-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wall -Werror"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf16-2_3603:
  build:
    cflags: ' -std=gnu99 -Wall -Werror'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf16-2.c'
    sources:
      binary: ./utf16-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wall -Werror"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf16-3_3604:
  build:
    cflags: ' -std=gnu99 -Wall -Werror'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf16-3.c'
    sources:
      binary: ./utf16-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wall -Werror"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf16-4_3605:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf16-4.c'
    sources:
      binary: utf16-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty character))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(constant too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(constant too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(implicitly truncated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(implicitly truncated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(constant too long" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf32-1_3606:
  build:
    cflags: ' -std=gnu99 -Wall -Werror'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf32-1.c'
    sources:
      binary: ./utf32-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wall -Werror"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf32-2_3607:
  build:
    cflags: ' -std=gnu99 -Wall -Werror'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf32-2.c'
    sources:
      binary: ./utf32-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wall -Werror"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf32-3_3608:
  build:
    cflags: ' -std=gnu99 -Wall -Werror'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf32-3.c'
    sources:
      binary: ./utf32-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wall -Werror"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf32-4_3609:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf32-4.c'
    sources:
      binary: utf32-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty character))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(constant too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(constant too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(constant too long" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_va-arg-1_3610:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/va-arg-1.c'
    sources:
      binary: va-arg-1.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(is promoted to|so you should|abort" "char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(is promoted to|abort" "short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(is promoted to|abort" "float))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_va-arg-2_3611:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/va-arg-2.c'
    sources:
      binary: va-arg-2.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no longer implements" "#error 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Revise your code" "#error 2))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_va-arg-3_3612:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/va-arg-3.c'
    sources:
      binary: va-arg-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_va-arg-4_3613:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/va-arg-4.c'
    sources:
      binary: va-arg-4.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires a named argument))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_va-arg-5_3614:
  build:
    cflags: ' -fallow-parameterless-variadic-functions -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/va-arg-5.c'
    sources:
      binary: va-arg-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fallow-parameterless-variadic-functions"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_va-arg-pack-1_3615:
  build:
    cflags: ' -O2 -fgnu89-inline -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/va-arg-pack-1.c'
    sources:
      binary: va-arg-pack-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fgnu89-inline"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_va-arg-pack-2_3616:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/va-arg-pack-2.c'
    sources:
      binary: va-arg-pack-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_va-arg-pack-len-1_3617:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/va-arg-pack-len-1.c'
    sources:
      binary: ./va-arg-pack-len-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_va-arg-pack-len-2_3618:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/va-arg-pack-len-2.c'
    sources:
      binary: va-arg-pack-len-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(needs 3 arguments, only 2 were given))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(called with more than 3))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_var-expand2_3619:
  build:
    cflags: ' -O2 -funroll-loops -ffast-math -fvariable-expansion-in-unroller'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/var-expand2.c'
    sources:
      binary: ./var-expand2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-loops -ffast-math -fvariable-expansion-in-unroller"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_varpool-1_3620:
  build:
    cflags: -O2 -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/varpool-1.c'
    sources:
      binary: varpool-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vec-andxor1_3621:
  build:
    cflags: ' -O'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vec-andxor1.c'
    sources:
      binary: ./vec-andxor1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vector-1_3622:
  build:
    cflags: ' -std=gnu90 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vector-1.c'
    sources:
      binary: vector-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu90"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vector-shift-2_3623:
  build:
    cflags: ' -O -fdump-tree-ccp1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vector-shift-2.c'
    sources:
      binary: vector-shift-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-ccp1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vector-shift_3624:
  build:
    cflags: ' -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vector-shift.c'
    sources:
      binary: vector-shift.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_verbose-asm-2_3625:
  build:
    cflags: -fverbose-asm -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/verbose-asm-2.c'
    sources:
      binary: verbose-asm-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fverbose-asm"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_verbose-asm_3626:
  build:
    cflags: ' -fverbose-asm -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/verbose-asm.c'
    sources:
      binary: verbose-asm.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fverbose-asm"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-11_3628:
  build:
    cflags: -Os -fpic -mstringop-strategy=libcall -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-11.c'
    sources:
      binary: visibility-11.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fpic -mstringop-strategy=libcall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-14_3629:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-14.c'
    sources:
      binary: visibility-14.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-15_3630:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-15.c'
    sources:
      binary: visibility-15.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-16_3631:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-16.c'
    sources:
      binary: visibility-16.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-17_3632:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-17.c'
    sources:
      binary: visibility-17.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-18_3633:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-18.c'
    sources:
      binary: visibility-18.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-19_3634:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-19.c'
    sources:
      binary: visibility-19.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-1_3627:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-1.c'
    sources:
      binary: visibility-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-20_3636:
  build:
    cflags: ' -O2 -fvisibility=hidden -fpic -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-20.c'
    sources:
      binary: visibility-20.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fvisibility=hidden -fpic" { target fpic }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-22_3637:
  build:
    cflags: ' -O2 -fPIC'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-22.c'
    sources:
      binary: ./visibility-22.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC" { target fpic }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-23_3638:
  build:
    cflags: ' -O2 -fPIC -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-23.c'
    sources:
      binary: visibility-23.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC" { target fpic }'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-2_3635:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-2.c'
    sources:
      binary: visibility-2.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-3_3639:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-3.c'
    sources:
      binary: visibility-3.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-4_3640:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-4.c'
    sources:
      binary: visibility-4.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-5_3641:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-5.c'
    sources:
      binary: visibility-5.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-6_3642:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-6.c'
    sources:
      binary: visibility-6.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-7_3643:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-7.c'
    sources:
      binary: visibility-7.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(different visibility" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-8_3644:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-8.c'
    sources:
      binary: visibility-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-9_3645:
  build:
    cflags: ' -fvisibility=hidden -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-9.c'
    sources:
      binary: visibility-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fvisibility=hidden"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-a_3646:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-a.c'
    sources:
      binary: visibility-a.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-c_3647:
  build:
    cflags: '  -ansi -pedantic-errors -c'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-c.c'
    sources:
      binary: visibility-c.o
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-d_3648:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-d.c'
    sources:
      binary: visibility-d.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-10_3649:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-10.c'
    sources:
      binary: vla-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-11_3650:
  build:
    cflags: ' -std=c99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-11.c'
    sources:
      binary: vla-11.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(a member of a structure or union cannot have a variably modified type" "variably modified))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(not in a declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(not in a declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*('struct s' declared inside parameter list" "struct decl))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-12_3651:
  build:
    cflags: ' -std=gnu99'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-12.c'
    sources:
      binary: ./vla-12.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-13_3652:
  build:
    cflags: ' -std=c99'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-13.c'
    sources:
      binary: ./vla-13.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-14_3653:
  build:
    cflags: ' -std=gnu99'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-14.c'
    sources:
      binary: ./vla-14.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-15_3654:
  build:
    cflags: ' -std=gnu99'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-15.c'
    sources:
      binary: ./vla-15.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-16_3655:
  build:
    cflags: ' -std=gnu99'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-16.c'
    sources:
      binary: ./vla-16.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-17_3656:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-17.c'
    sources:
      binary: vla-17.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(variably modified 'b' at file scope))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-18_3657:
  build:
    cflags: ' -std=c99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-18.c'
    sources:
      binary: vla-18.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variably modified 'b' at file scope))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-19_3658:
  build:
    cflags: ' -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-19.c'
    sources:
      binary: vla-19.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-nested function with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-nested function with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-nested function with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-nested function with variably modified type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-20_3660:
  build:
    cflags: ' -std=c99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-20.c'
    sources:
      binary: vla-20.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(zero-size array" "correct zero size))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(not in a declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(not in a declaration))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-21_3661:
  build:
    cflags: ' -std=c99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-21.c'
    sources:
      binary: vla-21.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-22_3662:
  build:
    cflags: ' -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-22.c'
    sources:
      binary: vla-22.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-23_3663:
  build:
    cflags: ' -O --param max-cse-insns=1 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-23.c'
    sources:
      binary: vla-23.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O --param max-cse-insns=1"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-24_3664:
  build:
    cflags: ' -std=gnu99'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-24.c'
    sources:
      binary: ./vla-24.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-2_3659:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-2.c'
    sources:
      binary: vla-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-3_3665:
  build:
    cflags: ' -std=gnu99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-3.c'
    sources:
      binary: vla-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-4_3666:
  build:
    cflags: ' -std=c99 -pedantic-errors'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-4.c'
    sources:
      binary: ./vla-4.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-5_3667:
  build:
    cflags: ' -std=c99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-5.c'
    sources:
      binary: vla-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(on array function parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(on array function parameter))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-6_3668:
  build:
    cflags: ' -std=c99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-6.c'
    sources:
      binary: vla-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not allowed in other than function prototype scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not allowed in other than function prototype scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not allowed in other than function prototype scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not allowed in other than function prototype scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not allowed in other than function prototype scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not allowed in other than function prototype scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(a member of a structure or union cannot have a variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(a member of a structure or union cannot have a variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(a member of a structure or union cannot have a variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variably modified type must have no linkage))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(not in a declaration))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-7_3669:
  build:
    cflags: ' -std=c99 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-7.c'
    sources:
      binary: vla-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-8_3670:
  build:
    cflags: ' -std=c99 -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-8.c'
    sources:
      binary: vla-8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-9_3671:
  build:
    cflags: ' -std=c99 -pedantic-errors -W -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-9.c'
    sources:
      binary: vla-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors -W -Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-init-1_3672:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-init-1.c'
    sources:
      binary: vla-init-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable-sized object may not be initialized" "VLA init))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements in array initializer" "excess))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-init-2_3673:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-init-2.c'
    sources:
      binary: vla-init-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable-sized object may not be initialized))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array size missing in 'a'" "extra error))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-init-3_3674:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-init-3.c'
    sources:
      binary: vla-init-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable-sized object may not be initialized))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array size missing in 'a'" "extra error))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-init-4_3675:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-init-4.c'
    sources:
      binary: vla-init-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(compound literal has variable size))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-init-5_3676:
  build:
    cflags: '  -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-init-5.c'
    sources:
      binary: vla-init-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(compound literal has variable size))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_void-cast-1_3677:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/void-cast-1.c'
    sources:
      binary: void-cast-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_void-cast-2_3678:
  build:
    cflags: ' -Wall -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/void-cast-2.c'
    sources:
      binary: void-cast-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(left-hand operand of comma expression has no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(left-hand operand of comma expression has no effect))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_volatile-bitfields-1_3679:
  build:
    cflags: ' -fstrict-volatile-bitfields'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/volatile-bitfields-1.c'
    sources:
      binary: ./volatile-bitfields-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-volatile-bitfields"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_volatile-bitfields-2_3680:
  build:
    cflags: ' -fstrict-volatile-bitfields'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/volatile-bitfields-2.c'
    sources:
      binary: ./volatile-bitfields-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-volatile-bitfields"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_volatile1_3681:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/volatile1.c'
    sources:
      binary: volatile1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_volatile2_3682:
  build:
    cflags: ' -O2 -fdump-tree-optimized -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/volatile2.c'
    sources:
      binary: volatile2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_volatile3_3683:
  build:
    cflags: ' -fdump-tree-ssa -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/volatile3.c'
    sources:
      binary: volatile3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-ssa"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vrp-min-max-1_3684:
  build:
    cflags: ' -O2 -fdump-tree-vrp1 -fdump-tree-mergephi2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vrp-min-max-1.c'
    sources:
      binary: vrp-min-max-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-vrp1 -fdump-tree-mergephi2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vrp-min-max-2_3685:
  build:
    cflags: ' -O2 -fdump-tree-vrp2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vrp-min-max-2.c'
    sources:
      binary: vrp-min-max-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-vrp2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vshift-1_3686:
  build:
    cflags: ' -O3'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vshift-1.c'
    sources:
      binary: ./vshift-1.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vshift-2_3687:
  build:
    cflags: ' -O3'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vshift-2.c'
    sources:
      binary: ./vshift-2.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vshift-3_3688:
  build:
    cflags: ' -O3'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vshift-3.c'
    sources:
      binary: ./vshift-3.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vshift-4_3689:
  build:
    cflags: ' -O3'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vshift-4.c'
    sources:
      binary: ./vshift-4.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vshift-5_3690:
  build:
    cflags: ' -O3'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vshift-5.c'
    sources:
      binary: ./vshift-5.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vshift-6_3691:
  build:
    cflags: ' -Wshift-count-negative -Wshift-count-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vshift-6.c'
    sources:
      binary: vshift-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wshift-count-negative -Wshift-count-overflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count >= width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count >= width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count >= width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count >= width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count >= width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count >= width))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vshift-7_3692:
  build:
    cflags: ' -O1 -Wshift-count-negative -Wshift-count-overflow -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vshift-7.c'
    sources:
      binary: vshift-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O1 -Wshift-count-negative -Wshift-count-overflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count >= width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count >= width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count >= width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count >= width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count >= width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count >= width))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-1_3693:
  build:
    cflags: ' -O3 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/warn-1.c'
    sources:
      binary: warn-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-nsstring_3694:
  build:
    cflags: ' -Wformat -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/warn-nsstring.c'
    sources:
      binary: warn-nsstring.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(is only allowed in Objective-C dialects))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(is only allowed in Objective-C dialects))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wcaselabel-1_3695:
  build:
    cflags: ' -w -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wcaselabel-1.c'
    sources:
      binary: wcaselabel-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-w"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(case label does not reduce to an integer constant))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wchar_t-2_3696:
  build:
    cflags: ' -fshort-wchar -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wchar_t-2.c'
    sources:
      binary: wchar_t-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fshort-wchar"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_webizer_3697:
  build:
    cflags: ' -O3 -funroll-loops'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/webizer.c'
    sources:
      binary: ./webizer.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -funroll-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_winline-10_3699:
  build:
    cflags: ' -O2 -Winline -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/winline-10.c'
    sources:
      binary: winline-10.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Winline"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(inlining .* mismatched arg" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(follows non-prototype definition))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_winline-1_3698:
  build:
    cflags: ' -Winline -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/winline-1.c'
    sources:
      binary: winline-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Winline -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_winline-2_3700:
  build:
    cflags: ' -Winline -O2 -fgnu89-inline -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/winline-2.c'
    sources:
      binary: winline-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Winline -O2 -fgnu89-inline"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(body not available" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_winline-3_3701:
  build:
    cflags: ' -Winline -O2 --param max-inline-insns-single=1 --param inline-min-speedup=100 -fgnu89-inline -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/winline-3.c'
    sources:
      binary: winline-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Winline -O2 --param max-inline-insns-single=1 --param inline-min-speedup=100 -fgnu89-inline"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(max-inline-insns-single" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_winline-5_3702:
  build:
    cflags: ' -Winline -O2 --param inline-unit-growth=0 --param large-unit-insns=0 -fgnu89-inline -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/winline-5.c'
    sources:
      binary: winline-5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Winline -O2 --param inline-unit-growth=0 --param large-unit-insns=0 -fgnu89-inline"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(inline-unit-growth))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_winline-6_3703:
  build:
    cflags: ' -Winline -O2 --param large-function-growth=0 --param large-function-insns=1 -fgnu89-inline -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/winline-6.c'
    sources:
      binary: winline-6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Winline -O2 --param large-function-growth=0 --param large-function-insns=1 -fgnu89-inline"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(large-function-growth))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_winline-7_3704:
  build:
    cflags: ' -Winline -O2 -fgnu89-inline -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/winline-7.c'
    sources:
      binary: winline-7.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Winline -O2 -fgnu89-inline"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*((function not inlinable|alloca)))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_winline-9_3705:
  build:
    cflags: ' -O2 -Winline --param large-stack-frame=10 --param large-stack-frame-growth=2 -fgnu89-inline -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/winline-9.c'
    sources:
      binary: winline-9.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Winline --param large-stack-frame=10 --param large-stack-frame-growth=2 -fgnu89-inline"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(large-stack-frame" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wmul-1_3706:
  build:
    cflags: ' -O2 -fdump-tree-widening_mul -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wmul-1.c'
    sources:
      binary: wmul-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-aggr-init-1_3707:
  build:
    cflags: ' -Wtraditional -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-aggr-init-1.c'
    sources:
      binary: wtr-aggr-init-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects automatic" "automatic aggregate initialization))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects automatic" "__extension__ reenables warnings))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-conversion-1_3708:
  build:
    cflags: ' -Wtraditional-conversion -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-conversion-1.c'
    sources:
      binary: wtr-conversion-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional-conversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(as integer rather than floating" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(as integer rather than floating" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(as integer rather than complex" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(as floating rather than integer" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(as 'float' rather than 'double'" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(as 'float' rather than 'double'" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(as floating rather than complex" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(as floating rather than integer" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(as 'float' rather than 'double'" "small double" { target { "avr-*-*))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(as 'float' rather than 'double'" "small long double" { target { "avr-*-*))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(as floating rather than complex" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(as complex rather than integer" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(as complex rather than floating" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(as complex rather than floating" "prototype conversion warning))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-escape-1_3709:
  build:
    cflags: ' -Wtraditional -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-escape-1.c'
    sources:
      binary: wtr-escape-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(the meaning of" "escaped character warning ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(the meaning of" "escaped character warning ))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-func-def-1_3710:
  build:
    cflags: ' -Wtraditional -std=gnu89 -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-func-def-1.c'
    sources:
      binary: wtr-func-def-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional -std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:136:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:153:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-int-type-1_3711:
  build:
    cflags: ' -std=c99 -Wtraditional -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-int-type-1.c'
    sources:
      binary: wtr-int-type-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(integer constant is so large that it is unsigned" "so large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(this decimal constant would be unsigned in ISO C90" "ISO C90))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-label-1_3712:
  build:
    cflags: ' -Wtraditional -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-label-1.c'
    sources:
      binary: wtr-label-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C lacks" "label conflicts with identifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C lacks" "label conflicts with identifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C lacks" "label conflicts with identifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C lacks" "label conflicts with identifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C lacks" "label conflicts with identifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C lacks" "label conflicts with identifier))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-static-1_3713:
  build:
    cflags: ' -Wtraditional -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-static-1.c'
    sources:
      binary: wtr-static-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(non-static.*follows static" "non-static follows static))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-strcat-1_3714:
  build:
    cflags: ' -Wtraditional -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-strcat-1.c'
    sources:
      binary: wtr-strcat-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(concatenation" "string concatenation))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-suffix-1_3715:
  build:
    cflags: ' -Wtraditional -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-suffix-1.c'
    sources:
      binary: wtr-suffix-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects" "numeric constant suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects" "numeric constant suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects" "numeric constant suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects" "numeric constant suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects" "numeric constant suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects" "numeric constant suffix))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-switch-1_3716:
  build:
    cflags: ' -Wtraditional -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-switch-1.c'
    sources:
      binary: wtr-switch-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(switch expression" "switch expression))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-unary-plus-1_3717:
  build:
    cflags: ' -Wtraditional -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-unary-plus-1.c'
    sources:
      binary: wtr-unary-plus-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(unary plus operator" "unary plus operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(unary plus operator" "unary plus operator))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-union-init-1_3718:
  build:
    cflags: ' -Wtraditional -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-union-init-1.c'
    sources:
      binary: wtr-union-init-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects initialization of unions" "initialization of unions))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-union-init-2_3719:
  build:
    cflags: ' -Wtraditional -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-union-init-2.c'
    sources:
      binary: wtr-union-init-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects initialization of unions" "initialization of unions))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects initialization of unions" "initialization of unions))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects initialization of unions" "initialization of unions))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects initialization of unions" "initialization of unions))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-union-init-3_3720:
  build:
    cflags: ' -Wtraditional -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-union-init-3.c'
    sources:
      binary: wtr-union-init-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects initialization of unions" "initialization of unions))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects initialization of unions" "initialization of unions))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects initialization of unions" "initialization of unions))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtypequal_3721:
  build:
    cflags: '  -ansi -pedantic-errors -S'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtypequal.c'
    sources:
      binary: wtypequal.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_zero_bits_compound-1_3722:
  build:
    cflags: -O3 -dP -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/zero_bits_compound-1.c'
    sources:
      binary: zero_bits_compound-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -dP"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_zero_bits_compound-2_3723:
  build:
    cflags: -O3 -dP -fdump-rtl-combine -ffat-lto-objects -S
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/zero_bits_compound-2.c'
    sources:
      binary: zero_bits_compound-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O3 -dP -fdump-rtl-combine"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_zero_sign_ext_test_3724:
  build:
    cflags: ' -O2'
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/zero_sign_ext_test.c'
    sources:
      binary: ./zero_sign_ext_test.exe
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
