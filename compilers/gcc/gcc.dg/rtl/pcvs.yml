test_test_1:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/rtl/test.c'
    sources: {binary: test.s, cflags: -S}
  group: GRPSERIAL
test_test_4:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/rtl/test.c'
    sources: {binary: test.s, cflags: -S}
  group: GRPSERIAL
test_test_7:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/rtl/test.c'
    sources: {binary: test.s, cflags: -S}
  group: GRPSERIAL
test_truncated-rtl-file_2:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/rtl/truncated-rtl-file.c'
    sources: {binary: truncated-rtl-file.s, cflags: -S}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          closing brace")[^\n]*\n?)+'}
test_truncated-rtl-file_5:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/rtl/truncated-rtl-file.c'
    sources: {binary: truncated-rtl-file.s, cflags: -S}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          closing brace")[^\n]*\n?)+'}
test_truncated-rtl-file_8:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/rtl/truncated-rtl-file.c'
    sources: {binary: truncated-rtl-file.s, cflags: -S}
  group: GRPSERIAL
  validate:
    match:
      L2: {expect: true, expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("no
          closing brace")[^\n]*\n?)+'}
test_unknown-rtx-code_3:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/rtl/unknown-rtx-code.c'
    sources: {binary: unknown-rtx-code.s, cflags: -S}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          rtx code")[^\n]*\n?)+'}
test_unknown-rtx-code_6:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/rtl/unknown-rtx-code.c'
    sources: {binary: unknown-rtx-code.s, cflags: -S}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          rtx code")[^\n]*\n?)+'}
test_unknown-rtx-code_9:
  build:
    files: '@ROOTPATH@/compilers/gcc/./gcc.dg/rtl/unknown-rtx-code.c'
    sources: {binary: unknown-rtx-code.s, cflags: -S}
  group: GRPSERIAL
  validate:
    match:
      L5: {expect: true, expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unknown
          rtx code")[^\n]*\n?)+'}
