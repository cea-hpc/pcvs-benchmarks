test_affinity-1_1:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/affinity-1.f90'
    sources:
      binary: affinity-1.s
  group: GRPSERIAL
test_affinity-1_124:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/affinity-1.f90'
    sources:
      binary: affinity-1.s
  group: GRPSERIAL
test_allocatable_components_1_125:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/allocatable_components_1.f90'
    sources:
      binary: allocatable_components_1.s
  group: GRPSERIAL
  validate:
    match:
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
test_allocatable_components_1_2:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/allocatable_components_1.f90'
    sources:
      binary: allocatable_components_1.s
  group: GRPSERIAL
  validate:
    match:
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
test_associate1_126:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/associate1.f90'
    sources:
      binary: associate1.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
test_associate1_3:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/associate1.f90'
    sources:
      binary: associate1.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("ASSOCIATE name")[^\n]*\n?)+'
test_block-1_127:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/block-1.f90'
    sources:
      binary: block-1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid (exit|branch)")[^\n]*\n?)+'
test_block-1_4:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/block-1.f90'
    sources:
      binary: block-1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid (exit|branch)")[^\n]*\n?)+'
test_collapse1_128:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/collapse1.f90'
    sources:
      binary: collapse1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not enough DO
          loops for collapsed")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("collapsed loops
          don.t form rectangular iteration space")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("iteration variable
          present on clause other than PRIVATE or LASTPRIVATE")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be a DO
          WHILE or DO without loop control")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("must be integer")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be redefined
          inside loop beginning")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("collapsed loops
          don.t form rectangular iteration space|cannot be redefined")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("iteration variable
          must be of type integer")[^\n]*\n?)+'
test_collapse1_5:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/collapse1.f90'
    sources:
      binary: collapse1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not enough DO
          loops for collapsed")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("collapsed loops
          don.t form rectangular iteration space")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("iteration variable
          present on clause other than PRIVATE or LASTPRIVATE")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be a DO
          WHILE or DO without loop control")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+(:43:)[^\n]*[0-9]+: warning:[^\n]*("must be integer")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be redefined
          inside loop beginning")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("collapsed loops
          don.t form rectangular iteration space|cannot be redefined")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("iteration variable
          must be of type integer")[^\n]*\n?)+'
test_crayptr1_129:
  build:
    cflags: "-O  -fopenmp -fcray-pointer\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/crayptr1.f90'
    sources:
      binary: crayptr1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Cray pointee
          \''a\'' in SHARED clause")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Cray pointee
          \''b\'' in PRIVATE clause")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Cray pointee
          \''c\'' in FIRSTPRIVATE clause")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Cray pointee
          \''d\'' in LASTPRIVATE clause")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Cray pointee
          \''a\'' in REDUCTION clause")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Cray pointer
          \''ip1\'' in REDUCTION clause")[^\n]*\n?)+'
test_crayptr1_6:
  build:
    cflags: "-O  -fopenmp -fcray-pointer\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/crayptr1.f90'
    sources:
      binary: crayptr1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Cray pointee
          \''a\'' in SHARED clause")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Cray pointee
          \''b\'' in PRIVATE clause")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Cray pointee
          \''c\'' in FIRSTPRIVATE clause")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Cray pointee
          \''d\'' in LASTPRIVATE clause")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Cray pointee
          \''a\'' in REDUCTION clause")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Cray pointer
          \''ip1\'' in REDUCTION clause")[^\n]*\n?)+'
test_crayptr2_130:
  build:
    cflags: "-O  -fopenmp -fcray-pointer\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/crayptr2.f90'
    sources:
      binary: crayptr2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("CRAY POINTEE attribute
          conflicts with THREADPRIVATE")[^\n]*\n?)+'
test_crayptr2_7:
  build:
    cflags: "-O  -fopenmp -fcray-pointer\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/crayptr2.f90'
    sources:
      binary: crayptr2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("CRAY POINTEE attribute
          conflicts with THREADPRIVATE")[^\n]*\n?)+'
test_crayptr3_131:
  build:
    cflags: "-O  -fopenmp -fcray-pointer\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/crayptr3.f90'
    sources:
      binary: crayptr3.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''ip\'' not
          specified in enclosing \''parallel\''")[^\n]*\n?)+'
test_crayptr3_8:
  build:
    cflags: "-O  -fopenmp -fcray-pointer\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/crayptr3.f90'
    sources:
      binary: crayptr3.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''ip\'' not
          specified in enclosing \''parallel\''")[^\n]*\n?)+'
test_crayptr4_132:
  build:
    cflags: "-O  -fopenmp -fcray-pointer\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/crayptr4.f90'
    sources:
      binary: crayptr4.s
  group: GRPSERIAL
test_crayptr4_9:
  build:
    cflags: "-O  -fopenmp -fcray-pointer\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/crayptr4.f90'
    sources:
      binary: crayptr4.s
  group: GRPSERIAL
test_crayptr5_10:
  build:
    cflags: "-O  -fopenmp -fcray-pointer\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/crayptr5.f90'
    sources:
      binary: crayptr5.s
  group: GRPSERIAL
test_crayptr5_133:
  build:
    cflags: "-O  -fopenmp -fcray-pointer\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/crayptr5.f90'
    sources:
      binary: crayptr5.s
  group: GRPSERIAL
test_declare-simd-1_11:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/declare-simd-1.f90'
    sources:
      binary: declare-simd-1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP directive")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("should refer to
          containing procedure")[^\n]*\n?)+'
test_declare-simd-1_134:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/declare-simd-1.f90'
    sources:
      binary: declare-simd-1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP directive")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("should refer to
          containing procedure")[^\n]*\n?)+'
test_declare-simd-2_12:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/declare-simd-2.f90'
    sources:
      binary: declare-simd-2.s
  group: GRPSERIAL
test_declare-simd-2_135:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/declare-simd-2.f90'
    sources:
      binary: declare-simd-2.s
  group: GRPSERIAL
test_declare-target-1_13:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/declare-target-1.f90'
    sources:
      binary: declare-target-1.s
  group: GRPSERIAL
test_declare-target-1_136:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/declare-target-1.f90'
    sources:
      binary: declare-target-1.s
  group: GRPSERIAL
test_declare-target-2_137:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/declare-target-2.f90'
    sources:
      binary: declare-target-2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mentioned multiple
          times in clauses of the same")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mentioned multiple
          times in clauses of the same")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("form without
          clauses is allowed in interface block")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("form without
          clauses is allowed in interface block")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("isn.t SAVEd")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("attribute conflicts")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("attribute conflicts")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is an element
          of a COMMON block")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("TO clause and
          later in LINK")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("TO clause and
          later in LINK")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("LINK clause and
          later in TO")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mentioned multiple
          times in clauses of the same")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mentioned multiple
          times in clauses of the same")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mentioned multiple
          times in clauses of the same")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mentioned multiple
          times in clauses of the same")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("TO clause and
          later in LINK")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("LINK clause and
          later in TO")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mentioned multiple
          times in clauses of the same")[^\n]*\n?)+'
test_declare-target-2_14:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/declare-target-2.f90'
    sources:
      binary: declare-target-2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mentioned multiple
          times in clauses of the same")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mentioned multiple
          times in clauses of the same")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("form without
          clauses is allowed in interface block")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("form without
          clauses is allowed in interface block")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("isn.t SAVEd")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("attribute conflicts")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("attribute conflicts")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is an element
          of a COMMON block")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("TO clause and
          later in LINK")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("TO clause and
          later in LINK")[^\n]*\n?)+'
      L44:
        expect: true
        expr: '(^|\n)([^\n]+:44:[^\n]*[0-9]+: (fatal )?error:[^\n]*("LINK clause and
          later in TO")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mentioned multiple
          times in clauses of the same")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mentioned multiple
          times in clauses of the same")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mentioned multiple
          times in clauses of the same")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mentioned multiple
          times in clauses of the same")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("TO clause and
          later in LINK")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("LINK clause and
          later in TO")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("mentioned multiple
          times in clauses of the same")[^\n]*\n?)+'
test_depend-1_138:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/depend-1.f90'
    sources:
      binary: depend-1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rightmost upper
          bound of assumed size array section|proper array section")[^\n]*\n?)+'
test_depend-1_15:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/depend-1.f90'
    sources:
      binary: depend-1.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rightmost upper
          bound of assumed size array section|proper array section")[^\n]*\n?)+'
test_do-1_139:
  build:
    cflags: "-O  -O -fopenmp -fdump-tree-omplower\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/do-1.f90'
    sources:
      binary: do-1.s
  group: GRPSERIAL
test_do-1_16:
  build:
    cflags: "-O  -O -fopenmp -fdump-tree-omplower\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/do-1.f90'
    sources:
      binary: do-1.s
  group: GRPSERIAL
test_fixed-1_140:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/fixed-1.f'
    sources:
      binary: fixed-1.s
  group: GRPSERIAL
test_fixed-1_17:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/fixed-1.f'
    sources:
      binary: fixed-1.s
  group: GRPSERIAL
test_free-1_141:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/free-1.f90'
    sources:
      binary: free-1.s
  group: GRPSERIAL
test_free-1_18:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/free-1.f90'
    sources:
      binary: free-1.s
  group: GRPSERIAL
test_free-2_142:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/free-2.f90'
    sources:
      binary: free-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("starts a commented
          line")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("starts a commented
          line")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("starts a commented
          line")[^\n]*\n?)+'
test_free-2_19:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/free-2.f90'
    sources:
      binary: free-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+(:12:)[^\n]*[0-9]+: warning:[^\n]*("starts a commented
          line")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("starts a commented
          line")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("starts a commented
          line")[^\n]*\n?)+'
test_gridify-1_143:
  build:
    cflags: "-O  -fopenmp -fdump-tree-omplower-details\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/gridify-1.f90'
    sources:
      binary: gridify-1.s
  group: GRPSERIAL
test_gridify-1_20:
  build:
    cflags: "-O  -fopenmp -fdump-tree-omplower-details\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/gridify-1.f90'
    sources:
      binary: gridify-1.s
  group: GRPSERIAL
test_intentin1_144:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/intentin1.f90'
    sources:
      binary: intentin1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("INTENT.IN. POINTER")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("INTENT.IN. POINTER")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("INTENT.IN. POINTER")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("INTENT.IN. POINTER")[^\n]*\n?)+'
test_intentin1_21:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/intentin1.f90'
    sources:
      binary: intentin1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("INTENT.IN. POINTER")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("INTENT.IN. POINTER")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("INTENT.IN. POINTER")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("INTENT.IN. POINTER")[^\n]*\n?)+'
test_linear-1_145:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/linear-1.f90'
    sources:
      binary: linear-1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("LINEAR clause
          modifier used on DO or SIMD construct")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("LINEAR clause
          modifier used on DO or SIMD construct")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("LINEAR clause
          modifier used on DO or SIMD construct")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("LINEAR clause
          modifier used on DO or SIMD construct")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("LINEAR clause
          modifier used on DO or SIMD construct")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("LINEAR clause
          modifier used on DO or SIMD construct")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("LINEAR clause
          modifier used on DO or SIMD construct")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("LINEAR clause
          modifier used on DO or SIMD construct")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("LINEAR clause
          modifier used on DO or SIMD construct")[^\n]*\n?)+'
test_linear-1_22:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/linear-1.f90'
    sources:
      binary: linear-1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("LINEAR clause
          modifier used on DO or SIMD construct")[^\n]*\n?)+'
      L18:
        expect: true
        expr: '(^|\n)([^\n]+:18:[^\n]*[0-9]+: (fatal )?error:[^\n]*("LINEAR clause
          modifier used on DO or SIMD construct")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("LINEAR clause
          modifier used on DO or SIMD construct")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("LINEAR clause
          modifier used on DO or SIMD construct")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("LINEAR clause
          modifier used on DO or SIMD construct")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("LINEAR clause
          modifier used on DO or SIMD construct")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("LINEAR clause
          modifier used on DO or SIMD construct")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("LINEAR clause
          modifier used on DO or SIMD construct")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("LINEAR clause
          modifier used on DO or SIMD construct")[^\n]*\n?)+'
test_map-1_146:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/map-1.f90'
    sources:
      binary: map-1.s
  group: GRPSERIAL
  validate:
    match:
      L102:
        expect: true
        expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Syntax error
          in OpenMP variable list")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+:103:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected !\\\\\\$OMP
          END TARGET statement")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Syntax error
          in OpenMP variable list")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+:106:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected !\\\\\\$OMP
          END TARGET statement")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("THREADPRIVATE
          object \''tp\'' in MAP clause")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Object \''p\''
          is not a variable")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("out of bounds")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("out of bounds")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("out of bounds")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Stride should
          not be specified for array section in MAP clause")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rightmost upper
          bound of assumed size array section not specified")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''aas\'' in
          MAP clause at \\\\\\(1\\\\\\) is not a proper array section")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+:70:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rightmost upper
          bound of assumed size array section not specified")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''aas\'' in
          MAP clause at \\\\\\(1\\\\\\) is not a proper array section")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Assumed size
          array")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in array reference")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+:85:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''k\'' in MAP
          clause at \\\\\\(1\\\\\\) is not a proper array section")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in array reference")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''k\'' in MAP
          clause at \\\\\\(1\\\\\\) is not a proper array section")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Syntax error
          in OpenMP variable list")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected !\\\\\\$OMP
          END TARGET statement")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Syntax error
          in OpenMP variable list")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+:99:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected !\\\\\\$OMP
          END TARGET statement")[^\n]*\n?)+'
test_map-1_23:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/map-1.f90'
    sources:
      binary: map-1.s
  group: GRPSERIAL
  validate:
    match:
      L102:
        expect: true
        expr: '(^|\n)([^\n]+:102:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Syntax error
          in OpenMP variable list")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+:103:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected !\\\\\\$OMP
          END TARGET statement")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Syntax error
          in OpenMP variable list")[^\n]*\n?)+'
      L106:
        expect: true
        expr: '(^|\n)([^\n]+:106:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected !\\\\\\$OMP
          END TARGET statement")[^\n]*\n?)+'
      L108:
        expect: true
        expr: '(^|\n)([^\n]+:108:[^\n]*[0-9]+: (fatal )?error:[^\n]*("THREADPRIVATE
          object \''tp\'' in MAP clause")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Object \''p\''
          is not a variable")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+(:39:)[^\n]*[0-9]+: warning:[^\n]*("out of bounds")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+(:42:)[^\n]*[0-9]+: warning:[^\n]*("out of bounds")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+(:45:)[^\n]*[0-9]+: warning:[^\n]*("out of bounds")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Stride should
          not be specified for array section in MAP clause")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rightmost upper
          bound of assumed size array section not specified")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''aas\'' in
          MAP clause at \\\\\\(1\\\\\\) is not a proper array section")[^\n]*\n?)+'
      L70:
        expect: true
        expr: '(^|\n)([^\n]+:70:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rightmost upper
          bound of assumed size array section not specified")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''aas\'' in
          MAP clause at \\\\\\(1\\\\\\) is not a proper array section")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Assumed size
          array")[^\n]*\n?)+'
      L84:
        expect: true
        expr: '(^|\n)([^\n]+:84:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in array reference")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+:85:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''k\'' in MAP
          clause at \\\\\\(1\\\\\\) is not a proper array section")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in array reference")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''k\'' in MAP
          clause at \\\\\\(1\\\\\\) is not a proper array section")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Syntax error
          in OpenMP variable list")[^\n]*\n?)+'
      L96:
        expect: true
        expr: '(^|\n)([^\n]+:96:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected !\\\\\\$OMP
          END TARGET statement")[^\n]*\n?)+'
      L98:
        expect: true
        expr: '(^|\n)([^\n]+:98:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Syntax error
          in OpenMP variable list")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+:99:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected !\\\\\\$OMP
          END TARGET statement")[^\n]*\n?)+'
test_omp_atomic1_147:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_atomic1.f90'
    sources:
      binary: omp_atomic1.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must set a scalar
          variable")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("assignment operator
          must be")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot reference")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not mathematically
          equivalent to")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("assignment intrinsic
          must be")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("intrinsic arguments
          except one")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("intrinsic argument
          must be \''a\''")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("assignment must
          have an operator")[^\n]*\n?)+'
test_omp_atomic1_24:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_atomic1.f90'
    sources:
      binary: omp_atomic1.s
  group: GRPSERIAL
  validate:
    match:
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must set a scalar
          variable")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("assignment operator
          must be")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot reference")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not mathematically
          equivalent to")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("assignment intrinsic
          must be")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("intrinsic arguments
          except one")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("intrinsic argument
          must be \''a\''")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("assignment must
          have an operator")[^\n]*\n?)+'
test_omp_atomic2_148:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_atomic2.f90'
    sources:
      binary: omp_atomic2.s
  group: GRPSERIAL
test_omp_atomic2_25:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_atomic2.f90'
    sources:
      binary: omp_atomic2.s
  group: GRPSERIAL
test_omp_clauses1_149:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_clauses1.f90'
    sources:
      binary: omp_clauses1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''j\'' present
          on multiple clauses")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''j\'' present
          on multiple clauses")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''i\'' present
          on multiple clauses")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''\\[jk\\]\''
          present on multiple clauses")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''i\'' present
          on multiple clauses")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''\\[jk\\]\''
          present on multiple clauses")[^\n]*\n?)+'
test_omp_clauses1_26:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_clauses1.f90'
    sources:
      binary: omp_clauses1.s
  group: GRPSERIAL
  validate:
    match:
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''j\'' present
          on multiple clauses")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''j\'' present
          on multiple clauses")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''i\'' present
          on multiple clauses")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''\\[jk\\]\''
          present on multiple clauses")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''i\'' present
          on multiple clauses")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("\''\\[jk\\]\''
          present on multiple clauses")[^\n]*\n?)+'
test_omp_do1_150:
  build:
    cflags: "-O  -fopenmp -std=gnu\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_do1.f90'
    sources:
      binary: omp_do1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("EXIT statement")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be a DO
          WHILE or DO without loop control")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("EXIT statement")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be a DO
          WHILE or DO without loop control")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be a DO
          WHILE or DO without loop control")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("Deleted feature: Loop
          variable")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("Deleted feature: Loop
          variable")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("EXIT statement")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("EXIT statement")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("leaving OpenMP
          structured block")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("iteration variable
          present on clause")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("iteration variable
          must be of type integer")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("iteration variable
          must be of type integer")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be a DO
          WHILE or DO without loop control")[^\n]*\n?)+'
test_omp_do1_27:
  build:
    cflags: "-O  -fopenmp -std=gnu\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_do1.f90'
    sources:
      binary: omp_do1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("EXIT statement")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be a DO
          WHILE or DO without loop control")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("EXIT statement")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be a DO
          WHILE or DO without loop control")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be a DO
          WHILE or DO without loop control")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("Deleted feature: Loop
          variable")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+(:31:)[^\n]*[0-9]+: warning:[^\n]*("Deleted feature: Loop
          variable")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("EXIT statement")[^\n]*\n?)+'
      L42:
        expect: true
        expr: '(^|\n)([^\n]+:42:[^\n]*[0-9]+: (fatal )?error:[^\n]*("EXIT statement")[^\n]*\n?)+'
      L47:
        expect: true
        expr: '(^|\n)([^\n]+:47:[^\n]*[0-9]+: (fatal )?error:[^\n]*("leaving OpenMP
          structured block")[^\n]*\n?)+'
      L51:
        expect: true
        expr: '(^|\n)([^\n]+:51:[^\n]*[0-9]+: (fatal )?error:[^\n]*("iteration variable
          present on clause")[^\n]*\n?)+'
      L56:
        expect: true
        expr: '(^|\n)([^\n]+:56:[^\n]*[0-9]+: (fatal )?error:[^\n]*("iteration variable
          must be of type integer")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("iteration variable
          must be of type integer")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be a DO
          WHILE or DO without loop control")[^\n]*\n?)+'
test_omp_do_concurrent_151:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_do_concurrent.f90'
    sources:
      binary: omp_do_concurrent.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DO cannot
          be a DO CONCURRENT loop")[^\n]*\n?)+'
test_omp_do_concurrent_28:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_do_concurrent.f90'
    sources:
      binary: omp_do_concurrent.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DO cannot
          be a DO CONCURRENT loop")[^\n]*\n?)+'
test_omp_parallel_1_152:
  build:
    cflags: "-O  -fopenmp -Wno-hsa -fdump-tree-original\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_parallel_1.f90'
    sources:
      binary: omp_parallel_1.s
  group: GRPSERIAL
test_omp_parallel_1_29:
  build:
    cflags: "-O  -fopenmp -Wno-hsa -fdump-tree-original\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_parallel_1.f90'
    sources:
      binary: omp_parallel_1.s
  group: GRPSERIAL
test_omp_parse1_153:
  build:
    cflags: "-O  -fopenmp -fdump-tree-omplower\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_parse1.f90'
    sources:
      binary: omp_parse1.s
  group: GRPSERIAL
test_omp_parse1_30:
  build:
    cflags: "-O  -fopenmp -fdump-tree-omplower\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_parse1.f90'
    sources:
      binary: omp_parse1.s
  group: GRPSERIAL
test_omp_parse2_154:
  build:
    cflags: "-O  -fopenmp -fdump-tree-omplower\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_parse2.f'
    sources:
      binary: omp_parse2.s
  group: GRPSERIAL
test_omp_parse2_31:
  build:
    cflags: "-O  -fopenmp -fdump-tree-omplower\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_parse2.f'
    sources:
      binary: omp_parse2.s
  group: GRPSERIAL
test_omp_threadprivate1_155:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_threadprivate1.f90'
    sources:
      binary: omp_threadprivate1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not found")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not found")[^\n]*\n?)+'
test_omp_threadprivate1_32:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_threadprivate1.f90'
    sources:
      binary: omp_threadprivate1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not found")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not found")[^\n]*\n?)+'
test_omp_threadprivate2_156:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_threadprivate2.f90'
    sources:
      binary: omp_threadprivate2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("isn\''t SAVEd")[^\n]*\n?)+'
test_omp_threadprivate2_33:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_threadprivate2.f90'
    sources:
      binary: omp_threadprivate2.s
  group: GRPSERIAL
  validate:
    match:
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("isn\''t SAVEd")[^\n]*\n?)+'
test_openmp-simd-1_157:
  build:
    cflags: "-O  -fno-openmp -fopenmp-simd -fdump-tree-original -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/openmp-simd-1.f90'
    sources:
      binary: openmp-simd-1.s
  group: GRPSERIAL
test_openmp-simd-1_34:
  build:
    cflags: "-O  -fno-openmp -fopenmp-simd -fdump-tree-original -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/openmp-simd-1.f90'
    sources:
      binary: openmp-simd-1.s
  group: GRPSERIAL
test_openmp-simd-2_158:
  build:
    cflags: "-O  -fopenmp -fopenmp-simd -fdump-tree-original -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/openmp-simd-2.f90'
    sources:
      binary: openmp-simd-2.s
  group: GRPSERIAL
test_openmp-simd-2_35:
  build:
    cflags: "-O  -fopenmp -fopenmp-simd -fdump-tree-original -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/openmp-simd-2.f90'
    sources:
      binary: openmp-simd-2.s
  group: GRPSERIAL
test_openmp-simd-3_159:
  build:
    cflags: "-O  -fopenmp -fno-openmp-simd -fdump-tree-original -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/openmp-simd-3.f90'
    sources:
      binary: openmp-simd-3.s
  group: GRPSERIAL
test_openmp-simd-3_36:
  build:
    cflags: "-O  -fopenmp -fno-openmp-simd -fdump-tree-original -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/openmp-simd-3.f90'
    sources:
      binary: openmp-simd-3.s
  group: GRPSERIAL
test_order-1_160:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/order-1.f90'
    sources:
      binary: order-1.s
  group: GRPSERIAL
test_order-1_37:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/order-1.f90'
    sources:
      binary: order-1.s
  group: GRPSERIAL
test_order-2_161:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/order-2.f90'
    sources:
      binary: order-2.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected")[^\n]*\n?)+'
test_order-2_38:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/order-2.f90'
    sources:
      binary: order-2.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected")[^\n]*\n?)+'
test_pr26224_162:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr26224.f'
    sources:
      binary: pr26224.s
  group: GRPSERIAL
test_pr26224_39:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr26224.f'
    sources:
      binary: pr26224.s
  group: GRPSERIAL
test_pr29759_163:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr29759.f90'
    sources:
      binary: pr29759.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable|Invalid
          character")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable|Invalid
          character")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable|Invalid
          character")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable|Invalid
          character")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected")[^\n]*\n?)+'
test_pr29759_40:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr29759.f90'
    sources:
      binary: pr29759.s
  group: GRPSERIAL
  validate:
    match:
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable|Invalid
          character")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable|Invalid
          character")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable|Invalid
          character")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable|Invalid
          character")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected")[^\n]*\n?)+'
test_pr33439_164:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr33439.f90'
    sources:
      binary: pr33439.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in enclosing \''parallel\''")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in enclosing \''parallel\''")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
test_pr33439_41:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr33439.f90'
    sources:
      binary: pr33439.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in enclosing \''parallel\''")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in enclosing \''parallel\''")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
test_pr35786-1_165:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr35786-1.f90'
    sources:
      binary: pr35786-1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
test_pr35786-1_42:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr35786-1.f90'
    sources:
      binary: pr35786-1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L66:
        expect: true
        expr: '(^|\n)([^\n]+:66:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L68:
        expect: true
        expr: '(^|\n)([^\n]+:68:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
test_pr35786-2_166:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr35786-2.f90'
    sources:
      binary: pr35786-2.s
  group: GRPSERIAL
test_pr35786-2_43:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr35786-2.f90'
    sources:
      binary: pr35786-2.s
  group: GRPSERIAL
test_pr36726_167:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr36726.f90'
    sources:
      binary: pr36726.s
  group: GRPSERIAL
test_pr36726_44:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr36726.f90'
    sources:
      binary: pr36726.s
  group: GRPSERIAL
test_pr39152_168:
  build:
    cflags: "-O  -march=i486 -fopenmp -mavx -O3 -funroll-all-loops\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr39152.f90'
    sources:
      binary: pr39152.s
  group: GRPSERIAL
test_pr39152_45:
  build:
    cflags: "-O  -march=i486 -fopenmp -mavx -O3 -funroll-all-loops\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr39152.f90'
    sources:
      binary: pr39152.s
  group: GRPSERIAL
test_pr39354_169:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr39354.f90'
    sources:
      binary: pr39354.s
  group: GRPSERIAL
test_pr39354_46:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr39354.f90'
    sources:
      binary: pr39354.s
  group: GRPSERIAL
test_pr40878-1_170:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr40878-1.f90'
    sources:
      binary: pr40878-1.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Constant expression
          required")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not constant
          positive integer")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not constant
          positive integer")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not constant
          positive integer")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not constant
          positive integer")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Constant expression
          required")[^\n]*\n?)+'
test_pr40878-1_47:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr40878-1.f90'
    sources:
      binary: pr40878-1.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Constant expression
          required")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not constant
          positive integer")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not constant
          positive integer")[^\n]*\n?)+'
      L48:
        expect: true
        expr: '(^|\n)([^\n]+:48:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not constant
          positive integer")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not constant
          positive integer")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Constant expression
          required")[^\n]*\n?)+'
test_pr40878-2_171:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr40878-2.f90'
    sources:
      binary: pr40878-2.s
  group: GRPSERIAL
test_pr40878-2_48:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr40878-2.f90'
    sources:
      binary: pr40878-2.s
  group: GRPSERIAL
test_pr41344_172:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr41344.f'
    sources:
      binary: pr41344.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid (exit|branch)")[^\n]*\n?)+'
test_pr41344_49:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr41344.f'
    sources:
      binary: pr41344.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("invalid (exit|branch)")[^\n]*\n?)+'
test_pr43337_173:
  build:
    cflags: "-O  -fopenmp -O2 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr43337.f90'
    sources:
      binary: pr43337.s
  group: GRPSERIAL
test_pr43337_50:
  build:
    cflags: "-O  -fopenmp -O2 -g\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr43337.f90'
    sources:
      binary: pr43337.s
  group: GRPSERIAL
test_pr43711_174:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr43711.f90'
    sources:
      binary: pr43711.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected junk")[^\n]*\n?)+'
test_pr43711_51:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr43711.f90'
    sources:
      binary: pr43711.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected junk")[^\n]*\n?)+'
test_pr43836_175:
  build:
    cflags: "-O  -fopenmp -fexceptions -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr43836.f90'
    sources:
      binary: pr43836.s
  group: GRPSERIAL
test_pr43836_52:
  build:
    cflags: "-O  -fopenmp -fexceptions -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr43836.f90'
    sources:
      binary: pr43836.s
  group: GRPSERIAL
test_pr44036-1_176:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr44036-1.f90'
    sources:
      binary: pr44036-1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
test_pr44036-1_53:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr44036-1.f90'
    sources:
      binary: pr44036-1.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
test_pr44036-2_177:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr44036-2.f90'
    sources:
      binary: pr44036-2.s
  group: GRPSERIAL
test_pr44036-2_54:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr44036-2.f90'
    sources:
      binary: pr44036-2.s
  group: GRPSERIAL
test_pr44036-3_178:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr44036-3.f90'
    sources:
      binary: pr44036-3.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
test_pr44036-3_55:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr44036-3.f90'
    sources:
      binary: pr44036-3.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
test_pr44536_179:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr44536.f90'
    sources:
      binary: pr44536.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
test_pr44536_56:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr44536.f90'
    sources:
      binary: pr44536.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
test_pr44847_180:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr44847.f90'
    sources:
      binary: pr44847.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("CYCLE statement")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("CYCLE statement")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("EXIT statement")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("EXIT statement")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("EXIT statement")[^\n]*\n?)+'
test_pr44847_57:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr44847.f90'
    sources:
      binary: pr44847.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("CYCLE statement")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("CYCLE statement")[^\n]*\n?)+'
      L50:
        expect: true
        expr: '(^|\n)([^\n]+:50:[^\n]*[0-9]+: (fatal )?error:[^\n]*("EXIT statement")[^\n]*\n?)+'
      L60:
        expect: true
        expr: '(^|\n)([^\n]+:60:[^\n]*[0-9]+: (fatal )?error:[^\n]*("EXIT statement")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("EXIT statement")[^\n]*\n?)+'
test_pr45172_181:
  build:
    cflags: "-O  -O -fopenmp -fexceptions\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr45172.f90'
    sources:
      binary: pr45172.s
  group: GRPSERIAL
test_pr45172_58:
  build:
    cflags: "-O  -O -fopenmp -fexceptions\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr45172.f90'
    sources:
      binary: pr45172.s
  group: GRPSERIAL
test_pr45595_182:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr45595.f90'
    sources:
      binary: pr45595.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not enough DO
          loops")[^\n]*\n?)+'
test_pr45595_59:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr45595.f90'
    sources:
      binary: pr45595.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not enough DO
          loops")[^\n]*\n?)+'
test_pr45597_183:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr45597.f90'
    sources:
      binary: pr45597.s
  group: GRPSERIAL
test_pr45597_60:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr45597.f90'
    sources:
      binary: pr45597.s
  group: GRPSERIAL
test_pr47331_184:
  build:
    cflags: "-O  -fopenmp -fwhole-file\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr47331.f90'
    sources:
      binary: pr47331.s
  group: GRPSERIAL
test_pr47331_61:
  build:
    cflags: "-O  -fopenmp -fwhole-file\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr47331.f90'
    sources:
      binary: pr47331.s
  group: GRPSERIAL
test_pr48117_185:
  build:
    cflags: "-O  -O2 -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr48117.f90'
    sources:
      binary: pr48117.s
  group: GRPSERIAL
test_pr48117_62:
  build:
    cflags: "-O  -O2 -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr48117.f90'
    sources:
      binary: pr48117.s
  group: GRPSERIAL
test_pr48611_186:
  build:
    cflags: "-O  -Os -fopenmp -fexceptions -fno-tree-ccp -fno-tree-copy-prop\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr48611.f90'
    sources:
      binary: pr48611.s
  group: GRPSERIAL
test_pr48611_63:
  build:
    cflags: "-O  -Os -fopenmp -fexceptions -fno-tree-ccp -fno-tree-copy-prop\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr48611.f90'
    sources:
      binary: pr48611.s
  group: GRPSERIAL
test_pr48794-2_187:
  build:
    cflags: "-O  -Os -fopenmp -fexceptions -fno-tree-ccp -fno-tree-copy-prop\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr48794-2.f90'
    sources:
      binary: pr48794-2.s
  group: GRPSERIAL
test_pr48794-2_64:
  build:
    cflags: "-O  -Os -fopenmp -fexceptions -fno-tree-ccp -fno-tree-copy-prop\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr48794-2.f90'
    sources:
      binary: pr48794-2.s
  group: GRPSERIAL
test_pr48794_188:
  build:
    cflags: "-O  -Os -fopenmp -fexceptions -fno-tree-ccp -fno-tree-copy-prop\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr48794.f90'
    sources:
      binary: pr48794.s
  group: GRPSERIAL
test_pr48794_65:
  build:
    cflags: "-O  -Os -fopenmp -fexceptions -fno-tree-ccp -fno-tree-copy-prop\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr48794.f90'
    sources:
      binary: pr48794.s
  group: GRPSERIAL
test_pr51089_189:
  build:
    cflags: "-O  -O -fexceptions -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr51089.f90'
    sources:
      binary: pr51089.s
  group: GRPSERIAL
test_pr51089_66:
  build:
    cflags: "-O  -O -fexceptions -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr51089.f90'
    sources:
      binary: pr51089.s
  group: GRPSERIAL
test_pr52531_190:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr52531.f90'
    sources:
      binary: pr52531.s
  group: GRPSERIAL
test_pr52531_67:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr52531.f90'
    sources:
      binary: pr52531.s
  group: GRPSERIAL
test_pr56052_191:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr56052.f90'
    sources:
      binary: pr56052.s
  group: GRPSERIAL
test_pr56052_68:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr56052.f90'
    sources:
      binary: pr56052.s
  group: GRPSERIAL
test_pr57089_192:
  build:
    cflags: "-O  -O -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr57089.f90'
    sources:
      binary: pr57089.s
  group: GRPSERIAL
test_pr57089_69:
  build:
    cflags: "-O  -O -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr57089.f90'
    sources:
      binary: pr57089.s
  group: GRPSERIAL
test_pr59467_193:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr59467.f90'
    sources:
      binary: pr59467.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not threadprivate
          or private in outer context")[^\n]*\n?)+'
test_pr59467_70:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr59467.f90'
    sources:
      binary: pr59467.s
  group: GRPSERIAL
  validate:
    match:
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not threadprivate
          or private in outer context")[^\n]*\n?)+'
test_pr59488-1_194:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr59488-1.f90'
    sources:
      binary: pr59488-1.s
  group: GRPSERIAL
test_pr59488-1_71:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr59488-1.f90'
    sources:
      binary: pr59488-1.s
  group: GRPSERIAL
test_pr59488-2_195:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr59488-2.f90'
    sources:
      binary: pr59488-2.s
  group: GRPSERIAL
test_pr59488-2_72:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr59488-2.f90'
    sources:
      binary: pr59488-2.s
  group: GRPSERIAL
test_pr62131_196:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr62131.f90'
    sources:
      binary: pr62131.s
  group: GRPSERIAL
test_pr62131_73:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr62131.f90'
    sources:
      binary: pr62131.s
  group: GRPSERIAL
test_pr66633_197:
  build:
    cflags: "-O  -O0 -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr66633.f90'
    sources:
      binary: pr66633.s
  group: GRPSERIAL
test_pr66633_74:
  build:
    cflags: "-O  -O0 -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr66633.f90'
    sources:
      binary: pr66633.s
  group: GRPSERIAL
test_pr69128_198:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr69128.f90'
    sources:
      binary: pr69128.s
  group: GRPSERIAL
test_pr69128_75:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr69128.f90'
    sources:
      binary: pr69128.s
  group: GRPSERIAL
test_pr69183_199:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr69183.f90'
    sources:
      binary: pr69183.s
  group: GRPSERIAL
test_pr69183_76:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr69183.f90'
    sources:
      binary: pr69183.s
  group: GRPSERIAL
test_pr69281_200:
  build:
    cflags: "-O  -fopenmp -Wno-hsa -fstack-arrays -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr69281.f90'
    sources:
      binary: pr69281.s
  group: GRPSERIAL
test_pr69281_77:
  build:
    cflags: "-O  -fopenmp -Wno-hsa -fstack-arrays -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr69281.f90'
    sources:
      binary: pr69281.s
  group: GRPSERIAL
test_pr70855_201:
  build:
    cflags: "-O  -fopenmp -Wno-hsa -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr70855.f90'
    sources:
      binary: pr70855.s
  group: GRPSERIAL
test_pr70855_78:
  build:
    cflags: "-O  -fopenmp -Wno-hsa -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr70855.f90'
    sources:
      binary: pr70855.s
  group: GRPSERIAL
test_pr71687_202:
  build:
    cflags: "-O  -fopenmp -Wno-hsa -fstack-arrays -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr71687.f90'
    sources:
      binary: pr71687.s
  group: GRPSERIAL
test_pr71687_79:
  build:
    cflags: "-O  -fopenmp -Wno-hsa -fstack-arrays -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr71687.f90'
    sources:
      binary: pr71687.s
  group: GRPSERIAL
test_pr71704_203:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr71704.f90'
    sources:
      binary: pr71704.s
  group: GRPSERIAL
test_pr71704_80:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr71704.f90'
    sources:
      binary: pr71704.s
  group: GRPSERIAL
test_pr71705_204:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr71705.f90'
    sources:
      binary: pr71705.s
  group: GRPSERIAL
test_pr71705_81:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr71705.f90'
    sources:
      binary: pr71705.s
  group: GRPSERIAL
test_pr71758_205:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr71758.f90'
    sources:
      binary: pr71758.s
  group: GRPSERIAL
test_pr71758_82:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr71758.f90'
    sources:
      binary: pr71758.s
  group: GRPSERIAL
test_pr72716_206:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr72716.f90'
    sources:
      binary: pr72716.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("statement is not
          allowed inside of BLOCK DATA")[^\n]*\n?)+'
test_pr72716_83:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr72716.f90'
    sources:
      binary: pr72716.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("statement is not
          allowed inside of BLOCK DATA")[^\n]*\n?)+'
test_pr72744_207:
  build:
    cflags: "-O  -fopenmp -Wno-hsa -Ofast\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr72744.f90'
    sources:
      binary: pr72744.s
  group: GRPSERIAL
test_pr72744_84:
  build:
    cflags: "-O  -fopenmp -Wno-hsa -Ofast\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr72744.f90'
    sources:
      binary: pr72744.s
  group: GRPSERIAL
test_pr77352_208:
  build:
    cflags: "-O  -fopenmp -Wno-hsa -fstack-arrays -O2 -fopenacc\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr77352.f90'
    sources:
      binary: pr77352.s
  group: GRPSERIAL
test_pr77352_85:
  build:
    cflags: "-O  -fopenmp -Wno-hsa -fstack-arrays -O2 -fopenacc\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr77352.f90'
    sources:
      binary: pr77352.s
  group: GRPSERIAL
test_pr77374_209:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr77374.f08'
    sources:
      binary: pr77374.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unexpected")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must have the
          pointer attribute")[^\n]*\n?)+'
test_pr77374_86:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr77374.f08'
    sources:
      binary: pr77374.s
  group: GRPSERIAL
  validate:
    match:
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("unexpected")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must have the
          pointer attribute")[^\n]*\n?)+'
test_pr77500_210:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr77500.f90'
    sources:
      binary: pr77500.s
  group: GRPSERIAL
test_pr77500_87:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr77500.f90'
    sources:
      binary: pr77500.s
  group: GRPSERIAL
test_pr77516_211:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr77516.f90'
    sources:
      binary: pr77516.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("must be positive")[^\n]*\n?)+'
test_pr77516_88:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr77516.f90'
    sources:
      binary: pr77516.s
  group: GRPSERIAL
  validate:
    match:
      L7:
        expect: true
        expr: '(^|\n)([^\n]+(:7:)[^\n]*[0-9]+: warning:[^\n]*("must be positive")[^\n]*\n?)+'
test_pr77665_212:
  build:
    cflags: "-O  -fopenmp -Wno-hsa -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr77665.f90'
    sources:
      binary: pr77665.s
  group: GRPSERIAL
test_pr77665_89:
  build:
    cflags: "-O  -fopenmp -Wno-hsa -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr77665.f90'
    sources:
      binary: pr77665.s
  group: GRPSERIAL
test_pr77666_213:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr77666.f90'
    sources:
      binary: pr77666.s
  group: GRPSERIAL
test_pr77666_90:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr77666.f90'
    sources:
      binary: pr77666.s
  group: GRPSERIAL
test_pr77973_214:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr77973.f90'
    sources:
      binary: pr77973.s
  group: GRPSERIAL
test_pr77973_91:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr77973.f90'
    sources:
      binary: pr77973.s
  group: GRPSERIAL
test_pr78026_215:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr78026.f03'
    sources:
      binary: pr78026.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Selector shall
          be polymorphic in SELECT TYPE statement")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected !.OMP
          DECLARE SIMD statement")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("should refer to
          containing procedure")[^\n]*\n?)+'
test_pr78026_92:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr78026.f03'
    sources:
      binary: pr78026.s
  group: GRPSERIAL
  validate:
    match:
      L2:
        expect: true
        expr: '(^|\n)([^\n]+:2:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Selector shall
          be polymorphic in SELECT TYPE statement")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected !.OMP
          DECLARE SIMD statement")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("should refer to
          containing procedure")[^\n]*\n?)+'
test_pr78298_216:
  build:
    cflags: "-O  -fopenmp -Wno-hsa -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr78298.f90'
    sources:
      binary: pr78298.s
  group: GRPSERIAL
test_pr78298_93:
  build:
    cflags: "-O  -fopenmp -Wno-hsa -O2\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr78298.f90'
    sources:
      binary: pr78298.s
  group: GRPSERIAL
test_pr78299_217:
  build:
    cflags: "-O  -fopenmp -Wno-hsa -fcheck=bounds\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr78299.f90'
    sources:
      binary: pr78299.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("is out of bounds")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("is out of bounds")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("is out of bounds")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("is out of bounds")[^\n]*\n?)+'
test_pr78299_94:
  build:
    cflags: "-O  -fopenmp -Wno-hsa -fcheck=bounds\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr78299.f90'
    sources:
      binary: pr78299.s
  group: GRPSERIAL
  validate:
    match:
      L16:
        expect: true
        expr: '(^|\n)([^\n]+(:16:)[^\n]*[0-9]+: warning:[^\n]*("is out of bounds")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+(:27:)[^\n]*[0-9]+: warning:[^\n]*("is out of bounds")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+(:38:)[^\n]*[0-9]+: warning:[^\n]*("is out of bounds")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+(:49:)[^\n]*[0-9]+: warning:[^\n]*("is out of bounds")[^\n]*\n?)+'
test_pr78866-1_218:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr78866-1.f90'
    sources:
      binary: pr78866-1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Assumed size
          array")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Assumed size
          array")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("upper bound of
          assumed size array section")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a proper
          array section")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Assumed size array")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Assumed size array")[^\n]*\n?)+'
test_pr78866-1_95:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr78866-1.f90'
    sources:
      binary: pr78866-1.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Assumed size
          array")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Assumed size
          array")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("upper bound of
          assumed size array section")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not a proper
          array section")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Assumed size array")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Assumed size array")[^\n]*\n?)+'
test_pr78866-2_219:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr78866-2.f90'
    sources:
      binary: pr78866-2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("implicit mapping
          of assumed size array")[^\n]*\n?)+'
test_pr78866-2_96:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr78866-2.f90'
    sources:
      binary: pr78866-2.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("implicit mapping
          of assumed size array")[^\n]*\n?)+'
test_pr79154-1_220:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr79154-1.f90'
    sources:
      binary: pr79154-1.s
  group: GRPSERIAL
test_pr79154-1_97:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr79154-1.f90'
    sources:
      binary: pr79154-1.s
  group: GRPSERIAL
test_pr79154-2_221:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr79154-2.f90'
    sources:
      binary: pr79154-2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not appear
          in PURE or ELEMENTAL")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not appear
          in PURE or ELEMENTAL")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not appear
          in PURE or ELEMENTAL")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not appear
          in PURE or ELEMENTAL")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not appear
          in PURE or ELEMENTAL")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not appear
          in PURE or ELEMENTAL")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not appear
          in PURE or ELEMENTAL")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not appear
          in PURE or ELEMENTAL")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not appear
          in PURE or ELEMENTAL")[^\n]*\n?)+'
test_pr79154-2_98:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr79154-2.f90'
    sources:
      binary: pr79154-2.s
  group: GRPSERIAL
  validate:
    match:
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not appear
          in PURE or ELEMENTAL")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not appear
          in PURE or ELEMENTAL")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not appear
          in PURE or ELEMENTAL")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not appear
          in PURE or ELEMENTAL")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not appear
          in PURE or ELEMENTAL")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not appear
          in PURE or ELEMENTAL")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not appear
          in PURE or ELEMENTAL")[^\n]*\n?)+'
      L43:
        expect: true
        expr: '(^|\n)([^\n]+:43:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not appear
          in PURE or ELEMENTAL")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("may not appear
          in PURE or ELEMENTAL")[^\n]*\n?)+'
test_pr80918_222:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr80918.f90'
    sources:
      binary: pr80918.s
  group: GRPSERIAL
test_pr80918_99:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr80918.f90'
    sources:
      binary: pr80918.s
  group: GRPSERIAL
test_proc_ptr_1_100:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/proc_ptr_1.f90'
    sources:
      binary: proc_ptr_1.s
  group: GRPSERIAL
test_proc_ptr_1_223:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/proc_ptr_1.f90'
    sources:
      binary: proc_ptr_1.s
  group: GRPSERIAL
test_proc_ptr_2_101:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/proc_ptr_2.f90'
    sources:
      binary: proc_ptr_2.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Procedure pointer|not
          found")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be INTEGER")[^\n]*\n?)+'
test_proc_ptr_2_224:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/proc_ptr_2.f90'
    sources:
      binary: proc_ptr_2.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Procedure pointer|not
          found")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+:8:[^\n]*[0-9]+: (fatal )?error:[^\n]*("must be INTEGER")[^\n]*\n?)+'
test_reduction1_102:
  build:
    cflags: "-O  -fopenmp -fmax-errors=100\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/reduction1.f90'
    sources:
      binary: reduction1.s
  group: GRPSERIAL
  validate:
    match:
      L101:
        expect: true
        expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+:103:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+:113:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+:115:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+:121:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+:127:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Syntax error")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("THREADPRIVATE
          object")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("POINTER object")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Assumed size")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+:85:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+:87:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+:97:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+:99:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
test_reduction1_225:
  build:
    cflags: "-O  -fopenmp -fmax-errors=100\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/reduction1.f90'
    sources:
      binary: reduction1.s
  group: GRPSERIAL
  validate:
    match:
      L101:
        expect: true
        expr: '(^|\n)([^\n]+:101:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L103:
        expect: true
        expr: '(^|\n)([^\n]+:103:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L105:
        expect: true
        expr: '(^|\n)([^\n]+:105:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L107:
        expect: true
        expr: '(^|\n)([^\n]+:107:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L109:
        expect: true
        expr: '(^|\n)([^\n]+:109:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L111:
        expect: true
        expr: '(^|\n)([^\n]+:111:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L113:
        expect: true
        expr: '(^|\n)([^\n]+:113:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L115:
        expect: true
        expr: '(^|\n)([^\n]+:115:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L117:
        expect: true
        expr: '(^|\n)([^\n]+:117:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L119:
        expect: true
        expr: '(^|\n)([^\n]+:119:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+:121:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L125:
        expect: true
        expr: '(^|\n)([^\n]+:125:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L127:
        expect: true
        expr: '(^|\n)([^\n]+:127:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L129:
        expect: true
        expr: '(^|\n)([^\n]+:129:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE
          REDUCTION\\[^\\n\\r\\]*not found for type")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Syntax error")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("THREADPRIVATE
          object")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("POINTER object")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Assumed size")[^\n]*\n?)+'
      L63:
        expect: true
        expr: '(^|\n)([^\n]+:63:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L67:
        expect: true
        expr: '(^|\n)([^\n]+:67:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L75:
        expect: true
        expr: '(^|\n)([^\n]+:75:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L79:
        expect: true
        expr: '(^|\n)([^\n]+:79:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L83:
        expect: true
        expr: '(^|\n)([^\n]+:83:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+:85:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L87:
        expect: true
        expr: '(^|\n)([^\n]+:87:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L89:
        expect: true
        expr: '(^|\n)([^\n]+:89:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L95:
        expect: true
        expr: '(^|\n)([^\n]+:95:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L97:
        expect: true
        expr: '(^|\n)([^\n]+:97:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
      L99:
        expect: true
        expr: '(^|\n)([^\n]+:99:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found for type")[^\n]*\n?)+'
test_reduction2_103:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/reduction2.f90'
    sources:
      binary: reduction2.s
  group: GRPSERIAL
test_reduction2_226:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/reduction2.f90'
    sources:
      binary: reduction2.s
  group: GRPSERIAL
test_reduction3_104:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/reduction3.f90'
    sources:
      binary: reduction3.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found")[^\n]*\n?)+'
test_reduction3_227:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/reduction3.f90'
    sources:
      binary: reduction3.s
  group: GRPSERIAL
  validate:
    match:
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found")[^\n]*\n?)+'
      L46:
        expect: true
        expr: '(^|\n)([^\n]+:46:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found")[^\n]*\n?)+'
      L61:
        expect: true
        expr: '(^|\n)([^\n]+:61:[^\n]*[0-9]+: (fatal )?error:[^\n]*("OMP DECLARE REDUCTION\\[^\\n\\r\\]*not
          found")[^\n]*\n?)+'
test_schedule-1_105:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/schedule-1.f90'
    sources:
      binary: schedule-1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("must be positive")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("must be positive")[^\n]*\n?)+'
test_schedule-1_228:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/schedule-1.f90'
    sources:
      binary: schedule-1.s
  group: GRPSERIAL
  validate:
    match:
      L5:
        expect: true
        expr: '(^|\n)([^\n]+(:5:)[^\n]*[0-9]+: warning:[^\n]*("must be positive")[^\n]*\n?)+'
      L8:
        expect: true
        expr: '(^|\n)([^\n]+(:8:)[^\n]*[0-9]+: warning:[^\n]*("must be positive")[^\n]*\n?)+'
test_sharing-1_106:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/sharing-1.f90'
    sources:
      binary: sharing-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
test_sharing-1_229:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/sharing-1.f90'
    sources:
      binary: sharing-1.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
test_sharing-2_107:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/sharing-2.f90'
    sources:
      binary: sharing-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
test_sharing-2_230:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/sharing-2.f90'
    sources:
      binary: sharing-2.s
  group: GRPSERIAL
  validate:
    match:
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
      L31:
        expect: true
        expr: '(^|\n)([^\n]+:31:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
      L64:
        expect: true
        expr: '(^|\n)([^\n]+:64:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
      L71:
        expect: true
        expr: '(^|\n)([^\n]+:71:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L72:
        expect: true
        expr: '(^|\n)([^\n]+:72:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified
          in")[^\n]*\n?)+'
test_sharing-3_108:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/sharing-3.f90'
    sources:
      binary: sharing-3.s
  group: GRPSERIAL
  validate:
    match:
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified")[^\n]*\n?)+'
test_sharing-3_231:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/sharing-3.f90'
    sources:
      binary: sharing-3.s
  group: GRPSERIAL
  validate:
    match:
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("enclosing \''parallel\''")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified")[^\n]*\n?)+'
      L33:
        expect: true
        expr: '(^|\n)([^\n]+:33:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("not specified")[^\n]*\n?)+'
test_sharing-4_109:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/sharing-4.f90'
    sources:
      binary: sharing-4.s
  group: GRPSERIAL
test_sharing-4_232:
  build:
    cflags: "-O  -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/sharing-4.f90'
    sources:
      binary: sharing-4.s
  group: GRPSERIAL
test_target1_110:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/target1.f90'
    sources:
      binary: target1.s
  group: GRPSERIAL
test_target1_233:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/target1.f90'
    sources:
      binary: target1.s
  group: GRPSERIAL
test_target2_111:
  build:
    cflags: "-O  -fopenmp -Wno-hsa -ffree-line-length-160\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/target2.f90'
    sources:
      binary: target2.s
  group: GRPSERIAL
test_target2_234:
  build:
    cflags: "-O  -fopenmp -Wno-hsa -ffree-line-length-160\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/target2.f90'
    sources:
      binary: target2.s
  group: GRPSERIAL
test_target3_112:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/target3.f90'
    sources:
      binary: target3.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*(".target. construct
          inside of .target. region")[^\n]*\n?)+'
test_target3_235:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/target3.f90'
    sources:
      binary: target3.s
  group: GRPSERIAL
  validate:
    match:
      L6:
        expect: true
        expr: '(^|\n)([^\n]+(:6:)[^\n]*[0-9]+: warning:[^\n]*(".target. construct
          inside of .target. region")[^\n]*\n?)+'
test_udr1_113:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/udr1.f90'
    sources:
      binary: udr1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("foo not found")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be used
          as a defined operator")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP directive")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Invalid character
          in name")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Invalid character
          in name")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Variable other
          than OMP_OUT or OMP_IN used in combiner")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Variable other
          than OMP_PRIV or OMP_ORIG used in INITIALIZER clause")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Invalid operator
          for")[^\n]*\n?)+'
test_udr1_236:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/udr1.f90'
    sources:
      binary: udr1.s
  group: GRPSERIAL
  validate:
    match:
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("foo not found")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot be used
          as a defined operator")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP directive")[^\n]*\n?)+'
      L28:
        expect: true
        expr: '(^|\n)([^\n]+:28:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Invalid character
          in name")[^\n]*\n?)+'
      L30:
        expect: true
        expr: '(^|\n)([^\n]+:30:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Invalid character
          in name")[^\n]*\n?)+'
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Variable other
          than OMP_OUT or OMP_IN used in combiner")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Variable other
          than OMP_PRIV or OMP_ORIG used in INITIALIZER clause")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Invalid operator
          for")[^\n]*\n?)+'
test_udr2_114:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/udr2.f90'
    sources:
      binary: udr2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP directive")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Operands of logical
          operator")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP directive")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("One of actual
          subroutine arguments in INITIALIZER clause")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("which is not
          consistent with the CALL")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("which is not
          consistent with the CALL")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("which is not
          consistent with the CALL")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP directive")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Variable other
          than OMP_OUT or OMP_IN used in combiner")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP directive")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Variable other
          than OMP_PRIV or OMP_ORIG used in INITIALIZER clause")[^\n]*\n?)+'
test_udr2_237:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/udr2.f90'
    sources:
      binary: udr2.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP directive")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Operands of logical
          operator")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP directive")[^\n]*\n?)+'
      L26:
        expect: true
        expr: '(^|\n)([^\n]+:26:[^\n]*[0-9]+: (fatal )?error:[^\n]*("One of actual
          subroutine arguments in INITIALIZER clause")[^\n]*\n?)+'
      L27:
        expect: true
        expr: '(^|\n)([^\n]+:27:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L29:
        expect: true
        expr: '(^|\n)([^\n]+:29:[^\n]*[0-9]+: (fatal )?error:[^\n]*("is not a variable")[^\n]*\n?)+'
      L32:
        expect: true
        expr: '(^|\n)([^\n]+:32:[^\n]*[0-9]+: (fatal )?error:[^\n]*("which is not
          consistent with the CALL")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("which is not
          consistent with the CALL")[^\n]*\n?)+'
      L39:
        expect: true
        expr: '(^|\n)([^\n]+:39:[^\n]*[0-9]+: (fatal )?error:[^\n]*("which is not
          consistent with the CALL")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP directive")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Variable other
          than OMP_OUT or OMP_IN used in combiner")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP directive")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Variable other
          than OMP_PRIV or OMP_ORIG used in INITIALIZER clause")[^\n]*\n?)+'
test_udr3_115:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/udr3.f90'
    sources:
      binary: udr3.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Previous !.OMP
          DECLARE REDUCTION")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of !.OMP DECLARE REDUCTION")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of !.OMP DECLARE REDUCTION|Previous")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of !.OMP DECLARE REDUCTION|Previous")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Previous !.OMP
          DECLARE REDUCTION")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of !.OMP DECLARE REDUCTION")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Previous !.OMP
          DECLARE REDUCTION")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of !.OMP DECLARE REDUCTION")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of !.OMP DECLARE REDUCTION|Previous")[^\n]*\n?)+'
test_udr3_238:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/udr3.f90'
    sources:
      binary: udr3.s
  group: GRPSERIAL
  validate:
    match:
      L10:
        expect: true
        expr: '(^|\n)([^\n]+:10:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Previous !.OMP
          DECLARE REDUCTION")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of !.OMP DECLARE REDUCTION")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of !.OMP DECLARE REDUCTION|Previous")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of !.OMP DECLARE REDUCTION|Previous")[^\n]*\n?)+'
      L22:
        expect: true
        expr: '(^|\n)([^\n]+:22:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Previous !.OMP
          DECLARE REDUCTION")[^\n]*\n?)+'
      L24:
        expect: true
        expr: '(^|\n)([^\n]+:24:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of !.OMP DECLARE REDUCTION")[^\n]*\n?)+'
      L59:
        expect: true
        expr: '(^|\n)([^\n]+:59:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Previous !.OMP
          DECLARE REDUCTION")[^\n]*\n?)+'
      L62:
        expect: true
        expr: '(^|\n)([^\n]+:62:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of !.OMP DECLARE REDUCTION")[^\n]*\n?)+'
      L65:
        expect: true
        expr: '(^|\n)([^\n]+:65:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of !.OMP DECLARE REDUCTION|Previous")[^\n]*\n?)+'
test_udr4_116:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/udr4.f90'
    sources:
      binary: udr4.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Implicitly declared
          subroutine omp_priv")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Implicitly declared
          subroutine bar used")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Implicitly declared
          subroutine omp_out used")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Implicitly declared
          subroutine bar used")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Implicitly declared
          function omp_orig used")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Implicitly declared
          function foo used")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Implicitly declared
          function omp_in used")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Implicitly declared
          function baz used")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP directive")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Subroutine call
          with alternate returns in combiner")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Subroutine call
          with alternate returns in INITIALIZER clause")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP directive")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot appear
          in the expression|not constant")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP directive")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP directive")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Missing INITIALIZER
          clause for !.OMP DECLARE REDUCTION of derived type without default initializer")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected junk
          after")[^\n]*\n?)+'
test_udr4_239:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/udr4.f90'
    sources:
      binary: udr4.s
  group: GRPSERIAL
  validate:
    match:
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Implicitly declared
          subroutine omp_priv")[^\n]*\n?)+'
      L15:
        expect: true
        expr: '(^|\n)([^\n]+:15:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Implicitly declared
          subroutine bar used")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Implicitly declared
          subroutine omp_out used")[^\n]*\n?)+'
      L19:
        expect: true
        expr: '(^|\n)([^\n]+:19:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Implicitly declared
          subroutine bar used")[^\n]*\n?)+'
      L20:
        expect: true
        expr: '(^|\n)([^\n]+:20:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Implicitly declared
          function omp_orig used")[^\n]*\n?)+'
      L21:
        expect: true
        expr: '(^|\n)([^\n]+:21:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Implicitly declared
          function foo used")[^\n]*\n?)+'
      L23:
        expect: true
        expr: '(^|\n)([^\n]+:23:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Implicitly declared
          function omp_in used")[^\n]*\n?)+'
      L25:
        expect: true
        expr: '(^|\n)([^\n]+:25:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Implicitly declared
          function baz used")[^\n]*\n?)+'
      L4:
        expect: true
        expr: '(^|\n)([^\n]+:4:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP directive")[^\n]*\n?)+'
      L45:
        expect: true
        expr: '(^|\n)([^\n]+:45:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Subroutine call
          with alternate returns in combiner")[^\n]*\n?)+'
      L49:
        expect: true
        expr: '(^|\n)([^\n]+:49:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Subroutine call
          with alternate returns in INITIALIZER clause")[^\n]*\n?)+'
      L5:
        expect: true
        expr: '(^|\n)([^\n]+:5:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP directive")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("cannot appear
          in the expression|not constant")[^\n]*\n?)+'
      L6:
        expect: true
        expr: '(^|\n)([^\n]+:6:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP directive")[^\n]*\n?)+'
      L7:
        expect: true
        expr: '(^|\n)([^\n]+:7:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unclassifiable
          OpenMP directive")[^\n]*\n?)+'
      L73:
        expect: true
        expr: '(^|\n)([^\n]+:73:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Missing INITIALIZER
          clause for !.OMP DECLARE REDUCTION of derived type without default initializer")[^\n]*\n?)+'
      L9:
        expect: true
        expr: '(^|\n)([^\n]+:9:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Unexpected junk
          after")[^\n]*\n?)+'
test_udr5_117:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/udr5.f90'
    sources:
      binary: udr5.s
  group: GRPSERIAL
  validate:
    match:
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Previous !.OMP
          DECLARE REDUCTION|Ambiguous interfaces")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Ambiguous !.OMP
          DECLARE REDUCTION|Ambiguous interfaces")[^\n]*\n?)+'
test_udr5_240:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/udr5.f90'
    sources:
      binary: udr5.s
  group: GRPSERIAL
  validate:
    match:
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Previous !.OMP
          DECLARE REDUCTION|Ambiguous interfaces")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Ambiguous !.OMP
          DECLARE REDUCTION|Ambiguous interfaces")[^\n]*\n?)+'
test_udr6_118:
  build:
    cflags: "-O  -fmax-errors=1000 -fopenmp -ffree-line-length-160\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/udr6.f90'
    sources:
      binary: udr6.s
  group: GRPSERIAL
  validate:
    match:
      L104:
        expect: true
        expr: '(^|\n)([^\n]+:104:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+:128:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+:133:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L137:
        expect: true
        expr: '(^|\n)([^\n]+:137:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+:143:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+:144:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+:148:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+:149:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+:85:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
test_udr6_241:
  build:
    cflags: "-O  -fmax-errors=1000 -fopenmp -ffree-line-length-160\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/udr6.f90'
    sources:
      binary: udr6.s
  group: GRPSERIAL
  validate:
    match:
      L104:
        expect: true
        expr: '(^|\n)([^\n]+:104:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L11:
        expect: true
        expr: '(^|\n)([^\n]+:11:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L112:
        expect: true
        expr: '(^|\n)([^\n]+:112:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L12:
        expect: true
        expr: '(^|\n)([^\n]+:12:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L120:
        expect: true
        expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L128:
        expect: true
        expr: '(^|\n)([^\n]+:128:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L13:
        expect: true
        expr: '(^|\n)([^\n]+:13:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L131:
        expect: true
        expr: '(^|\n)([^\n]+:131:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L132:
        expect: true
        expr: '(^|\n)([^\n]+:132:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L133:
        expect: true
        expr: '(^|\n)([^\n]+:133:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L134:
        expect: true
        expr: '(^|\n)([^\n]+:134:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L135:
        expect: true
        expr: '(^|\n)([^\n]+:135:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L136:
        expect: true
        expr: '(^|\n)([^\n]+:136:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L137:
        expect: true
        expr: '(^|\n)([^\n]+:137:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L138:
        expect: true
        expr: '(^|\n)([^\n]+:138:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L139:
        expect: true
        expr: '(^|\n)([^\n]+:139:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L14:
        expect: true
        expr: '(^|\n)([^\n]+:14:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L142:
        expect: true
        expr: '(^|\n)([^\n]+:142:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L143:
        expect: true
        expr: '(^|\n)([^\n]+:143:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L144:
        expect: true
        expr: '(^|\n)([^\n]+:144:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L145:
        expect: true
        expr: '(^|\n)([^\n]+:145:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L146:
        expect: true
        expr: '(^|\n)([^\n]+:146:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L147:
        expect: true
        expr: '(^|\n)([^\n]+:147:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L148:
        expect: true
        expr: '(^|\n)([^\n]+:148:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L149:
        expect: true
        expr: '(^|\n)([^\n]+:149:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L150:
        expect: true
        expr: '(^|\n)([^\n]+:150:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L16:
        expect: true
        expr: '(^|\n)([^\n]+:16:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L17:
        expect: true
        expr: '(^|\n)([^\n]+:17:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L36:
        expect: true
        expr: '(^|\n)([^\n]+:36:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L38:
        expect: true
        expr: '(^|\n)([^\n]+:38:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L41:
        expect: true
        expr: '(^|\n)([^\n]+:41:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L52:
        expect: true
        expr: '(^|\n)([^\n]+:52:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L53:
        expect: true
        expr: '(^|\n)([^\n]+:53:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L54:
        expect: true
        expr: '(^|\n)([^\n]+:54:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L55:
        expect: true
        expr: '(^|\n)([^\n]+:55:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L57:
        expect: true
        expr: '(^|\n)([^\n]+:57:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L58:
        expect: true
        expr: '(^|\n)([^\n]+:58:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L69:
        expect: true
        expr: '(^|\n)([^\n]+:69:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L77:
        expect: true
        expr: '(^|\n)([^\n]+:77:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L85:
        expect: true
        expr: '(^|\n)([^\n]+:85:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Redefinition
          of predefined")[^\n]*\n?)+'
test_udr7_119:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/udr7.f90'
    sources:
      binary: udr7.s
  group: GRPSERIAL
  validate:
    match:
      L80:
        expect: true
        expr: '(^|\n)([^\n]+:80:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Previous !.OMP
          DECLARE REDUCTION|Ambiguous interfaces")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Ambiguous !.OMP
          DECLARE REDUCTION|Ambiguous interfaces")[^\n]*\n?)+'
test_udr7_242:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/udr7.f90'
    sources:
      binary: udr7.s
  group: GRPSERIAL
  validate:
    match:
      L80:
        expect: true
        expr: '(^|\n)([^\n]+:80:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Previous !.OMP
          DECLARE REDUCTION|Ambiguous interfaces")[^\n]*\n?)+'
      L81:
        expect: true
        expr: '(^|\n)([^\n]+:81:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Ambiguous !.OMP
          DECLARE REDUCTION|Ambiguous interfaces")[^\n]*\n?)+'
test_udr8_120:
  build:
    cflags: "-O  -fmax-errors=1000 -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/udr8.f90'
    sources:
      binary: udr8.s
  group: GRPSERIAL
  validate:
    match:
      L120:
        expect: true
        expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*scalar and rank-1")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+:121:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*scalar and rank-1")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+:122:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*scalar and rank-1")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*scalar and rank-1")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+:167:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+:168:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+:169:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+:170:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment")[^\n]*\n?)+'
      L198:
        expect: true
        expr: '(^|\n)([^\n]+:198:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment")[^\n]*\n?)+'
      L199:
        expect: true
        expr: '(^|\n)([^\n]+:199:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+:200:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar")[^\n]*\n?)+'
      L201:
        expect: true
        expr: '(^|\n)([^\n]+:201:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment")[^\n]*\n?)+'
      L229:
        expect: true
        expr: '(^|\n)([^\n]+:229:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment")[^\n]*\n?)+'
      L230:
        expect: true
        expr: '(^|\n)([^\n]+:230:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar")[^\n]*\n?)+'
      L231:
        expect: true
        expr: '(^|\n)([^\n]+:231:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar")[^\n]*\n?)+'
      L232:
        expect: true
        expr: '(^|\n)([^\n]+:232:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment")[^\n]*\n?)+'
      L260:
        expect: true
        expr: '(^|\n)([^\n]+:260:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment")[^\n]*\n?)+'
      L261:
        expect: true
        expr: '(^|\n)([^\n]+:261:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar")[^\n]*\n?)+'
      L262:
        expect: true
        expr: '(^|\n)([^\n]+:262:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar")[^\n]*\n?)+'
      L263:
        expect: true
        expr: '(^|\n)([^\n]+:263:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment")[^\n]*\n?)+'
      L276:
        expect: true
        expr: '(^|\n)([^\n]+:276:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Different shape
          for array assignment at \\[^\\n\\r]* on dimension 1 .9 and 10")[^\n]*\n?)+'
      L277:
        expect: true
        expr: '(^|\n)([^\n]+(:277:)[^\n]*[0-9]+: warning:[^\n]*("Actual argument contains
          too few elements for dummy argument \\[^\\n\\r]* .9/10")[^\n]*\n?)+'
      L278:
        expect: true
        expr: '(^|\n)([^\n]+(:278:)[^\n]*[0-9]+: warning:[^\n]*("Actual argument contains
          too few elements for dummy argument \\[^\\n\\r]* .9/10")[^\n]*\n?)+'
      L279:
        expect: true
        expr: '(^|\n)([^\n]+(:279:)[^\n]*[0-9]+: warning:[^\n]*("Actual argument contains
          too few elements for dummy argument \\[^\\n\\r]* .9/10")[^\n]*\n?)+'
      L280:
        expect: true
        expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Different shape
          for array assignment at \\[^\\n\\r]* on dimension 1 .9 and 10")[^\n]*\n?)+'
      L281:
        expect: true
        expr: '(^|\n)([^\n]+(:281:)[^\n]*[0-9]+: warning:[^\n]*("Actual argument contains
          too few elements for dummy argument \\[^\\n\\r]* .9/10")[^\n]*\n?)+'
      L293:
        expect: true
        expr: '(^|\n)([^\n]+:293:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Actual argument
          for \\[^\\n\\r]* must be ALLOCATABLE")[^\n]*\n?)+'
      L294:
        expect: true
        expr: '(^|\n)([^\n]+:294:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Actual argument
          for \\[^\\n\\r]* must be ALLOCATABLE")[^\n]*\n?)+'
      L295:
        expect: true
        expr: '(^|\n)([^\n]+:295:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Actual argument
          for \\[^\\n\\r]* must be ALLOCATABLE")[^\n]*\n?)+'
      L296:
        expect: true
        expr: '(^|\n)([^\n]+:296:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Actual argument
          for \\[^\\n\\r]* must be ALLOCATABLE")[^\n]*\n?)+'
      L308:
        expect: true
        expr: '(^|\n)([^\n]+:308:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment")[^\n]*\n?)+'
      L309:
        expect: true
        expr: '(^|\n)([^\n]+:309:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar")[^\n]*\n?)+'
      L310:
        expect: true
        expr: '(^|\n)([^\n]+:310:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar")[^\n]*\n?)+'
      L311:
        expect: true
        expr: '(^|\n)([^\n]+:311:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment")[^\n]*\n?)+'
      L339:
        expect: true
        expr: '(^|\n)([^\n]+:339:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment")[^\n]*\n?)+'
      L340:
        expect: true
        expr: '(^|\n)([^\n]+:340:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar")[^\n]*\n?)+'
      L341:
        expect: true
        expr: '(^|\n)([^\n]+:341:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar")[^\n]*\n?)+'
      L342:
        expect: true
        expr: '(^|\n)([^\n]+:342:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*scalar and rank-1")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*scalar and rank-1")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*scalar and rank-1")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*scalar and rank-1")[^\n]*\n?)+'
test_udr8_243:
  build:
    cflags: "-O  -fmax-errors=1000 -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/udr8.f90'
    sources:
      binary: udr8.s
  group: GRPSERIAL
  validate:
    match:
      L120:
        expect: true
        expr: '(^|\n)([^\n]+:120:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*scalar and rank-1")[^\n]*\n?)+'
      L121:
        expect: true
        expr: '(^|\n)([^\n]+:121:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*scalar and rank-1")[^\n]*\n?)+'
      L122:
        expect: true
        expr: '(^|\n)([^\n]+:122:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*scalar and rank-1")[^\n]*\n?)+'
      L123:
        expect: true
        expr: '(^|\n)([^\n]+:123:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*scalar and rank-1")[^\n]*\n?)+'
      L167:
        expect: true
        expr: '(^|\n)([^\n]+:167:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment")[^\n]*\n?)+'
      L168:
        expect: true
        expr: '(^|\n)([^\n]+:168:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar")[^\n]*\n?)+'
      L169:
        expect: true
        expr: '(^|\n)([^\n]+:169:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar")[^\n]*\n?)+'
      L170:
        expect: true
        expr: '(^|\n)([^\n]+:170:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment")[^\n]*\n?)+'
      L198:
        expect: true
        expr: '(^|\n)([^\n]+:198:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment")[^\n]*\n?)+'
      L199:
        expect: true
        expr: '(^|\n)([^\n]+:199:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar")[^\n]*\n?)+'
      L200:
        expect: true
        expr: '(^|\n)([^\n]+:200:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar")[^\n]*\n?)+'
      L201:
        expect: true
        expr: '(^|\n)([^\n]+:201:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment")[^\n]*\n?)+'
      L229:
        expect: true
        expr: '(^|\n)([^\n]+:229:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment")[^\n]*\n?)+'
      L230:
        expect: true
        expr: '(^|\n)([^\n]+:230:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar")[^\n]*\n?)+'
      L231:
        expect: true
        expr: '(^|\n)([^\n]+:231:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar")[^\n]*\n?)+'
      L232:
        expect: true
        expr: '(^|\n)([^\n]+:232:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment")[^\n]*\n?)+'
      L260:
        expect: true
        expr: '(^|\n)([^\n]+:260:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment")[^\n]*\n?)+'
      L261:
        expect: true
        expr: '(^|\n)([^\n]+:261:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar")[^\n]*\n?)+'
      L262:
        expect: true
        expr: '(^|\n)([^\n]+:262:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar")[^\n]*\n?)+'
      L263:
        expect: true
        expr: '(^|\n)([^\n]+:263:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment")[^\n]*\n?)+'
      L276:
        expect: true
        expr: '(^|\n)([^\n]+:276:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Different shape
          for array assignment at \\[^\\n\\r]* on dimension 1 .9 and 10")[^\n]*\n?)+'
      L277:
        expect: true
        expr: '(^|\n)([^\n]+(:277:)[^\n]*[0-9]+: warning:[^\n]*("Actual argument contains
          too few elements for dummy argument \\[^\\n\\r]* .9/10")[^\n]*\n?)+'
      L278:
        expect: true
        expr: '(^|\n)([^\n]+(:278:)[^\n]*[0-9]+: warning:[^\n]*("Actual argument contains
          too few elements for dummy argument \\[^\\n\\r]* .9/10")[^\n]*\n?)+'
      L279:
        expect: true
        expr: '(^|\n)([^\n]+(:279:)[^\n]*[0-9]+: warning:[^\n]*("Actual argument contains
          too few elements for dummy argument \\[^\\n\\r]* .9/10")[^\n]*\n?)+'
      L280:
        expect: true
        expr: '(^|\n)([^\n]+:280:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Different shape
          for array assignment at \\[^\\n\\r]* on dimension 1 .9 and 10")[^\n]*\n?)+'
      L281:
        expect: true
        expr: '(^|\n)([^\n]+(:281:)[^\n]*[0-9]+: warning:[^\n]*("Actual argument contains
          too few elements for dummy argument \\[^\\n\\r]* .9/10")[^\n]*\n?)+'
      L293:
        expect: true
        expr: '(^|\n)([^\n]+:293:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Actual argument
          for \\[^\\n\\r]* must be ALLOCATABLE")[^\n]*\n?)+'
      L294:
        expect: true
        expr: '(^|\n)([^\n]+:294:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Actual argument
          for \\[^\\n\\r]* must be ALLOCATABLE")[^\n]*\n?)+'
      L295:
        expect: true
        expr: '(^|\n)([^\n]+:295:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Actual argument
          for \\[^\\n\\r]* must be ALLOCATABLE")[^\n]*\n?)+'
      L296:
        expect: true
        expr: '(^|\n)([^\n]+:296:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Actual argument
          for \\[^\\n\\r]* must be ALLOCATABLE")[^\n]*\n?)+'
      L308:
        expect: true
        expr: '(^|\n)([^\n]+:308:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment")[^\n]*\n?)+'
      L309:
        expect: true
        expr: '(^|\n)([^\n]+:309:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar")[^\n]*\n?)+'
      L310:
        expect: true
        expr: '(^|\n)([^\n]+:310:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar")[^\n]*\n?)+'
      L311:
        expect: true
        expr: '(^|\n)([^\n]+:311:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment")[^\n]*\n?)+'
      L339:
        expect: true
        expr: '(^|\n)([^\n]+:339:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment")[^\n]*\n?)+'
      L340:
        expect: true
        expr: '(^|\n)([^\n]+:340:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar")[^\n]*\n?)+'
      L341:
        expect: true
        expr: '(^|\n)([^\n]+:341:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar")[^\n]*\n?)+'
      L342:
        expect: true
        expr: '(^|\n)([^\n]+:342:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment")[^\n]*\n?)+'
      L90:
        expect: true
        expr: '(^|\n)([^\n]+:90:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*scalar and rank-1")[^\n]*\n?)+'
      L91:
        expect: true
        expr: '(^|\n)([^\n]+:91:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*scalar and rank-1")[^\n]*\n?)+'
      L92:
        expect: true
        expr: '(^|\n)([^\n]+:92:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*scalar and rank-1")[^\n]*\n?)+'
      L93:
        expect: true
        expr: '(^|\n)([^\n]+:93:[^\n]*[0-9]+: (fatal )?error:[^\n]*("Rank mismatch
          in argument\\[^\\n\\r]*scalar and rank-1")[^\n]*\n?)+'
test_workshare1_121:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/workshare1.f90'
    sources:
      binary: workshare1.s
  group: GRPSERIAL
  validate:
    match:
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("CALL statement")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-ELEMENTAL")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-ELEMENTAL")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-ELEMENTAL")[^\n]*\n?)+'
test_workshare1_244:
  build:
    cflags: "-O  -fopenmp -Wno-hsa\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/workshare1.f90'
    sources:
      binary: workshare1.s
  group: GRPSERIAL
  validate:
    match:
      L34:
        expect: true
        expr: '(^|\n)([^\n]+:34:[^\n]*[0-9]+: (fatal )?error:[^\n]*("CALL statement")[^\n]*\n?)+'
      L35:
        expect: true
        expr: '(^|\n)([^\n]+:35:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-ELEMENTAL")[^\n]*\n?)+'
      L37:
        expect: true
        expr: '(^|\n)([^\n]+:37:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-ELEMENTAL")[^\n]*\n?)+'
      L40:
        expect: true
        expr: '(^|\n)([^\n]+:40:[^\n]*[0-9]+: (fatal )?error:[^\n]*("non-ELEMENTAL")[^\n]*\n?)+'
test_workshare2_122:
  build:
    cflags: "-O  -fopenmp -ffrontend-optimize -fdump-tree-original\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/workshare2.f90'
    sources:
      binary: workshare2.s
  group: GRPSERIAL
test_workshare2_245:
  build:
    cflags: "-O  -fopenmp -ffrontend-optimize -fdump-tree-original\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/workshare2.f90'
    sources:
      binary: workshare2.s
  group: GRPSERIAL
test_workshare3_123:
  build:
    cflags: "-O  -ffrontend-optimize -fdump-tree-original -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/workshare3.f90'
    sources:
      binary: workshare3.s
  group: GRPSERIAL
test_workshare3_246:
  build:
    cflags: "-O  -ffrontend-optimize -fdump-tree-original -fopenmp\n -S"
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/workshare3.f90'
    sources:
      binary: workshare3.s
  group: GRPSERIAL
