---
test_affinity-1_1:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/affinity-1.f90'
    sources:
      binary: affinity-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_allocatable_components_1_2:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/allocatable_components_1.f90'
    sources:
      binary: allocatable_components_1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_associate1_3:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/associate1.f90'
    sources:
      binary: associate1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ASSOCIATE name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ASSOCIATE name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ASSOCIATE name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ASSOCIATE name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ASSOCIATE name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ASSOCIATE name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ASSOCIATE name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ASSOCIATE name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ASSOCIATE name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ASSOCIATE name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ASSOCIATE name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ASSOCIATE name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ASSOCIATE name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ASSOCIATE name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ASSOCIATE name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ASSOCIATE name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ASSOCIATE name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ASSOCIATE name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ASSOCIATE name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ASSOCIATE name))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_block-1_4:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/block-1.f90'
    sources:
      binary: block-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid (exit|branch)))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_collapse1_5:
  build:
    cflags: '  -O  -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/collapse1.f90'
    sources:
      binary: collapse1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not enough DO loops for collapsed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(collapsed loops don.t form rectangular iteration space))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(iteration variable present on clause other than PRIVATE or LASTPRIVATE))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot be a DO WHILE or DO without loop control))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot be redefined inside loop beginning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(collapsed loops don.t form rectangular iteration space|cannot be redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(iteration variable must be of type integer" "integer))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(must be integer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_crayptr1_6:
  build:
    cflags: '  -O  -fopenmp -fcray-pointer -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/crayptr1.f90'
    sources:
      binary: crayptr1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp -fcray-pointer"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Cray pointee 'a' in SHARED clause))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Cray pointee 'b' in PRIVATE clause))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Cray pointee 'c' in FIRSTPRIVATE clause))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Cray pointee 'd' in LASTPRIVATE clause))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Cray pointee 'a' in REDUCTION clause))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Cray pointer 'ip1' in REDUCTION clause))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_crayptr2_7:
  build:
    cflags: '  -O  -fopenmp -fcray-pointer -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/crayptr2.f90'
    sources:
      binary: crayptr2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp -fcray-pointer"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(CRAY POINTEE attribute conflicts with THREADPRIVATE))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_crayptr3_8:
  build:
    cflags: '  -O  -fopenmp -fcray-pointer -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/crayptr3.f90'
    sources:
      binary: crayptr3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp -fcray-pointer"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enclosing 'parallel'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('ip' not specified in enclosing 'parallel'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_crayptr4_9:
  build:
    cflags: '  -O  -fopenmp -fcray-pointer -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/crayptr4.f90'
    sources:
      binary: crayptr4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp -fcray-pointer"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_crayptr5_10:
  build:
    cflags: '  -O  -fopenmp -fcray-pointer -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/crayptr5.f90'
    sources:
      binary: crayptr5.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp -fcray-pointer"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declare-simd-1_11:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/declare-simd-1.f90'
    sources:
      binary: declare-simd-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unclassifiable OpenMP directive))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(should refer to containing procedure))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declare-simd-2_12:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/declare-simd-2.f90'
    sources:
      binary: declare-simd-2.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declare-target-1_13:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/declare-target-1.f90'
    sources:
      binary: declare-target-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declare-target-2_14:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/declare-target-2.f90'
    sources:
      binary: declare-target-2.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(TO clause and later in LINK))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(TO clause and later in LINK))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(LINK clause and later in TO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(mentioned multiple times in clauses of the same))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(mentioned multiple times in clauses of the same))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(mentioned multiple times in clauses of the same))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(form without clauses is allowed in interface block))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(form without clauses is allowed in interface block))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(isn.t SAVEd))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(attribute conflicts))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(attribute conflicts))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is an element of a COMMON block))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(TO clause and later in LINK))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(LINK clause and later in TO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(mentioned multiple times in clauses of the same))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(mentioned multiple times in clauses of the same))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(mentioned multiple times in clauses of the same))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(mentioned multiple times in clauses of the same))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_depend-1_15:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/depend-1.f90'
    sources:
      binary: depend-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rightmost upper bound of assumed size array section|proper array section))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_do-1_16:
  build:
    cflags: '  -O  -O -fopenmp -fdump-tree-omplower -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/do-1.f90'
    sources:
      binary: do-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fopenmp -fdump-tree-omplower"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fixed-1_17:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/fixed-1.f'
    sources:
      binary: fixed-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_free-1_18:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/free-1.f90'
    sources:
      binary: free-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_free-2_19:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/free-2.f90'
    sources:
      binary: free-2.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(starts a commented line))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(starts a commented line))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(starts a commented line))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gridify-1_20:
  build:
    cflags: '  -O  -fopenmp -fdump-tree-omplower-details -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/gridify-1.f90'
    sources:
      binary: gridify-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp -fdump-tree-omplower-details"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_intentin1_21:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/intentin1.f90'
    sources:
      binary: intentin1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(INTENT.IN. POINTER))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(INTENT.IN. POINTER))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(INTENT.IN. POINTER))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(INTENT.IN. POINTER))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_linear-1_22:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/linear-1.f90'
    sources:
      binary: linear-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(LINEAR clause modifier used on DO or SIMD construct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(LINEAR clause modifier used on DO or SIMD construct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(LINEAR clause modifier used on DO or SIMD construct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(LINEAR clause modifier used on DO or SIMD construct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(LINEAR clause modifier used on DO or SIMD construct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(LINEAR clause modifier used on DO or SIMD construct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(LINEAR clause modifier used on DO or SIMD construct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(LINEAR clause modifier used on DO or SIMD construct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(LINEAR clause modifier used on DO or SIMD construct))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_map-1_23:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/map-1.f90'
    sources:
      binary: map-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Object 'p' is not a variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Stride should not be specified for array section in MAP clause))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rightmost upper bound of assumed size array section not specified" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('aas' in MAP clause at \\\(1\\\) is not a proper array section" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rightmost upper bound of assumed size array section not specified" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('aas' in MAP clause at \\\(1\\\) is not a proper array section" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Assumed size array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in array reference" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('k' in MAP clause at \\\(1\\\) is not a proper array section" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in array reference" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('k' in MAP clause at \\\(1\\\) is not a proper array section" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Syntax error in OpenMP variable list))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unexpected !\\\$OMP END TARGET statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Syntax error in OpenMP variable list))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unexpected !\\\$OMP END TARGET statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Syntax error in OpenMP variable list))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unexpected !\\\$OMP END TARGET statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Syntax error in OpenMP variable list))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unexpected !\\\$OMP END TARGET statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(THREADPRIVATE object 'tp' in MAP clause))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(out of bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(out of bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(out of bounds))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_omp_atomic1_24:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_atomic1.f90'
    sources:
      binary: omp_atomic1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must set a scalar variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment operator must be))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reference))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not mathematically equivalent to))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment intrinsic must be))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(intrinsic arguments except one))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(intrinsic argument must be 'a'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment must have an operator))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_omp_atomic2_25:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_atomic2.f90'
    sources:
      binary: omp_atomic2.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_omp_clauses1_26:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_clauses1.f90'
    sources:
      binary: omp_clauses1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('j' present on multiple clauses))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('j' present on multiple clauses))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('i' present on multiple clauses))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('\[jk\]' present on multiple clauses))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('i' present on multiple clauses))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('\[jk\]' present on multiple clauses))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_omp_do1_27:
  build:
    cflags: '  -O  -fopenmp -std=gnu -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_do1.f90'
    sources:
      binary: omp_do1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp -std=gnu"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot be a DO WHILE or DO without loop control))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(EXIT statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot be a DO WHILE or DO without loop control))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(EXIT statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot be a DO WHILE or DO without loop control))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot be a DO WHILE or DO without loop control))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(EXIT statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(EXIT statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(leaving OpenMP structured block))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(iteration variable present on clause))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(iteration variable must be of type integer" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(iteration variable must be of type integer" "))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(Deleted feature: Loop variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(Deleted feature: Loop variable))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_omp_do_concurrent_28:
  build:
    cflags: '  -O  -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_do_concurrent.f90'
    sources:
      binary: omp_do_concurrent.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DO cannot be a DO CONCURRENT loop))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_omp_parallel_1_29:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_parallel_1.f90'
    sources:
      binary: omp_parallel_1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_omp_parse1_30:
  build:
    cflags: '  -O  -fopenmp -fdump-tree-omplower -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_parse1.f90'
    sources:
      binary: omp_parse1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp -fdump-tree-omplower"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_omp_parse2_31:
  build:
    cflags: '  -O  -fopenmp -fdump-tree-omplower -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_parse2.f'
    sources:
      binary: omp_parse2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp -fdump-tree-omplower"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_omp_threadprivate1_32:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_threadprivate1.f90'
    sources:
      binary: omp_threadprivate1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not found))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not found))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_omp_threadprivate2_33:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/omp_threadprivate2.f90'
    sources:
      binary: omp_threadprivate2.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(isn't SAVEd))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_openmp-simd-1_34:
  build:
    cflags: '  -O  -fno-openmp -fopenmp-simd -fdump-tree-original -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/openmp-simd-1.f90'
    sources:
      binary: openmp-simd-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fno-openmp -fopenmp-simd -fdump-tree-original -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_openmp-simd-2_35:
  build:
    cflags: '  -O  -fopenmp -fopenmp-simd -fdump-tree-original -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/openmp-simd-2.f90'
    sources:
      binary: openmp-simd-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp -fopenmp-simd -fdump-tree-original -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_openmp-simd-3_36:
  build:
    cflags: '  -O  -fopenmp -fno-openmp-simd -fdump-tree-original -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/openmp-simd-3.f90'
    sources:
      binary: openmp-simd-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp -fno-openmp-simd -fdump-tree-original -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_order-1_37:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/order-1.f90'
    sources:
      binary: order-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_order-2_38:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/order-2.f90'
    sources:
      binary: order-2.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unexpected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unexpected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unexpected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unexpected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unexpected))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr26224_39:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr26224.f'
    sources:
      binary: pr26224.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29759_40:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr29759.f90'
    sources:
      binary: pr29759.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unclassifiable OpenMP))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unclassifiable|Invalid character))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unexpected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unclassifiable OpenMP))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unclassifiable|Invalid character))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unexpected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unclassifiable OpenMP))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unclassifiable|Invalid character))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unexpected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unclassifiable OpenMP))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unclassifiable|Invalid character))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unexpected))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33439_41:
  build:
    cflags: '  -O  -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr33439.f90'
    sources:
      binary: pr33439.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enclosing 'parallel'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not specified in enclosing 'parallel'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enclosing 'parallel'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not specified in enclosing 'parallel'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enclosing 'parallel'))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35786-1_42:
  build:
    cflags: '  -O  -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr35786-1.f90'
    sources:
      binary: pr35786-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a variable))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35786-2_43:
  build:
    cflags: '  -O  -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr35786-2.f90'
    sources:
      binary: pr35786-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36726_44:
  build:
    cflags: '  -O  -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr36726.f90'
    sources:
      binary: pr36726.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39152_45:
  build:
    cflags: '  -O  -march=i486 -fopenmp -mavx -O3 -funroll-all-loops -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr39152.f90'
    sources:
      binary: pr39152.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-march=i486 -fopenmp -mavx -O3 -funroll-all-loops"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39354_46:
  build:
    cflags: '  -O  -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr39354.f90'
    sources:
      binary: pr39354.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40878-1_47:
  build:
    cflags: '  -O  -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr40878-1.f90'
    sources:
      binary: pr40878-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Constant expression required))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Constant expression required))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not constant positive integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not constant positive integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not constant positive integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not constant positive integer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40878-2_48:
  build:
    cflags: '  -O  -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr40878-2.f90'
    sources:
      binary: pr40878-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41344_49:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr41344.f'
    sources:
      binary: pr41344.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid (exit|branch)))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43337_50:
  build:
    cflags: '  -O  -fopenmp -O2 -g -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr43337.f90'
    sources:
      binary: pr43337.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp -O2 -g"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43711_51:
  build:
    cflags: '  -O  -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr43711.f90'
    sources:
      binary: pr43711.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unexpected junk))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43836_52:
  build:
    cflags: '  -O  -fopenmp -fexceptions -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr43836.f90'
    sources:
      binary: pr43836.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp -fexceptions -O2"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44036-1_53:
  build:
    cflags: '  -O  -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr44036-1.f90'
    sources:
      binary: pr44036-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enclosing 'parallel'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not specified in))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enclosing 'parallel'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not specified in))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44036-2_54:
  build:
    cflags: '  -O  -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr44036-2.f90'
    sources:
      binary: pr44036-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44036-3_55:
  build:
    cflags: '  -O  -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr44036-3.f90'
    sources:
      binary: pr44036-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a variable))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44536_56:
  build:
    cflags: '  -O  -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr44536.f90'
    sources:
      binary: pr44536.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enclosing 'parallel'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not specified in))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44847_57:
  build:
    cflags: '  -O  -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr44847.f90'
    sources:
      binary: pr44847.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(CYCLE statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(CYCLE statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(EXIT statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(EXIT statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(EXIT statement))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45172_58:
  build:
    cflags: '  -O  -O -fopenmp -fexceptions -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr45172.f90'
    sources:
      binary: pr45172.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fopenmp -fexceptions"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45595_59:
  build:
    cflags: '  -O  -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr45595.f90'
    sources:
      binary: pr45595.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not enough DO loops))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45597_60:
  build:
    cflags: '  -O  -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr45597.f90'
    sources:
      binary: pr45597.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47331_61:
  build:
    cflags: '  -O  -fopenmp -fwhole-file -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr47331.f90'
    sources:
      binary: pr47331.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp -fwhole-file"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48117_62:
  build:
    cflags: '  -O  -O2 -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr48117.f90'
    sources:
      binary: pr48117.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fopenmp"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48611_63:
  build:
    cflags: '  -O  -Os -fopenmp -fexceptions -fno-tree-ccp -fno-tree-copy-prop -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr48611.f90'
    sources:
      binary: pr48611.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fopenmp -fexceptions -fno-tree-ccp -fno-tree-copy-prop"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48794-2_64:
  build:
    cflags: '  -O  -Os -fopenmp -fexceptions -fno-tree-ccp -fno-tree-copy-prop -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr48794-2.f90'
    sources:
      binary: pr48794-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fopenmp -fexceptions -fno-tree-ccp -fno-tree-copy-prop"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48794_65:
  build:
    cflags: '  -O  -Os -fopenmp -fexceptions -fno-tree-ccp -fno-tree-copy-prop -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr48794.f90'
    sources:
      binary: pr48794.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-Os -fopenmp -fexceptions -fno-tree-ccp -fno-tree-copy-prop"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51089_66:
  build:
    cflags: '  -O  -O -fexceptions -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr51089.f90'
    sources:
      binary: pr51089.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fexceptions -fopenmp"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52531_67:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr52531.f90'
    sources:
      binary: pr52531.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56052_68:
  build:
    cflags: '  -O  -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr56052.f90'
    sources:
      binary: pr56052.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57089_69:
  build:
    cflags: '  -O  -O -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr57089.f90'
    sources:
      binary: pr57089.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O -fopenmp"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59467_70:
  build:
    cflags: '  -O  -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr59467.f90'
    sources:
      binary: pr59467.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not threadprivate or private in outer context))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59488-1_71:
  build:
    cflags: '  -O  -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr59488-1.f90'
    sources:
      binary: pr59488-1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59488-2_72:
  build:
    cflags: '  -O  -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr59488-2.f90'
    sources:
      binary: pr59488-2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr62131_73:
  build:
    cflags: '  -O  -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr62131.f90'
    sources:
      binary: pr62131.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66633_74:
  build:
    cflags: '  -O  -O0 -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr66633.f90'
    sources:
      binary: pr66633.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-O0 -fopenmp"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69128_75:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr69128.f90'
    sources:
      binary: pr69128.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69183_76:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr69183.f90'
    sources:
      binary: pr69183.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69281_77:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -fstack-arrays -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr69281.f90'
    sources:
      binary: pr69281.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70855_78:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr70855.f90'
    sources:
      binary: pr70855.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71687_79:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -fstack-arrays -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr71687.f90'
    sources:
      binary: pr71687.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71704_80:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr71704.f90'
    sources:
      binary: pr71704.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71705_81:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr71705.f90'
    sources:
      binary: pr71705.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71758_82:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr71758.f90'
    sources:
      binary: pr71758.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr72716_83:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr72716.f90'
    sources:
      binary: pr72716.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(statement is not allowed inside of BLOCK DATA))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr72744_84:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -Ofast -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr72744.f90'
    sources:
      binary: pr72744.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77352_85:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -fstack-arrays -O2 -fopenacc -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr77352.f90'
    sources:
      binary: pr77352.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77374_86:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr77374.f08'
    sources:
      binary: pr77374.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must have the pointer attribute))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unexpected))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77500_87:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr77500.f90'
    sources:
      binary: pr77500.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77516_88:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr77516.f90'
    sources:
      binary: pr77516.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(must be positive))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77665_89:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr77665.f90'
    sources:
      binary: pr77665.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77666_90:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr77666.f90'
    sources:
      binary: pr77666.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77973_91:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr77973.f90'
    sources:
      binary: pr77973.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78026_92:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr78026.f03'
    sources:
      binary: pr78026.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:2:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Selector shall be polymorphic in SELECT TYPE statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unexpected !.OMP DECLARE SIMD statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(should refer to containing procedure" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78298_93:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -O2 -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr78298.f90'
    sources:
      binary: pr78298.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78299_94:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -fcheck=bounds -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr78299.f90'
    sources:
      binary: pr78299.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(is out of bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(is out of bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(is out of bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(is out of bounds))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78866-1_95:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr78866-1.f90'
    sources:
      binary: pr78866-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Assumed size array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Assumed size array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Assumed size array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Assumed size array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(upper bound of assumed size array section))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not a proper array section" "))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78866-2_96:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr78866-2.f90'
    sources:
      binary: pr78866-2.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(implicit mapping of assumed size array))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79154-1_97:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr79154-1.f90'
    sources:
      binary: pr79154-1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79154-2_98:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr79154-2.f90'
    sources:
      binary: pr79154-2.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(may not appear in PURE or ELEMENTAL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(may not appear in PURE or ELEMENTAL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(may not appear in PURE or ELEMENTAL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(may not appear in PURE or ELEMENTAL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(may not appear in PURE or ELEMENTAL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(may not appear in PURE or ELEMENTAL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(may not appear in PURE or ELEMENTAL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(may not appear in PURE or ELEMENTAL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(may not appear in PURE or ELEMENTAL))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80918_99:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/pr80918.f90'
    sources:
      binary: pr80918.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_proc_ptr_1_100:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/proc_ptr_1.f90'
    sources:
      binary: proc_ptr_1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_proc_ptr_2_101:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/proc_ptr_2.f90'
    sources:
      binary: proc_ptr_2.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Procedure pointer|not found))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be INTEGER))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_reduction1_102:
  build:
    cflags: '  -O  -fopenmp -fmax-errors=100 -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/reduction1.f90'
    sources:
      binary: reduction1.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp -fmax-errors=100"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Syntax error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unexpected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(THREADPRIVATE object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(POINTER object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Assumed size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found for type))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_reduction2_103:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/reduction2.f90'
    sources:
      binary: reduction2.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_reduction3_104:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/reduction3.f90'
    sources:
      binary: reduction3.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OMP DECLARE REDUCTION\[^\n\r\]*not found))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_schedule-1_105:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/schedule-1.f90'
    sources:
      binary: schedule-1.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(must be positive))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(must be positive))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sharing-1_106:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/sharing-1.f90'
    sources:
      binary: sharing-1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enclosing 'parallel'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not specified in))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not specified in))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not specified in))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sharing-2_107:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/sharing-2.f90'
    sources:
      binary: sharing-2.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enclosing 'parallel'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not specified in))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enclosing 'parallel'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not specified in))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not specified in))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not specified in))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enclosing 'parallel'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not specified in))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enclosing 'parallel'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not specified in))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enclosing 'parallel'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not specified in))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sharing-3_108:
  build:
    cflags: '  -O  -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/sharing-3.f90'
    sources:
      binary: sharing-3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enclosing 'parallel'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not specified))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sharing-4_109:
  build:
    cflags: '  -O  -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/sharing-4.f90'
    sources:
      binary: sharing-4.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_target1_110:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/target1.f90'
    sources:
      binary: target1.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_target2_111:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -ffree-line-length-160 -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/target2.f90'
    sources:
      binary: target2.s
  group: GRPSERIAL
  info: {}
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_target3_112:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/target3.f90'
    sources:
      binary: target3.s
  group: GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(.target. construct inside of .target. region))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_udr1_113:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/udr1.f90'
    sources:
      binary: udr1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Invalid operator for))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(foo not found))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot be used as a defined operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unclassifiable OpenMP directive))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Invalid character in name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Invalid character in name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Variable other than OMP_OUT or OMP_IN used in combiner))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Variable other than OMP_PRIV or OMP_ORIG used in INITIALIZER clause))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_udr2_114:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/udr2.f90'
    sources:
      binary: udr2.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unclassifiable OpenMP directive))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unclassifiable OpenMP directive))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unclassifiable OpenMP directive))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Operands of logical operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unclassifiable OpenMP directive))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(One of actual subroutine arguments in INITIALIZER clause))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(which is not consistent with the CALL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(which is not consistent with the CALL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(which is not consistent with the CALL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Variable other than OMP_OUT or OMP_IN used in combiner))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Variable other than OMP_PRIV or OMP_ORIG used in INITIALIZER clause))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_udr3_115:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/udr3.f90'
    sources:
      binary: udr3.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Previous !.OMP DECLARE REDUCTION))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of !.OMP DECLARE REDUCTION))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of !.OMP DECLARE REDUCTION|Previous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of !.OMP DECLARE REDUCTION|Previous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Previous !.OMP DECLARE REDUCTION))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of !.OMP DECLARE REDUCTION))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Previous !.OMP DECLARE REDUCTION))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of !.OMP DECLARE REDUCTION))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of !.OMP DECLARE REDUCTION|Previous))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_udr4_116:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/udr4.f90'
    sources:
      binary: udr4.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unclassifiable OpenMP directive))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unclassifiable OpenMP directive))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unclassifiable OpenMP directive))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unclassifiable OpenMP directive))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Unexpected junk after))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Implicitly declared subroutine omp_priv))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Implicitly declared subroutine bar used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Implicitly declared subroutine omp_out used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Implicitly declared subroutine bar used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Implicitly declared function omp_orig used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Implicitly declared function foo used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Implicitly declared function omp_in used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Implicitly declared function baz used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Subroutine call with alternate returns in combiner))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Subroutine call with alternate returns in INITIALIZER clause))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot appear in the expression|not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Missing INITIALIZER clause for !.OMP DECLARE REDUCTION of derived type without default initializer))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_udr5_117:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/udr5.f90'
    sources:
      binary: udr5.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Previous !.OMP DECLARE REDUCTION|Ambiguous interfaces))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Ambiguous !.OMP DECLARE REDUCTION|Ambiguous interfaces))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_udr6_118:
  build:
    cflags: '  -O  -fmax-errors=1000 -fopenmp -ffree-line-length-160 -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/udr6.f90'
    sources:
      binary: udr6.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fmax-errors=1000 -fopenmp -ffree-line-length-160"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:131:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:133:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:134:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:135:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:136:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:150:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Redefinition of predefined))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_udr7_119:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/udr7.f90'
    sources:
      binary: udr7.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Previous !.OMP DECLARE REDUCTION|Ambiguous interfaces))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Ambiguous !.OMP DECLARE REDUCTION|Ambiguous interfaces))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_udr8_120:
  build:
    cflags: '  -O  -fmax-errors=1000 -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/udr8.f90'
    sources:
      binary: udr8.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fmax-errors=1000 -fopenmp"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*scalar and rank-1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*scalar and rank-1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*scalar and rank-1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*scalar and rank-1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*scalar and rank-1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*scalar and rank-1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*scalar and rank-1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*scalar and rank-1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*rank-1 and scalar))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*rank-1 and scalar))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:170:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:199:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*rank-1 and scalar))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*rank-1 and scalar))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:201:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:229:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:230:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*rank-1 and scalar))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:231:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*rank-1 and scalar))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:232:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:260:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:261:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*rank-1 and scalar))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:262:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*rank-1 and scalar))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:263:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:276:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Different shape for array assignment at \[^\n\r]* on dimension 1 .9 and 10))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:280:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Different shape for array assignment at \[^\n\r]* on dimension 1 .9 and 10))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:293:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Actual argument for \[^\n\r]* must be ALLOCATABLE))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:294:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Actual argument for \[^\n\r]* must be ALLOCATABLE))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:295:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Actual argument for \[^\n\r]* must be ALLOCATABLE))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:296:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Actual argument for \[^\n\r]* must be ALLOCATABLE))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:308:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:309:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*rank-1 and scalar))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:310:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*rank-1 and scalar))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:311:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:339:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:340:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*rank-1 and scalar))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:341:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*rank-1 and scalar))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:342:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Rank mismatch in argument\[^\n\r]*rank-1 and scalar|Incompatible ranks 0 and 1 in assignment))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:277:)[^
        ]*([0-9]+: warning:[^
        ]*(Actual argument contains too few elements for dummy argument \[^\n\r]* .9/10))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:278:)[^
        ]*([0-9]+: warning:[^
        ]*(Actual argument contains too few elements for dummy argument \[^\n\r]* .9/10))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:279:)[^
        ]*([0-9]+: warning:[^
        ]*(Actual argument contains too few elements for dummy argument \[^\n\r]* .9/10))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:281:)[^
        ]*([0-9]+: warning:[^
        ]*(Actual argument contains too few elements for dummy argument \[^\n\r]* .9/10))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_workshare1_121:
  build:
    cflags: '  -O  -fopenmp -Wno-hsa -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/workshare1.f90'
    sources:
      binary: workshare1.s
  group: GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(CALL statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-ELEMENTAL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-ELEMENTAL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-ELEMENTAL))[^
        ]*
        ?)+
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_workshare2_122:
  build:
    cflags: '  -O  -fopenmp -ffrontend-optimize -fdump-tree-original -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/workshare2.f90'
    sources:
      binary: workshare2.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp -ffrontend-optimize -fdump-tree-original"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_workshare3_123:
  build:
    cflags: '  -O  -ffrontend-optimize -fdump-tree-original -fopenmp -S'
    files: '@ROOTPATH@/compilers/gcc/./gfortran.dg/gomp/workshare3.f90'
    sources:
      binary: workshare3.s
  group: GRPSERIAL
  info:
    extraopts:
      - '"-ffrontend-optimize -fdump-tree-original -fopenmp"'
  validate:
    script:
      path: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
